{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","path":"css/gitalk.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight-dark.styl","path":"css/highlight-dark.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","path":"img/default.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/fluid.png","path":"img/fluid.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","path":"img/loading.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","path":"img/police_beian.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","path":"js/boot.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","path":"js/color-schema.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","path":"js/events.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","path":"js/img-lazyload.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","path":"js/leancloud.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","path":"js/plugins.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","path":"xml/local-search.xml","modified":0,"renderable":1},{"_id":"source/img/default.png","path":"img/default.png","modified":0,"renderable":0},{"_id":"source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/_posts/SSH.md","hash":"04139727bb9102f4b5790f82fb849def95d9a6d8","modified":1701935096713},{"_id":"source/_posts/SSHInSubSocks.md","hash":"eedf2f38e7b83a93e1fd7183d697b83740eb1a25","modified":1701935048102},{"_id":"source/_posts/WSL.md","hash":"de5765efa9b20d856fcf238fc0d82a758c87689d","modified":1701243737638},{"_id":"source/_posts/golangSerial.md","hash":"874f401dbb9de2b80e9275d937bc9b05a0c548f9","modified":1701935473014},{"_id":"source/about/index.md","hash":"b3f3b5d2891d31951960df576f50dbe17b488594","modified":1701935817234},{"_id":"source/_posts/SSHInSubSocks/wireshark.png","hash":"7c236d52442b1bcb43da0647a81c030a9002b90a","modified":1700724375112},{"_id":"themes/BlueLake/.gitignore","hash":"49f574312f050162fef2ac80f72b5a9c136c62a8","modified":1700465542305},{"_id":"themes/BlueLake/README.md","hash":"40257843a1c8101428385e5238f96515450a222f","modified":1700465542305},{"_id":"themes/BlueLake/LICENSE","hash":"4c3927c82d0aa4fac5cdf945e07afe5e24335891","modified":1700465542305},{"_id":"themes/BlueLake/_config.yml","hash":"8c73a001fa62b122841fca638806684a2865483c","modified":1701394692097},{"_id":"themes/BlueLake/package.json","hash":"d8780159f11aac366285889372ccdb007095da07","modified":1700465542321},{"_id":"themes/BlueLake/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1700465542321},{"_id":"themes/BlueLake/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1700465542321},{"_id":"themes/BlueLake/layout/index.ejs","hash":"e64b89e7c769e9b43cf6dd6d4bdd2f7ba03a4df9","modified":1700472409324},{"_id":"themes/BlueLake/layout/page.ejs","hash":"cc86a83b9edfa0ec21a1d6a1c99e0f772a064ed9","modified":1700465542321},{"_id":"themes/BlueLake/layout/layout.ejs","hash":"0ff64fb4c4ab14af7fe597ea78265d1f09cb11eb","modified":1700465542321},{"_id":"themes/BlueLake/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1700465542321},{"_id":"themes/BlueLake/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1700465542321},{"_id":"themes/BlueLake/languages/de-DE.yml","hash":"12d3ec934c9afa32aef174c6c7113e605a3a0b39","modified":1700465542305},{"_id":"themes/BlueLake/languages/en.yml","hash":"96f429d32c0857e956aebfe0c28883afd9163a49","modified":1700465542309},{"_id":"themes/BlueLake/languages/fr-FR.yml","hash":"e52b9716f45bb83e7c06898f7802df8cbed109e3","modified":1700465542309},{"_id":"themes/BlueLake/languages/es-ES.yml","hash":"e28a412b9b98e74bdf79b77f244a4c4be412a83a","modified":1700465542309},{"_id":"themes/BlueLake/languages/ko.yml","hash":"dc110fdf5663fe510c30c6b4e6a057726b4841d0","modified":1700465542309},{"_id":"themes/BlueLake/languages/zh-CN.yml","hash":"44b818febd84b2a2d07264ad2aa10d6bbad03ab4","modified":1700465542309},{"_id":"themes/BlueLake/languages/zh-TW.yml","hash":"757b269ca1a9b7b0745c15ece40d4354e4f792dd","modified":1700465542309},{"_id":"themes/BlueLake/languages/tr.yml","hash":"4f9f0c58d01cb74309c1913b01123aae80c82ec1","modified":1700465542309},{"_id":"themes/BlueLake/source/favicon.png","hash":"98f0ecbdcdc1a0e8e52f4d786cbc011e5e06fa65","modified":1700465542337},{"_id":"themes/BlueLake/layout/_partial/about.ejs","hash":"8f5f0c1cd5c8dd83e8de8a6704cb4fc3e75812f7","modified":1700476244380},{"_id":"themes/BlueLake/layout/_partial/after-footer.ejs","hash":"c0b8d95d827c6a797bb4d563506d9cbc9717099b","modified":1700465542309},{"_id":"themes/BlueLake/layout/_partial/archive-post.ejs","hash":"8565a0fcd38eff73af75e80f93f176ab8d9c08b9","modified":1700465542309},{"_id":"themes/BlueLake/layout/_partial/archive.ejs","hash":"4744116ed807129594fbf172b9919a2831070591","modified":1700465542309},{"_id":"themes/BlueLake/layout/_partial/baidu-analytics.ejs","hash":"c6c911f0796aaf1cddc7098ee21e5dc6206e1157","modified":1700465542313},{"_id":"themes/BlueLake/layout/_partial/commonts-script.ejs","hash":"d019f9f6380076008f58e758f44d8883f8f656bb","modified":1700465542313},{"_id":"themes/BlueLake/layout/_partial/article.ejs","hash":"2bfe0736ab64bcfb9fa66b2d13cfc908cf024809","modified":1700472885764},{"_id":"themes/BlueLake/layout/_partial/footer.ejs","hash":"3ac0d89d4412548268d00b7c5341a7fb9023ebbb","modified":1700473148570},{"_id":"themes/BlueLake/layout/_partial/gauges-analytics.ejs","hash":"165008f72ed77f0da879d132563d763369d26472","modified":1700465542313},{"_id":"themes/BlueLake/layout/_partial/google-analytics.ejs","hash":"9fc18f1fd5bec16f8a3d30b0ce38458485c398b3","modified":1700465542313},{"_id":"themes/BlueLake/layout/_partial/head.ejs","hash":"b412b842c97500972642b70131a788aaa823419d","modified":1700465542313},{"_id":"themes/BlueLake/layout/_partial/header.ejs","hash":"d59761b90a19171084eaf2b47cc01ff43dc05562","modified":1700472195884},{"_id":"themes/BlueLake/layout/_partial/pagination.ejs","hash":"c6f279e9bf3e20c2990b22ddbcbd3fed27c5b5bb","modified":1700465542313},{"_id":"themes/BlueLake/layout/_partial/sidebar.ejs","hash":"c70869569749a8f48cce202fa57926c06b55fdab","modified":1700465542317},{"_id":"themes/BlueLake/layout/_widget/archive.ejs","hash":"ec2d9bf37b9bb613524b702d49c3234f82cbf96f","modified":1700465542317},{"_id":"themes/BlueLake/layout/_widget/category.ejs","hash":"85d5afdfefb18b2b1a88ef074746cbf109658a6c","modified":1700465542317},{"_id":"themes/BlueLake/layout/_widget/links.ejs","hash":"33909a5d6a800f987eb97678d09d0a16d9a5a7b3","modified":1700465542317},{"_id":"themes/BlueLake/layout/_widget/recent_posts.ejs","hash":"598c278442022a08b8e1809b77714779bb8a0d81","modified":1700465542317},{"_id":"themes/BlueLake/layout/_widget/tag.ejs","hash":"feea59d6e9d122895ce3ed2cc4a5ee505e6e336e","modified":1700465542321},{"_id":"themes/BlueLake/layout/_widget/tagcloud.ejs","hash":"658c68f624bce479a81a2db8b017b14180ce3f8a","modified":1700465542321},{"_id":"themes/BlueLake/source/css/_extend.styl","hash":"64875ec77cc31a1225a5992a5d507bf98be14b04","modified":1700465542321},{"_id":"themes/BlueLake/source/css/_variables.styl","hash":"868e13f24ebbaf99067a18e45f5f58b4b4a5cf8c","modified":1700465542329},{"_id":"themes/BlueLake/source/css/style.styl","hash":"60206b021bd3f4364b7376a04bacbcf9ce868029","modified":1700465542333},{"_id":"themes/BlueLake/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1700465542333},{"_id":"themes/BlueLake/source/giteement/gitee.oauthcallback.js","hash":"e00dcbf30010e33fb6d633dfa09f077b2b33b032","modified":1700465542337},{"_id":"themes/BlueLake/source/giteement/giteement.css","hash":"8e6ee0547d7c3eda5a4b96fefc3b89103dccb9d1","modified":1700465542337},{"_id":"themes/BlueLake/source/js/script.js","hash":"1b05856e32423ad8fc50bc7f4e0aac4ae39f814c","modified":1700465542341},{"_id":"themes/BlueLake/source/js/search.json.js","hash":"ed5f817a6a2eff541e15d85a6dd8a8df83bff334","modified":1700465542341},{"_id":"themes/BlueLake/layout/_partial/post/category.ejs","hash":"d6c174fe0fe9ec611620860f9685415b78cb889a","modified":1700465542313},{"_id":"themes/BlueLake/layout/_partial/post/comments-count.ejs","hash":"e776617c998b8d83987faf3148ae715909c6db62","modified":1700465542313},{"_id":"themes/BlueLake/layout/_partial/post/comments.ejs","hash":"8ccf3390fdb05089ea2def9e140ae7ad95236243","modified":1700465542313},{"_id":"themes/BlueLake/layout/_partial/post/date.ejs","hash":"603367b4eddaedd0c74fc976ef8a0a0cbfe2fa34","modified":1700465542313},{"_id":"themes/BlueLake/layout/_partial/post/gallery.ejs","hash":"b0bf3f5d923c261ca2b5fabab513f1ec2708c8ca","modified":1700465542317},{"_id":"themes/BlueLake/layout/_partial/post/nav.ejs","hash":"f8054c6ec9d8a2fd48d66c96500639847fe02293","modified":1700465542317},{"_id":"themes/BlueLake/layout/_partial/post/reward.ejs","hash":"1e7e6e5602db81efb6e3d0bd0ee17aa395247075","modified":1700465542317},{"_id":"themes/BlueLake/layout/_partial/post/share.ejs","hash":"d862f8a5df4635e570bb8f62c3935c0ae3b7751c","modified":1700465542317},{"_id":"themes/BlueLake/layout/_partial/post/tag.ejs","hash":"694b5101bcc44c9f9c1cc62e5ad2fdfb4b7c7a07","modified":1700465542317},{"_id":"themes/BlueLake/layout/_partial/post/toc.ejs","hash":"1c40a8c5359f555745d78da24c9529cc26580340","modified":1700465542317},{"_id":"themes/BlueLake/layout/_partial/post/title.ejs","hash":"dacc884b56f24b31d85936327424b4f9edd9200a","modified":1700465542317},{"_id":"themes/BlueLake/layout/_partial/post/views-count.ejs","hash":"088c45b29e4cc040d87571dd525f9c9d1a07adb6","modified":1700465542317},{"_id":"themes/BlueLake/source/css/_partial/about.styl","hash":"460f43046ae5e89786165475582153cea051a8de","modified":1700739387827},{"_id":"themes/BlueLake/source/css/_partial/archive.styl","hash":"53c95e8c4e761e45d0c430f8972d1a5c3519b596","modified":1700465542325},{"_id":"themes/BlueLake/source/css/_partial/comment.styl","hash":"38db346eb7f5d6cc1e78b59225bb33ea1ee16baf","modified":1700465542325},{"_id":"themes/BlueLake/source/css/_partial/article.styl","hash":"5a043bf3c4f9a517b8846bb12957c83f68e43d76","modified":1700465542325},{"_id":"themes/BlueLake/source/css/_partial/footer.styl","hash":"698afe02aa930fdcc18ef981e0343bb99085dd57","modified":1700465542325},{"_id":"themes/BlueLake/source/css/_partial/header.styl","hash":"68582a0e1c222850f5ffc0a541baa2c717be38a5","modified":1700465542325},{"_id":"themes/BlueLake/source/css/_partial/highlight.styl","hash":"4fd02b470e68f74e3fa5e97092cdc5ea0a2d0199","modified":1700465542325},{"_id":"themes/BlueLake/source/css/_partial/iconfont.styl","hash":"fb68b181802859322a938490331017c1ad99f23d","modified":1700465542325},{"_id":"themes/BlueLake/source/css/_partial/pagination.styl","hash":"df15c94b90650f3b7e1018514a98c82575f7de1d","modified":1700465542325},{"_id":"themes/BlueLake/source/css/_partial/reward.styl","hash":"e970dff8c3132f061d04bf001aad3e4ef5824599","modified":1700465542325},{"_id":"themes/BlueLake/source/css/_partial/sidebar-aside.styl","hash":"c2320472d5345d99be9850bd8e0dc64dbece6a96","modified":1700465542325},{"_id":"themes/BlueLake/source/css/_partial/sidebar-bottom.styl","hash":"6aab4e0ee81c4407bed9ccb60335d1022f819aca","modified":1700465542325},{"_id":"themes/BlueLake/source/css/_partial/sidebar.styl","hash":"8d971a00e644a600179b04815688d188f094012e","modified":1700465542325},{"_id":"themes/BlueLake/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1700465542329},{"_id":"themes/BlueLake/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1700465542329},{"_id":"themes/BlueLake/source/css/iconfont/iconfont.eot","hash":"d79ff9e8325c9c0d2db4ee6dadd2f82799169783","modified":1700465542329},{"_id":"themes/BlueLake/source/css/iconfont/iconfont.svg","hash":"f9d7bf99db7d73faf2fef3891537630ea4f998ae","modified":1700465542329},{"_id":"themes/BlueLake/source/css/iconfont/iconfont.ttf","hash":"655ead66c5702e6e4a214c1473c78e450c49bfd7","modified":1700465542329},{"_id":"themes/BlueLake/source/css/iconfont/iconfont.woff","hash":"29e34038a63a5a810f3af4a9c15dc1476d97fc93","modified":1700465542329},{"_id":"themes/BlueLake/source/css/iconfont/iconfont.woff2","hash":"09f1ae7849a0649f0bb8f46e128c97fcb59e3a4c","modified":1700465542329},{"_id":"themes/BlueLake/source/css/images/alipay-pay.jpg","hash":"c1cdd36471a1197e31ee6309e979d1fb63daeb25","modified":1700465542329},{"_id":"themes/BlueLake/source/css/images/alipay.jpg","hash":"cfafbfa86d3223e5a7aa6025d4e78d26bdcf02af","modified":1700465542333},{"_id":"themes/BlueLake/source/css/images/wechat-pay.jpg","hash":"35f0f9859918d7b67d0a3279b110550667d97e8c","modified":1700465542333},{"_id":"themes/BlueLake/source/css/images/wechat.jpg","hash":"3a3f7518da72f35fbd8d0e3e3afa3018c4a434b2","modified":1700465542333},{"_id":"themes/BlueLake/source/localshare/css/share.styl","hash":"3a521a56eb06cb0ad08662d5e696c7950f456356","modified":1700465542341},{"_id":"themes/BlueLake/source/localshare/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1700465542341},{"_id":"themes/BlueLake/source/localshare/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1700465542345},{"_id":"themes/BlueLake/source/localshare/fonts/iconfont.svg","hash":"337b4f156f6d8f4beb32c32a3db46fef361cff74","modified":1700465542341},{"_id":"themes/BlueLake/source/localshare/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1700465542345},{"_id":"themes/BlueLake/source/localshare/js/qrcode.js","hash":"962ad9cb87afa140a644178e5f3c53e2514ea1e5","modified":1700465542345},{"_id":"themes/BlueLake/source/localshare/js/social-share.js","hash":"fe73d3b1c63a498f18f885fc83d631c2b63535e7","modified":1700465542345},{"_id":"themes/BlueLake/source/avatar.png","hash":"df4b618cda491e40a376909b235578bfeb11c53f","modified":1700739292994},{"_id":"themes/BlueLake/source/fancybox/jquery.fancybox.min.js","hash":"eef46b6fb2e460838cd7328a6e13ecda0cb1e194","modified":1700465542337},{"_id":"themes/BlueLake/source/js/jquery-3.4.1.min.js","hash":"b15f7cfa79519756dff1ad22553fd0ed09024343","modified":1700465542341},{"_id":"themes/BlueLake/source/css/images/banner.jpg","hash":"d23d92484e98adcbea7266ebfdfef7fb3fc42ee0","modified":1700465542333},{"_id":"themes/BlueLake/source/css/images/banner-dark.jpg","hash":"0d2c406f1a9b3b74d6defda398239b0113737787","modified":1700465542333},{"_id":"themes/BlueLake/source/giteement/giteement.min.js","hash":"12ff917ec7d6b89a70356ebe4198bdf82d3a70eb","modified":1700465542341},{"_id":"themes/BlueLake/source/css/images/redpanda.png","hash":"269cf64b336cd838a7a864ad7a3791eec06085ef","modified":1700637394448},{"_id":"source/_posts/AiForBeginners-1.md","hash":"b1eabca11fb737afc36fa424227015a2262958a7","modified":1701243718050},{"_id":"source/_posts/AiForBeginners-2.md","hash":"3cf28fcaf4966bd7b5de618f414a96950766eeb6","modified":1701243721626},{"_id":"public/content.json","hash":"8e813ed362fc29252edcf2947454ae43212bf316","modified":1701935944912},{"_id":"public/about/index.html","hash":"b508332feb0fea49f0165e565140bb561517c1af","modified":1701935944912},{"_id":"public/2023/11/24/AiForBeginners-2.html","hash":"e7f99fe7161e3905706f31b7f2fb0ec491a7b8fb","modified":1701935944912},{"_id":"public/2023/11/24/AiForBeginners-1.html","hash":"ea798d47fbb3b5f01c614a47489ff3726b548c62","modified":1701935944912},{"_id":"public/2023/11/22/SSHInSubSocks.html","hash":"56bbc3852d7fbee8aa699c586adb81e83ab3bcb1","modified":1701935944912},{"_id":"public/2023/11/17/WSL.html","hash":"09d0c76c519fbfb18f8df94374c5ecc4419c55ae","modified":1701935944912},{"_id":"public/archives/index.html","hash":"6aa0717f96a7dc59eec1afad9ae8a62ed427d001","modified":1701935944912},{"_id":"public/archives/2023/index.html","hash":"c2263fc4cdfbce0b6ff7e89618ac167dc58a2667","modified":1701935944912},{"_id":"public/archives/2023/11/index.html","hash":"2b9773961cb585685e9617fe034e6f60b67f610b","modified":1701935944912},{"_id":"public/categories/网络编程/index.html","hash":"1070216d7498ad5abef9e8e370d5d28d8ca967ce","modified":1701935944912},{"_id":"public/categories/豆知识/index.html","hash":"f274f6b51dcb226977a30e5fa637d52021fcaa1a","modified":1701935944912},{"_id":"public/categories/AI学习/index.html","hash":"4f43aaa8ce9aa23e414f09ff54c602760c889b10","modified":1701935944912},{"_id":"public/categories/项目实践/index.html","hash":"047883fdd2ea4489b304a86157891d8caa0473cf","modified":1701935944912},{"_id":"public/tags/网络编程/index.html","hash":"1ee3b387a238978baa1fda75dedf76f84ff856c3","modified":1701935944912},{"_id":"public/tags/豆知识/index.html","hash":"7a869fd8d8ac542c6516be0ff10e73bfe45d8cb7","modified":1701935944912},{"_id":"public/tags/SSH/index.html","hash":"e2849454939337b6e6c7164e859ac80bf6dbb46b","modified":1701935944912},{"_id":"public/tags/环境配置/index.html","hash":"0c7cae27aa568cba609c767f2bfa472f49eae229","modified":1701935944912},{"_id":"public/tags/Linux/index.html","hash":"ff54b36d112116be60d9deba29fcbf071d38eb70","modified":1701935944912},{"_id":"public/tags/项目实践/index.html","hash":"44c2432a30ffd5cb5be922ecbee8ce1b5ce9f3b6","modified":1701935944912},{"_id":"public/tags/golang/index.html","hash":"8b0de1a0bfa273a86cf2559cd4b09f2a3eba52da","modified":1701935944912},{"_id":"public/tags/串口通讯/index.html","hash":"b247c3d0cca8106eb833f895cb8848ab6b8503ad","modified":1701935944912},{"_id":"public/tags/AI/index.html","hash":"10ddb38337533958ba558e59ca6fd7ab13929032","modified":1701935944912},{"_id":"public/tags/笔记/index.html","hash":"e9d97c0837952016c13e97dece572c9d907d46a6","modified":1701935944912},{"_id":"public/2023/11/22/golangSerial.html","hash":"ffbf1038b2c0b5a3a73445261d159b54959d2c84","modified":1701935944912},{"_id":"public/2023/11/20/SSH.html","hash":"d3ca16e12605511729370476b65fcf1101e697ae","modified":1701935944912},{"_id":"public/index.html","hash":"cdadabf683866f0dfe620192f5763b3b6bc087a6","modified":1701935944912},{"_id":"public/favicon.png","hash":"98f0ecbdcdc1a0e8e52f4d786cbc011e5e06fa65","modified":1701053423729},{"_id":"public/css/iconfont/iconfont.eot","hash":"d79ff9e8325c9c0d2db4ee6dadd2f82799169783","modified":1701053423729},{"_id":"public/avatar.png","hash":"df4b618cda491e40a376909b235578bfeb11c53f","modified":1701053423729},{"_id":"public/css/iconfont/iconfont.woff","hash":"29e34038a63a5a810f3af4a9c15dc1476d97fc93","modified":1701053423729},{"_id":"public/css/iconfont/iconfont.ttf","hash":"655ead66c5702e6e4a214c1473c78e450c49bfd7","modified":1701053423729},{"_id":"public/css/iconfont/iconfont.woff2","hash":"09f1ae7849a0649f0bb8f46e128c97fcb59e3a4c","modified":1701053423729},{"_id":"public/css/images/alipay.jpg","hash":"cfafbfa86d3223e5a7aa6025d4e78d26bdcf02af","modified":1701053423729},{"_id":"public/css/iconfont/iconfont.svg","hash":"f9d7bf99db7d73faf2fef3891537630ea4f998ae","modified":1701053423729},{"_id":"public/css/images/wechat-pay.jpg","hash":"35f0f9859918d7b67d0a3279b110550667d97e8c","modified":1701053423729},{"_id":"public/css/images/wechat.jpg","hash":"3a3f7518da72f35fbd8d0e3e3afa3018c4a434b2","modified":1701053423729},{"_id":"public/css/images/alipay-pay.jpg","hash":"c1cdd36471a1197e31ee6309e979d1fb63daeb25","modified":1701053423729},{"_id":"public/localshare/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1701053423729},{"_id":"public/localshare/fonts/iconfont.svg","hash":"337b4f156f6d8f4beb32c32a3db46fef361cff74","modified":1701053423729},{"_id":"public/localshare/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1701053423729},{"_id":"public/localshare/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1701053423729},{"_id":"public/css/images/banner.jpg","hash":"d23d92484e98adcbea7266ebfdfef7fb3fc42ee0","modified":1701053423729},{"_id":"public/2023/11/22/SSHInSubSocks/wireshark.png","hash":"7c236d52442b1bcb43da0647a81c030a9002b90a","modified":1701053423729},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1701053423729},{"_id":"public/js/script.js","hash":"b9441363ff8fe829d90295ea947960338a1a020a","modified":1701053423729},{"_id":"public/js/search.json.js","hash":"ec601a6db4c68a7d9c2d440951c6e26ebfbc1f3a","modified":1701053423729},{"_id":"public/giteement/gitee.oauthcallback.js","hash":"f24dc1fd8de0dc44b8d70df83f7c82fd2f3fc710","modified":1701053423729},{"_id":"public/localshare/css/share.css","hash":"34f53537ebcf2757b35a15a4a9473f2352486372","modified":1701053423729},{"_id":"public/localshare/js/social-share.js","hash":"9bfe34fe7691833e90815c5c862545bde581cf29","modified":1701053423729},{"_id":"public/css/style.css","hash":"a62f30beb4da21bc195e30eb814db288d74c4f44","modified":1701053423729},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1701053423729},{"_id":"public/js/jquery-3.4.1.min.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1701053423729},{"_id":"public/giteement/giteement.css","hash":"887ad901816c2427b1715444f72ae94f6146e9f7","modified":1701053423729},{"_id":"public/localshare/js/qrcode.js","hash":"9caa0d9a9ba4409a3f77540a1b15a7617aeb28e8","modified":1701053423729},{"_id":"public/giteement/giteement.min.js","hash":"922687138ef42d0c77ff6a1c6d3d85ab6c743466","modified":1701053423729},{"_id":"public/css/images/banner-dark.jpg","hash":"0d2c406f1a9b3b74d6defda398239b0113737787","modified":1701053423729},{"_id":"public/css/images/redpanda.png","hash":"269cf64b336cd838a7a864ad7a3791eec06085ef","modified":1701053423729},{"_id":"source/_posts/AiForBeginners-3.md","hash":"1e639ec881861529062b2dc66d7b3a13da81712c","modified":1701398872281},{"_id":"source/_posts/pythonNumpy.md","hash":"562ea6528c9986ff7ce7d5bf030ccaac1d696382","modified":1701935160939},{"_id":"source/_drafts/AiForBeginners-3.md","hash":"403e958e509a1f2a9e18c66f312c94373b98a29b","modified":1701140630952},{"_id":"source/_drafts/pythonNumpy.md","hash":"b906993fd09b0df6bd23aede108a528cb25d3a56","modified":1701224055881},{"_id":"public/categories/python/index.html","hash":"9d40d26a990846855f8c8fceff61190de2b8fdfc","modified":1701935944912},{"_id":"public/tags/python/index.html","hash":"c1be4e89c69119fb6ac2c0fbf7046f46cd26fe64","modified":1701935944912},{"_id":"public/tags/库/index.html","hash":"00dae41662800967d73c5268983081d615733809","modified":1701935944912},{"_id":"public/2023/11/28/pythonNumpy.html","hash":"45a0edd17314c45f7211d3fa3bd242d2c897df2c","modified":1701935944912},{"_id":"source/_drafts/pythonMatplotlib.md","hash":"33f4e51678a889b251592051ea5e64bbdac60b1a","modified":1701243803654},{"_id":"source/_posts/pythonMatplotlib.md","hash":"5d018eeeebbcb14828babe53055a9c435dfd6b6d","modified":1701935357888},{"_id":"public/2023/11/29/pythonMatplotlib.html","hash":"5f12ac590356e4d2cbf9112123b383939bb0d7f2","modified":1701935944912},{"_id":"source/_posts/pythonJupyter.md","hash":"b7a4c042bfd9b2f967e8ec1b3e528f8a02bd6143","modified":1701330566372},{"_id":"source/_posts/pythonJupyter/JupyterLab-3.png","hash":"bbbb8c9129c1e6aeed4aaf78a151e31f82930ff2","modified":1701330134000},{"_id":"source/_posts/pythonJupyter/JupyterLab-2.png","hash":"c2ca5d9f1b2ee98f76a0c98cd6672ae0c94ea631","modified":1701330134000},{"_id":"source/_posts/pythonJupyter/JupyterLab-1.png","hash":"b57e43459d12f817db5565415a03a4bf193db9e4","modified":1701330134000},{"_id":"public/2023/11/30/pythonJupyter.html","hash":"9e43c9deb23b29343f16689c9c127c7ff0f1cd72","modified":1701935944912},{"_id":"public/2023/11/30/pythonJupyter/JupyterLab-3.png","hash":"bbbb8c9129c1e6aeed4aaf78a151e31f82930ff2","modified":1701330601194},{"_id":"public/2023/11/30/pythonJupyter/JupyterLab-1.png","hash":"b57e43459d12f817db5565415a03a4bf193db9e4","modified":1701330601194},{"_id":"public/2023/11/30/pythonJupyter/JupyterLab-2.png","hash":"c2ca5d9f1b2ee98f76a0c98cd6672ae0c94ea631","modified":1701330601194},{"_id":"public/2023/12/01/AiForBeginners-3.html","hash":"b875dfbc42483257c9747dd8706e8d0dd3f54130","modified":1701935944912},{"_id":"public/archives/2023/12/index.html","hash":"5f2b528e5eeb3e4567d4e356e7a3b118842a4e47","modified":1701935944912},{"_id":"source/_posts/linuxBoot.md","hash":"d4b7a2eef48db3121acc81792a12524afc6c5efe","modified":1701935577579},{"_id":"public/2023/12/01/linuxBoot.html","hash":"ecf92cab33e4eb8214f3947b4e114785d938a5b7","modified":1701935944912},{"_id":"public/page/2/index.html","hash":"dd67857a18d748078256814481d604edd5f19e1f","modified":1701935944912},{"_id":"source/_posts/golua.md","hash":"f517ec12a6ceaa7981429ce270072c0787c22e7c","modified":1701746964650},{"_id":"source/_posts/weekreport2chart.md","hash":"ea87399325cbb6a0b11376cd5eb5522d6e8bb8b3","modified":1701759854924},{"_id":"source/_posts/weekreport2chart/disable.png","hash":"9add9a4cd526339f02e8be886dbc0fa8a348462a","modified":1701742346935},{"_id":"source/_posts/weekreport2chart/wordcloud.png","hash":"7ba1ca40aa6a56e3b9101288e3e0e2d71c14ab05","modified":1701742219916},{"_id":"source/_posts/weekreport2chart/river.png","hash":"c2d951f1e2f39257a3d0a6d4f3ce0af088102d6d","modified":1701742259849},{"_id":"public/2023/12/05/weekreport2chart.html","hash":"ba8abc6c9529ed34401d111c89bb0aae5879edca","modified":1701935944912},{"_id":"public/2023/12/05/golua.html","hash":"ca1d589ba2ad2956a647fb73e10bbf04ee7ddfad","modified":1701935944912},{"_id":"public/categories/小玩具/index.html","hash":"f8539727a8c42552f53fd4480b02a5a3dd7526b9","modified":1701935944912},{"_id":"public/tags/小玩具/index.html","hash":"48254bd580f6c1756a0afac2772ed081f5e3b533","modified":1701935944912},{"_id":"public/tags/js/index.html","hash":"91cab8f22f2c2ff08ea31eceb89f2314f4a10262","modified":1701935944912},{"_id":"public/2023/12/05/weekreport2chart/disable.png","hash":"9add9a4cd526339f02e8be886dbc0fa8a348462a","modified":1701759866677},{"_id":"public/2023/12/05/weekreport2chart/wordcloud.png","hash":"7ba1ca40aa6a56e3b9101288e3e0e2d71c14ab05","modified":1701759866677},{"_id":"public/2023/12/05/weekreport2chart/river.png","hash":"c2d951f1e2f39257a3d0a6d4f3ce0af088102d6d","modified":1701759866677},{"_id":"source/_posts/githubBeginner.md","hash":"9aa9c17fae1bde3430496724e9c84c4d2ea0482b","modified":1701827832859},{"_id":"source/_posts/n2nBeginner.md","hash":"527d46f81d25952b26b87a7cf044be9689dcbe6d","modified":1701935394291},{"_id":"source/_posts/n2nBeginner/edgeVerify.png","hash":"10793980e54a1c758ab4c73f25af95241f2cdef1","modified":1701920278872},{"_id":"source/_posts/n2nBeginner/gwRoute.png","hash":"c6776b336c5fd33abac286fdc9a279921e332a73","modified":1701929172993},{"_id":"source/_posts/n2nBeginner/installVerify.png","hash":"d472ff2c0f242b1f6d3749fda0a72248216e2e29","modified":1701920138818},{"_id":"source/_posts/n2nBeginner/trace.png","hash":"66348ee0c8570dc8ec51e5fe64a537a12ab637e9","modified":1701930419951},{"_id":"source/_posts/n2nBeginner/trace3.png","hash":"4b62eab1ddba96ccf47a8295994ea38aa9f168c6","modified":1701930629775},{"_id":"source/_posts/n2nBeginner/supernodeVerify.png","hash":"7a414a3c3647f5d5fd30a5250844d5e48059742a","modified":1701920014870},{"_id":"source/_posts/n2nBeginner/trace2.png","hash":"75234e5a29f78c5dcf3cf621d5b9da03ce0e58c3","modified":1701930532511},{"_id":"public/categories/网络工具/index.html","hash":"40555317569b2a5c43d7b09cea08b73bc13267fb","modified":1701935944912},{"_id":"public/2023/12/06/n2nBeginner.html","hash":"cae0cdbb10188f789d5709b37534599c371fcdc5","modified":1701935944912},{"_id":"public/tags/网络工具/index.html","hash":"303f9ebda8afd48039139d836ad8bf1ecb7acad2","modified":1701935944912},{"_id":"public/2023/12/06/n2nBeginner/supernodeVerify.png","hash":"7a414a3c3647f5d5fd30a5250844d5e48059742a","modified":1701930905860},{"_id":"public/2023/12/06/n2nBeginner/edgeVerify.png","hash":"10793980e54a1c758ab4c73f25af95241f2cdef1","modified":1701930905860},{"_id":"public/2023/12/06/n2nBeginner/installVerify.png","hash":"d472ff2c0f242b1f6d3749fda0a72248216e2e29","modified":1701930905860},{"_id":"public/2023/12/06/n2nBeginner/gwRoute.png","hash":"c6776b336c5fd33abac286fdc9a279921e332a73","modified":1701930905860},{"_id":"public/2023/12/06/n2nBeginner/trace.png","hash":"66348ee0c8570dc8ec51e5fe64a537a12ab637e9","modified":1701930905860},{"_id":"public/2023/12/06/n2nBeginner/trace2.png","hash":"75234e5a29f78c5dcf3cf621d5b9da03ce0e58c3","modified":1701930905860},{"_id":"public/2023/12/06/n2nBeginner/trace3.png","hash":"4b62eab1ddba96ccf47a8295994ea38aa9f168c6","modified":1701930905860},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tag.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1701931830188},{"_id":"node_modules/hexo-theme-fluid/LICENSE","hash":"26f9356fd6e84b5a88df6d9014378f41b65ba209","modified":1701931830031},{"_id":"node_modules/hexo-theme-fluid/README.md","hash":"49f681a203eecfa7127ac22edc13bd3b49693d0a","modified":1701931830106},{"_id":"node_modules/hexo-theme-fluid/package.json","hash":"f09a5019ba2182c64c4bd0b07355ad1f708b6a55","modified":1701931830106},{"_id":"node_modules/hexo-theme-fluid/_config.yml","hash":"cdde6c6d6a1bdf9fb965313e21d92cf6213582b6","modified":1701931830192},{"_id":"node_modules/hexo-theme-fluid/layout/404.ejs","hash":"b84d575c7b7f778b4cb64e89ad3d0aed4a896820","modified":1701931830031},{"_id":"node_modules/hexo-theme-fluid/layout/about.ejs","hash":"163bee643e6a38912d3ae70923c83c48d57222e7","modified":1701931830035},{"_id":"node_modules/hexo-theme-fluid/layout/archive.ejs","hash":"7c1f44005849791feae4abaa10fae4cb983d3277","modified":1701931830043},{"_id":"node_modules/hexo-theme-fluid/layout/categories.ejs","hash":"13859726c27b6c79b5876ec174176d0f9c1ee164","modified":1701931830043},{"_id":"node_modules/hexo-theme-fluid/layout/category.ejs","hash":"f099161b738a16a32253f42085b5444f902018ed","modified":1701931830047},{"_id":"node_modules/hexo-theme-fluid/layout/index.ejs","hash":"33c3317cdcee062789de2336dd8d0cc7f86d3650","modified":1701931830056},{"_id":"node_modules/hexo-theme-fluid/layout/layout.ejs","hash":"7e0023474128fbe4d68c467704c41f1712432415","modified":1701931830056},{"_id":"node_modules/hexo-theme-fluid/layout/links.ejs","hash":"1cac32ec4579aaf7b9fa39d317497331d4c5e1dd","modified":1701931830060},{"_id":"node_modules/hexo-theme-fluid/layout/page.ejs","hash":"ed5007a3feb8f14d3d2843271bfb298eb0c56219","modified":1701931830064},{"_id":"node_modules/hexo-theme-fluid/layout/post.ejs","hash":"75ab6958d929e92566ca580d0b8bd0eeae10649a","modified":1701931830064},{"_id":"node_modules/hexo-theme-fluid/layout/tag.ejs","hash":"9d686364c4d16a1a9219471623af452035c5b966","modified":1701931830068},{"_id":"node_modules/hexo-theme-fluid/layout/tags.ejs","hash":"1d06af34b6cf1d8a20d2eb565e309326ceba309f","modified":1701931830068},{"_id":"node_modules/hexo-theme-fluid/languages/de.yml","hash":"0e7d455d9e004ff15d8924b7a0c35cea25ee5b1d","modified":1701931830192},{"_id":"node_modules/hexo-theme-fluid/languages/en.yml","hash":"cb11b39f44ea069652c9647179606b6cecc98d50","modified":1701931830192},{"_id":"node_modules/hexo-theme-fluid/languages/es.yml","hash":"7112594259c88c04714be152af7fd377687dad40","modified":1701931830192},{"_id":"node_modules/hexo-theme-fluid/languages/eo.yml","hash":"a556251cc50a5680578c03f1efbf252b1f4ab860","modified":1701931830192},{"_id":"node_modules/hexo-theme-fluid/languages/ja.yml","hash":"3dd6d20f8d26585a7c154a8e59fe8d5d902f4c6a","modified":1701931830192},{"_id":"node_modules/hexo-theme-fluid/languages/ru.yml","hash":"7dc78f22696649a4c68dc65a9b52d9a992fa82a0","modified":1701931830197},{"_id":"node_modules/hexo-theme-fluid/languages/zh-CN.yml","hash":"f96a22f989897ecddc69d5867a206e1cf6b8f610","modified":1701931830197},{"_id":"node_modules/hexo-theme-fluid/languages/zh-HK.yml","hash":"80ed400a7adaa92ea54fc7f5d534c9af795bed00","modified":1701931830197},{"_id":"node_modules/hexo-theme-fluid/languages/zh-TW.yml","hash":"596d031dff3826ae8e4ffc8931fff28977b73247","modified":1701931830197},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/archive-list.ejs","hash":"7520fbf91f762207c2ab06b2c293235cd5b23905","modified":1701931830039},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/category-chains.ejs","hash":"18309584aab83bc4deb20723ebad832149dd2e24","modified":1701931830047},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/category-list.ejs","hash":"f8d2f1907450e61968e6d54443e9be8138196a77","modified":1701931830047},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments.ejs","hash":"d707c47b2638c94e489bc43d4cfd098b7c58447f","modified":1701931830051},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/css.ejs","hash":"85f6e051550907681ab4ed2e268ac8f6e9ebf931","modified":1701931830052},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer.ejs","hash":"10ccfb8eef4e16182183c9a3e175c90d5b6397d3","modified":1701931830052},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/head.ejs","hash":"7b7b1d098726e86687a15fe3d520d178577ffcae","modified":1701931830056},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header.ejs","hash":"0d5e397d30051e5fbabe7b47cfd1f1e6a5820af1","modified":1701931830056},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/markdown-plugins.ejs","hash":"fc4bdf7de0cf1a66d0e5e4fba1b31d6f7ed49468","modified":1701931830060},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/paginator.ejs","hash":"0f38a2c238169edcb63fc46c23bfc529ff3859b7","modified":1701931830064},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/index-generator.js","hash":"9159fc22fa84a7b605dd15fe4104f01fe9c71147","modified":1701931830089},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/scripts.ejs","hash":"da5810785105e5075861593c7ac22c7aa9665a72","modified":1701931830064},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/search.ejs","hash":"70e1c929e084ca8a2648cedabf29b372511ea2b8","modified":1701931830068},{"_id":"node_modules/hexo-theme-fluid/scripts/events/index.js","hash":"79de5a379b28cad759a49048351c7f6b8915bd7d","modified":1701931830089},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/pages.js","hash":"d3e75f53c59674d171309e50702954671f31f1a4","modified":1701931830102},{"_id":"node_modules/hexo-theme-fluid/scripts/generators/local-search.js","hash":"9ac5ddad06e9b0e6015ce531430018182a4bc0fa","modified":1701931830097},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/default-injects.js","hash":"b2013ae8e189cd07ebc8a2ff48a78e153345210f","modified":1701931830085},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/locals.js","hash":"58d0fec976f6b1d35e7ea03edc45414088acf05c","modified":1701931830097},{"_id":"node_modules/hexo-theme-fluid/scripts/filters/post-filter.js","hash":"0047666f996c54017e06668b5242ed8a311ebce0","modified":1701931830102},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/button.js","hash":"3eb43a8cdea0a64576ad6b31b4df6c2bf5698d4c","modified":1701931830076},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/fold.js","hash":"8e434eecde934bbbc98c2e618c16210f5622f4dc","modified":1701931830085},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/group-image.js","hash":"4aeebb797026f1df25646a5d69f7fde79b1bcd26","modified":1701931830085},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/checkbox.js","hash":"4938610c3543a921a341bc074626d511cb1a4b45","modified":1701931830076},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/label.js","hash":"f05a6d32cca79535b22907dc03edb9d3fa2d8176","modified":1701931830093},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/compare-versions.js","hash":"dbbc928c914fc2bd242cd66aa0c45971aec13a5d","modified":1701931830080},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/mermaid.js","hash":"75160561e1ef3603b6d2ad2938464ab1cb77fd38","modified":1701931830097},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/object.js","hash":"33b57e4decdc5e75c518859f168c8ba80b2c665b","modified":1701931830101},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/crypto.js","hash":"ae4ad8a188ef5b3fa6818b01629fc962b3de8551","modified":1701931830080},{"_id":"node_modules/hexo-theme-fluid/scripts/tags/note.js","hash":"e3b456a079e5dc0032473b516c865b20f83d2c26","modified":1701931830097},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/url-join.js","hash":"718aab5e7b2059a06b093ca738de420d9afa44ba","modified":1701931830102},{"_id":"node_modules/hexo-theme-fluid/scripts/utils/resolve.js","hash":"8c4a8b62aa8608f12f1e9046231dff04859dc3e9","modified":1701931830102},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/date.js","hash":"9bda6382f61b40a20c24af466fe10c8366ebb74c","modified":1701931830080},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/export-config.js","hash":"8e67b522c47aa250860e3fe2c733f1f958a506c0","modified":1701931830085},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/engine.js","hash":"d3a231d106795ce99cb0bc77eb65f9ae44515933","modified":1701931830085},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/import.js","hash":"ca53e8dbf7d44cfd372cfa79ac60f35a7d5b0076","modified":1701931830089},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/injects.js","hash":"1ad2ae6b11bd8806ee7dd6eb7140d8b54a95d613","modified":1701931830093},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/scope.js","hash":"d41d9d658fcb54964b388598e996747aadb85b0f","modified":1701931830102},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/url.js","hash":"2a6a8288176d0e0f6ec008056bf2745a86e8943e","modified":1701931830102},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/page.js","hash":"4607607445233b3029ef20ed5e91de0da0a7f9c5","modified":1701931830101},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/utils.js","hash":"966689d7c5e4320008285395fbaa2751f6209be5","modified":1701931830106},{"_id":"node_modules/hexo-theme-fluid/scripts/helpers/wordcount.js","hash":"3fc0875fa162719f8183ccc15502895e1b4f6c7d","modified":1701931830106},{"_id":"node_modules/hexo-theme-fluid/source/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1701931830031},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight-dark.styl","hash":"45695ef75c31a4aa57324dd408b7e2327a337018","modified":1701931830172},{"_id":"node_modules/hexo-theme-fluid/source/css/highlight.styl","hash":"a9efc52a646a9e585439c768557e3e3c9e3326dc","modified":1701931830172},{"_id":"node_modules/hexo-theme-fluid/source/img/avatar.png","hash":"fe739a158cc128f70f780eb5fa96f388b81d478f","modified":1701931830106},{"_id":"node_modules/hexo-theme-fluid/source/css/main.styl","hash":"855ae5fe229c51afa57f7645f6997a27a705d7e4","modified":1701931830180},{"_id":"node_modules/hexo-theme-fluid/source/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1701931830156},{"_id":"node_modules/hexo-theme-fluid/source/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1701931830076},{"_id":"node_modules/hexo-theme-fluid/source/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1701931830156},{"_id":"node_modules/hexo-theme-fluid/source/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1701931830076},{"_id":"node_modules/hexo-theme-fluid/source/js/color-schema.js","hash":"c5939d14065d38c86e16d1642e154dde5a23e830","modified":1701931830076},{"_id":"node_modules/hexo-theme-fluid/source/js/events.js","hash":"89e3561488a618ed0caeb9edf18e441978e29c25","modified":1701931830085},{"_id":"node_modules/hexo-theme-fluid/source/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1701931830093},{"_id":"node_modules/hexo-theme-fluid/source/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1701931830089},{"_id":"node_modules/hexo-theme-fluid/source/js/local-search.js","hash":"b9945f76f8682f3ec32edfb285b26eb559f7b7e8","modified":1701931830097},{"_id":"node_modules/hexo-theme-fluid/source/js/utils.js","hash":"b82e7c289a66dfd36064470fd41c0e96fc598b43","modified":1701931830106},{"_id":"node_modules/hexo-theme-fluid/source/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1701931830102},{"_id":"node_modules/hexo-theme-fluid/source/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1701931830188},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/cusdis.ejs","hash":"5f9dc012be27040bbe874d0c093c0d53958cc987","modified":1701931830052},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/changyan.ejs","hash":"c9b2d68ed3d375f1953e7007307d2a3f75ed6249","modified":1701931830047},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/discuss.ejs","hash":"98d065b58ce06b7d18bff3c974e96fa0f34ae03a","modified":1701931830052},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/disqus.ejs","hash":"aab4a4d24c55231a37db308ae94414319cecdd9b","modified":1701931830052},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/giscus.ejs","hash":"95f8b866b158eff9352c381c243b332a155a5110","modified":1701931830052},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/gitalk.ejs","hash":"843bc141a4545eb20d1c92fb63c85d459b4271ec","modified":1701931830056},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/livere.ejs","hash":"2264758fed57542a7389c7aa9f00f1aefa17eb87","modified":1701931830060},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/remark42.ejs","hash":"d4e9532feeb02aed61bd15eda536b5b631454dac","modified":1701931830064},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/utterances.ejs","hash":"c7ccf7f28308334a6da6f5425b141a24b5eca0e2","modified":1701931830072},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/twikoo.ejs","hash":"d84bcb5ccd78470a60c067fc914ac0ac67ac8777","modified":1701931830068},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/valine.ejs","hash":"19ba937553dddd317f827d682661a1066a7b1f30","modified":1701931830072},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/comments/waline.ejs","hash":"12727da7cf3ac83443270f550be4d1c06135b52b","modified":1701931830072},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer/beian.ejs","hash":"4fb9b5dd3f3e41a586d6af44e5069afe7c81fff2","modified":1701931830043},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/footer/statistics.ejs","hash":"454d8dd4c39f9494ebeb03ca0746f5bc122af76a","modified":1701931830068},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header/banner.ejs","hash":"e07757b59e7b89eea213d0e595cb5932f812fd32","modified":1701931830043},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/header/navigation.ejs","hash":"37d750428772d7c71ba36ce0c2540780d90fadea","modified":1701931830064},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/category-bar.ejs","hash":"8772bce97ed297e7a88523f4e939ed6436c22f87","modified":1701931830043},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/copyright.ejs","hash":"529f3069742b3d338c769ba2d836e7f3c342a09d","modified":1701931830052},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/meta-bottom.ejs","hash":"375974ec017696e294dc12469fb0ae257800dc2d","modified":1701931830060},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/sidebar-left.ejs","hash":"9992c99b3eb728ad195970e1b84d665f2c8691c4","modified":1701931830068},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/meta-top.ejs","hash":"ce6e9f578f4faa45840abddf8f46af3f4b69c177","modified":1701931830060},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/sidebar-right.ejs","hash":"d5fcc9b60e02f869a29a8c17a16a6028ecc1e6d8","modified":1701931830068},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/post/toc.ejs","hash":"635a89060fbf72eeda066fc4bd0a97462f069417","modified":1701931830068},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/analytics.ejs","hash":"4f68c80bd1395e2f6d11e373116e54de11cb62e8","modified":1701931830035},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/code-widget.ejs","hash":"3a505cba37942badf62a56bbb8b605b72af330aa","modified":1701931830047},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/anchorjs.ejs","hash":"40181442d3a2b8734783a0ad7caf2d2522e3f2ab","modified":1701931830039},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/fancybox.ejs","hash":"9d1ea2a46b8c8ad8c168594d578f40764818ef13","modified":1701931830052},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/encrypt.ejs","hash":"0fff24cf5bf99fbe5c56c292e2eac4a89bf29db4","modified":1701931830052},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/highlight.ejs","hash":"7529dd215b09d3557804333942377b9e20fa554e","modified":1701931830056},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/math.ejs","hash":"dcbf9a381ee76f2f1f75fcbc22c50a502ec85023","modified":1701931830060},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/mermaid.ejs","hash":"03ac02762f801970d1c4e73d6ec8d4c503780e50","modified":1701931830060},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/nprogress.ejs","hash":"4c2d39ce816b8a6dcd6b53113c8695f8bd650a23","modified":1701931830064},{"_id":"node_modules/hexo-theme-fluid/layout/_partials/plugins/typed.ejs","hash":"f345374885cd6a334f09a11f59c443b5d577c06c","modified":1701931830072},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/compatible-configs.js","hash":"ef474d1fa5bbafc52619ced0f9dc7eaf2affb363","modified":1701931830080},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/footnote.js","hash":"c19ac8050b82c3676b0332a56099ccfcc36d9d52","modified":1701931830085},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/hello.js","hash":"44c5eb97b98813a07c659d6afedd17fad63b1821","modified":1701931830089},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/highlight.js","hash":"a5fe1deccb73b5f578797dbb11038efc15f63ce8","modified":1701931830089},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/injects.js","hash":"5ae4b07204683e54b5a1b74e931702bbce2ac23e","modified":1701931830093},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/lazyload.js","hash":"9ba0d4bc224e22af8a5a48d6ff13e5a0fcfee2a4","modified":1701931830093},{"_id":"node_modules/hexo-theme-fluid/scripts/events/lib/merge-configs.js","hash":"7c944c43b2ece5dd84859bd9d1fe955d13427387","modified":1701931830097},{"_id":"node_modules/hexo-theme-fluid/source/css/_functions/base.styl","hash":"2e46f3f4e2c9fe34c1ff1c598738fc7349ae8188","modified":1701931830160},{"_id":"node_modules/hexo-theme-fluid/source/css/_mixins/base.styl","hash":"542e306ee9494e8a78e44d6d7d409605d94caeb3","modified":1701931830164},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/pages.styl","hash":"b8e887bc7fb3b765a1f8ec9448eff8603a41984f","modified":1701931830180},{"_id":"node_modules/hexo-theme-fluid/source/css/_variables/base.styl","hash":"4ed5f0ae105ef4c7dd92eaf652ceda176c38e502","modified":1701931830164},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_archive/archive.styl","hash":"c475e6681546d30350eaed11f23081ecae80c375","modified":1701931830160},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-bar.styl","hash":"cc6df43fef6bb3efecbfdd8b9e467424a1dea581","modified":1701931830168},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-list.styl","hash":"7edfe1b571ecca7d08f5f4dbcf76f4ffdcfbf0b5","modified":1701931830168},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_category/category-chain.styl","hash":"0cdf7ef50dfd0669d3b257821384ff31cd81b7c9","modified":1701931830168},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/base.styl","hash":"643284c567665f96915f0b64e59934dda315f74d","modified":1701931830164},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/color-schema.styl","hash":"2ee54e5695f6d6f3585d94412f27b02060cb2463","modified":1701931830168},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/inline.styl","hash":"411a3fa3f924a87e00ff04d18b5c83283b049a4d","modified":1701931830176},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/keyframes.styl","hash":"94065ea50f5bef7566d184f2422f6ac20866ba22","modified":1701931830176},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_about/about.styl","hash":"97fe42516ea531fdad771489b68aa8b2a7f6ae46","modified":1701931830156},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_index/index.styl","hash":"25fb6fa4c783b847c632584c49a7e1593cdb2f5d","modified":1701931830176},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/print.styl","hash":"166afbc596ea4b552bad7290ec372d25ec34db7b","modified":1701931830184},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/comment.styl","hash":"780f3788e7357bcd3f3262d781cb91bb53976a93","modified":1701931830168},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/highlight.styl","hash":"4df764d298fe556e501db4afc2b05686fe6ebcfb","modified":1701931830172},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post-page.styl","hash":"ecf3488566b374d564ae985c61e08562ba908023","modified":1701931830184},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/markdown.styl","hash":"1e3d3a82721e7c10bcfcecec6d81cf2979039452","modified":1701931830180},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_post/post-tag.styl","hash":"2748ed2be99e088350f83de96fc1af42d1f5bd93","modified":1701931830184},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_links/links.styl","hash":"5c7f2044e3f1da05a3229537c06bd879836f8d6e","modified":1701931830180},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_tag/tags.styl","hash":"65bfc01c76abc927fa1a23bf2422892b0d566c3f","modified":1701931830188},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/anchorjs.styl","hash":"e0cebda4a6f499aff75e71417d88caa7ceb13b94","modified":1701931830160},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/banner.styl","hash":"7a0bd629bc234fc75e3cc8e3715ffada92f09e73","modified":1701931830160},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/copyright.styl","hash":"26f71a9cd60d96bb0cb5bbdf58150b8e524d9707","modified":1701931830172},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/board.styl","hash":"4397037fc3f0033dbe546c33cd9dbdabd8cb1632","modified":1701931830164},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/code-widget.styl","hash":"b66ab013f0f37d724a149b85b3c7432afcf460ad","modified":1701931830168},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footer.styl","hash":"2caaca71dd1ff63d583099ed817677dd267b457e","modified":1701931830172},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/footnote.styl","hash":"ae9289cc89649af2042907f8a003303b987f3404","modified":1701931830172},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/header.styl","hash":"c4459248c66ea1326feed021179b847ae91d465f","modified":1701931830172},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/modal.styl","hash":"adf6c1e5c8e1fb41c77ce6e2258001df61245aa2","modified":1701931830180},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/ngrogress.styl","hash":"5d225357b4a58d46118e6616377168336ed44cb2","modified":1701931830180},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/noscript.styl","hash":"0cf2f2bb44f456150d428016675d5876a9d2e2aa","modified":1701931830180},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/pagination.styl","hash":"8bb1b68e5f3552cb48c2ffa31edbc53646a8fb4c","modified":1701931830180},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/qrcode.styl","hash":"78704a94c0436097abfb0e0a57abeb3429c749b7","modified":1701931830184},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/scroll-btn.styl","hash":"f0e429a27fa8a7658fcbddbb4d4dbe4afa12499a","modified":1701931830184},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/search.styl","hash":"10f7e91a91e681fb9fe46f9df7707b9ef78707c8","modified":1701931830184},{"_id":"node_modules/hexo-theme-fluid/source/css/_pages/_base/_widget/toc.styl","hash":"9e7452aa2372153f25d7a4675c9d36d281a65d24","modified":1701931830188},{"_id":"node_modules/hexo-theme-fluid/source/img/default.png","hash":"167a12978d80371cf578c8a2e45c24a2eb25b6fb","modified":1701931830152},{"_id":"source/img/default.png","hash":"8faf377ea7a593754c3c5dde09dac336753640d9","modified":1701934546666},{"_id":"source/img/avatar.png","hash":"a782fa33b3ef9f20e98cbf8315c0c32e6933040f","modified":1701935784663},{"_id":"public/local-search.xml","hash":"91282e8942b14c0a0eeeeabd59a7f392d41e1c6d","modified":1701935944912},{"_id":"public/404.html","hash":"a3cb42d9e7f7f4a02ecdddef50824d56c4eac166","modified":1701935944912},{"_id":"public/tags/index.html","hash":"59194b360e76ffde02f680324e07d99014e82c94","modified":1701935944912},{"_id":"public/links/index.html","hash":"001932d9d952a63d2476af2183de554f8e8d03c2","modified":1701935944912},{"_id":"public/categories/index.html","hash":"b870212cc61ce2414dfb1a171de7e69438aea43a","modified":1701935944912},{"_id":"public/img/loading.gif","hash":"2d2fc0f947940f98c21afafef39ecf226a2e8d55","modified":1701935944912},{"_id":"public/img/avatar.png","hash":"a782fa33b3ef9f20e98cbf8315c0c32e6933040f","modified":1701935944912},{"_id":"public/img/fluid.png","hash":"64b215db2cb3af98fe639e94537cb5209f959c78","modified":1701935944912},{"_id":"public/img/police_beian.png","hash":"90efded6baa2dde599a9d6b1387973e8e64923ea","modified":1701935944912},{"_id":"public/xml/local-search.xml","hash":"8c96ba6a064705602ce28d096fd7dd9069630a55","modified":1701935944912},{"_id":"public/css/gitalk.css","hash":"a57b3cc8e04a0a4a27aefa07facf5b5e7bca0e76","modified":1701935944912},{"_id":"public/css/highlight-dark.css","hash":"b150e70e6eb5f251e9e6fde3ecba5357846e5a97","modified":1701935944912},{"_id":"public/css/highlight.css","hash":"e1ad4a9492d77830378d5e76942e6b7146d9b67d","modified":1701935944912},{"_id":"public/js/boot.js","hash":"38bd26c6b7acdafda86dda3560e6a3ca488d3c76","modified":1701935944912},{"_id":"public/js/color-schema.js","hash":"c5939d14065d38c86e16d1642e154dde5a23e830","modified":1701935944912},{"_id":"public/js/img-lazyload.js","hash":"cbdeca434ec4da51f488c821d51b4d23c73294af","modified":1701935944912},{"_id":"public/js/events.js","hash":"89e3561488a618ed0caeb9edf18e441978e29c25","modified":1701935944912},{"_id":"public/js/local-search.js","hash":"b9945f76f8682f3ec32edfb285b26eb559f7b7e8","modified":1701935944912},{"_id":"public/js/plugins.js","hash":"c34916291e392a774ff3e85c55badb83e8661297","modified":1701935944912},{"_id":"public/js/leancloud.js","hash":"eff77c7a5c399fcaefda48884980571e15243fc9","modified":1701935944912},{"_id":"public/js/utils.js","hash":"b82e7c289a66dfd36064470fd41c0e96fc598b43","modified":1701935944912},{"_id":"public/css/main.css","hash":"cdd1d01df7e59aa70e622e07a463d46e18444bae","modified":1701935944912},{"_id":"public/img/default.png","hash":"8faf377ea7a593754c3c5dde09dac336753640d9","modified":1701935944912}],"Category":[{"name":"网络编程","_id":"clpb486670003jwti7jt4etu4"},{"name":"豆知识","_id":"clpb4866b0009jwti2y7d0w21"},{"name":"项目实践","_id":"clpb4866c000fjwti3g4phs3j"},{"name":"AI学习","_id":"clpc1b6yn00000cti5m7hbrzi"},{"name":"python","_id":"clpj50l1v00015ktifdtr106g"},{"name":"小玩具","_id":"clprs6y7g00067cti2bnm6jkd"},{"name":"网络工具","_id":"clpulwiqo0001igti4sefh19c"}],"Data":[],"Page":[{"title":"about","layout":"about","_content":"\n兴趣是网络、编程、网络编程","source":"about/index.md","raw":"---\ntitle: about\nlayout: about\n---\n\n兴趣是网络、编程、网络编程","date":"2023-12-07T07:56:57.234Z","updated":"2023-12-07T07:56:57.234Z","path":"about/index.html","_id":"clpb486600000jwticczv35oq","comments":1,"content":"<p>兴趣是网络、编程、网络编程</p>\n","site":{"data":{}},"excerpt":"","more":"<p>兴趣是网络、编程、网络编程</p>\n"}],"Post":[{"title":"SSH握手过程","date":"2023-11-20T01:20:06.000Z","_content":"\n# RFC\n\nhttps://datatracker.ietf.org/doc/html/rfc4253\n\n# SSH简介\n\n安全外壳协议（Secure Shell Protocol，简称SSH）是一种加密的网络传输协议，可在不安全的网络中为网络服务提供安全的传输环境。SSH通过在网络中建立安全隧道来实现SSH客户端与服务器之间的连接。SSH最常见的用途是远程登录系统，人们通常利用SSH来传输命令行界面和远程执行命令。\n\n<!--more-->\n\n# SSH数据包基本格式\n\nSSH的数据包加密后分块传输，每次传输的实际包长度都应为密码块大小的整数倍或8\n\n每个加密后的数据包都由如下结构构成\n\n```c c\nuint32    packet_length;\nbyte      padding_length;\nbyte[n1]  payload; // n1 = packet_length - padding_length - 1\nbyte[n2]  random_padding; // n2 = padding_length\nbyte[m]   mac(Message_Authentication_Code - MAC); // m = mac_length\n```\n\n+ packet_length：数据载荷的长度，不包括`mac`部分和`packet_length`本身。在进行加密协商完成后，传输的`packet_length`也会被加密\n\n+ padding_length：`random_padding`块的大小\n\n+ payload：数据载荷，根绝协商决定被加密或被压缩的方法\n\n+ random padding： 0-255位随机填充\n\n+ mac：信息认证码，用作信息完整性校验\n\n# SSH过程\n\n以下采用一个SSH抓包结果为例，描述SSH链接建立过程：\n\n|=======|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|=======|\n\n|&nbsp;&nbsp;&nbsp;客户端&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;服务端&nbsp;&nbsp;&nbsp;&nbsp;|\n\n|=======|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|=======|\n\n|=======================链接建立=======================|\n\n|1. 三次握手1|----------------------------------------------------------------------------------------->\n\n<----------------------------------------------------------------------------------------|2. 三次握手2|\n\n|3. 三次握手3|----------------------------------------------------------------------------------------->\n\n|=======================协议协商=======================|\n\n<----------------------------------------------------------------------------------------|4. 服务端协议|\n\n|5. 客户端协议|----------------------------------------------------------------------------------------->\n\n|=======================算法协商=======================|\n\n<-------------------------------------------------------------------------------------|6. 服务端算法表|\n\n|7. 客户端算法表|------------------------------------------------------------------------------------>\n\n|=======================密钥交换=======================|\n\n|8. Diffie-Hellman Init|------------------------------------------------------------------------------>\n\n<------------------------------------------------|9. Diffie-Hellman Reply，New Keys，加密包|\n\n|10. New Keys|---------------------------------------------------------------------------------------->\n\n|=======================加密通讯=======================|\n\n## 链接建立\n\n（1）（2）（3）三次握手报文\n\n[TCP三次握手](https://zh.wikipedia.org/zh-hans/%E4%BC%A0%E8%BE%93%E6%8E%A7%E5%88%B6%E5%8D%8F%E8%AE%AE)\n\n## 协议协商\n\n（4）服务端协议报文\n\nHex内容\n\n> 0x 53 53 48 2d 32 2e 30 2d 4f 70 65 6e 53 53 48 5f 38 2e 30 0d 0a\n\n报文内容\n\n> SSH-2.0-OpenSSH_8.0&lt;CR>&lt;LF>\n\n包括SSH、协议版本（2.0）、软件版本（OpenSSH_8.0）\n\n（5）客户端协议报文\n\nHex内容\n\n> 0x 53 53 48 2d 32 2e 30 2d 6e 73 73 73 68 32 5f 37 2e 30 2e 30 30 33 33 20 4e 65 74 53 61 72 61 6e 67 20 43 6f 6d 70 75 74 65 72 2c 20 49 6e 63 2e 0d 0a\n\n报文内容\n\n> SSH-2.0-nsssh2_7.0.0033 NetSarang Computer, Inc.&lt;CR>&lt;LF>\n\n## 算法协商\n\n在算法协商的过程中，双方会各自发送自己支持的算法列表，最终对以下几个算法达成共识：\n+ kex_algorithms：密钥交换算法\n+ server_host_key_algorithms：公钥算法\n+ encryption_algorithms：加密算法\n+ mac_algorithms：数据完整性算法\n+ compression_algorithms：压缩算法\n+ languages：语言标签（可选）\n+ first_kex_packet_follows：表示是否有猜测数据包\n  \n在达成共识的过程中，基本以客户端中的算法排序优先匹配\n\n（6）服务端算法表报文\n\n+ packet_length：0x00 00 04 14（1044）\n+ padding_length：0x05（5）\n+ SSH_MSG_SERVICE_ACCEPT：0x14（`SSH_MSG_KEXINIT`）\n+ Cookie：0xd7 86 29 66...(16Byte)\n+ kex_algorithms length：下方算法表长度\n+ kex_algorithms list：算法表（字符串表示，逗号分隔）\n+ server_host_key_algorithms length：下方算法表长度\n+ server_host_key_algorithms list：算法表（字符串表示，逗号分隔）\n+ encryption_algorithms_client_to_server length：下方算法表长度\n+ encryption_algorithms_client_to_server list：算法表（字符串表示，逗号分隔）\n+ encryption_algorithms_server_to_client length：下方算法表长度\n+ encryption_algorithms_server_to_client list：算法表（字符串表示，逗号分隔）\n+ mac_algorithms_client_to_server length：下方算法表长度\n+ mac_algorithms_client_to_server list：算法表（字符串表示，逗号分隔）\n+ mac_algorithms_server_to_client length：下方算法表长度\n+ mac_algorithms_server_to_client list：算法表（字符串表示，逗号分隔）\n+ compression_algorithms_client_to_server length：下方算法表长度\n+ compression_algorithms_client_to_server list：算法表（字符串表示，逗号分隔）\n+ compression_algorithms_server_to_client length：下方算法表长度\n+ compression_algorithms_server_to_client list：算法表（字符串表示，逗号分隔）\n+ languages_client_to_server length：下方算法表长度\n+ languages_client_to_server list：算法表（字符串表示，逗号分隔）\n+ languages_server_to_client length：下方算法表长度\n+ languages_server_to_client list：算法表（字符串表示，逗号分隔）\n+ first_kex_packet_follows：0x00\n+ Reserved：0x00 00 00 00\n+ Padding：0x00 00 00 00 00（`padding_length`长度）\n\n（7）客户端算法表报文\n\n与服务端算法表格式相同\n\n## 密钥交换\n\n通过双方协商，决定采用Elliptic Curve Diffie-Hellman方式进行密钥交换\n\n（8）客户端Diffie-Hellman Init\n+ packet_length：0x00 00 00 2c\n+ padding_length：0x06\n+ MSG：0x1e（Elliptic Curve Diffie-Hellman Key Exchange Init）\n+ 客户端公钥长度：0x00 00 00 20（32）\n+ 客户端公钥：0xd1 d9 b8 6c 84 67 55 0f ca 84 6e 8b 0e 67 25 27 6b 50 ae ed a4 6d dc 0b 73 4c 15 ad e9 f5 51 66\n+ Padding：0x91 f0 e8 0c f4 9b\n\n（9）服务端Diffie-Hellman Reply，New Keys，加密包\n\n服务端的回复包含三部分内容，Key Exchange Reply、New Keys、 加密包\n\n其中，Key Exchange Reply包括了密钥交换的结果\n\n+ packet_length：0x00 00 03 5c\n+ padding_length：0x08\n+ MSG：0x1f（Elliptic Curve Diffie-Hellman Key Exchange Reply）\n+ Host Key Length：0x00 00 01 97\n+ Host Key Type Length：0x00 00 00 07\n+ Host Key Type：0x73 73 68 2d 72 73 21（ssh-rsa）\n+ Multi Precision Integer Length：0x00 00 00 03\n+ RSA public exponent (e)：0x01 00 01\n+ Multi Precision Integer Length：0x00 00 01 81\n+ RSA Modulus (N)：0x00 be 1b 4b 73 9d f8 37 0e 33...\n+ ECDH server's ephemeral public key length：0x00 00 00 20\n+ ECDH server's ephemeral public key (Q_S)：0x3a 2e 62 f6 ee...\n+ KEX H signature length：0x00 00 01 8f\n+ KEX H signature ：0x00 00 00 07 73 73 68 2d 72 73 61 00 00 01 80 a0...\n+ Padding：0x00 00 00 00 00 00 00 00\n\nNew Keys表示密钥交换完成，此后的内容都需要使用新密钥处理\n\n+ packet_length：0x00 00 00 0c\n+ padding_length：0x0a\n+ MSG：0x15（`SSH_MSG_NEWKEYS`）\n+ Padding：0x00 00 00 00 00 00 00 00 00 00\n\n后续的数据已经被加密，无法查看内容，推测是与客户端进行登录认证的协商\n\n（10）客户端New Keys\n\n客户端的New Keys包与服务端相同，后续客户端发送数据也都被加密处理","source":"_posts/SSH.md","raw":"---\ntitle: SSH握手过程\ndate: 2023-11-20 09:20:06\ncategories:\n- 网络编程\ntags:\n- 网络编程\n- SSH\n---\n\n# RFC\n\nhttps://datatracker.ietf.org/doc/html/rfc4253\n\n# SSH简介\n\n安全外壳协议（Secure Shell Protocol，简称SSH）是一种加密的网络传输协议，可在不安全的网络中为网络服务提供安全的传输环境。SSH通过在网络中建立安全隧道来实现SSH客户端与服务器之间的连接。SSH最常见的用途是远程登录系统，人们通常利用SSH来传输命令行界面和远程执行命令。\n\n<!--more-->\n\n# SSH数据包基本格式\n\nSSH的数据包加密后分块传输，每次传输的实际包长度都应为密码块大小的整数倍或8\n\n每个加密后的数据包都由如下结构构成\n\n```c c\nuint32    packet_length;\nbyte      padding_length;\nbyte[n1]  payload; // n1 = packet_length - padding_length - 1\nbyte[n2]  random_padding; // n2 = padding_length\nbyte[m]   mac(Message_Authentication_Code - MAC); // m = mac_length\n```\n\n+ packet_length：数据载荷的长度，不包括`mac`部分和`packet_length`本身。在进行加密协商完成后，传输的`packet_length`也会被加密\n\n+ padding_length：`random_padding`块的大小\n\n+ payload：数据载荷，根绝协商决定被加密或被压缩的方法\n\n+ random padding： 0-255位随机填充\n\n+ mac：信息认证码，用作信息完整性校验\n\n# SSH过程\n\n以下采用一个SSH抓包结果为例，描述SSH链接建立过程：\n\n|=======|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|=======|\n\n|&nbsp;&nbsp;&nbsp;客户端&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;服务端&nbsp;&nbsp;&nbsp;&nbsp;|\n\n|=======|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|=======|\n\n|=======================链接建立=======================|\n\n|1. 三次握手1|----------------------------------------------------------------------------------------->\n\n<----------------------------------------------------------------------------------------|2. 三次握手2|\n\n|3. 三次握手3|----------------------------------------------------------------------------------------->\n\n|=======================协议协商=======================|\n\n<----------------------------------------------------------------------------------------|4. 服务端协议|\n\n|5. 客户端协议|----------------------------------------------------------------------------------------->\n\n|=======================算法协商=======================|\n\n<-------------------------------------------------------------------------------------|6. 服务端算法表|\n\n|7. 客户端算法表|------------------------------------------------------------------------------------>\n\n|=======================密钥交换=======================|\n\n|8. Diffie-Hellman Init|------------------------------------------------------------------------------>\n\n<------------------------------------------------|9. Diffie-Hellman Reply，New Keys，加密包|\n\n|10. New Keys|---------------------------------------------------------------------------------------->\n\n|=======================加密通讯=======================|\n\n## 链接建立\n\n（1）（2）（3）三次握手报文\n\n[TCP三次握手](https://zh.wikipedia.org/zh-hans/%E4%BC%A0%E8%BE%93%E6%8E%A7%E5%88%B6%E5%8D%8F%E8%AE%AE)\n\n## 协议协商\n\n（4）服务端协议报文\n\nHex内容\n\n> 0x 53 53 48 2d 32 2e 30 2d 4f 70 65 6e 53 53 48 5f 38 2e 30 0d 0a\n\n报文内容\n\n> SSH-2.0-OpenSSH_8.0&lt;CR>&lt;LF>\n\n包括SSH、协议版本（2.0）、软件版本（OpenSSH_8.0）\n\n（5）客户端协议报文\n\nHex内容\n\n> 0x 53 53 48 2d 32 2e 30 2d 6e 73 73 73 68 32 5f 37 2e 30 2e 30 30 33 33 20 4e 65 74 53 61 72 61 6e 67 20 43 6f 6d 70 75 74 65 72 2c 20 49 6e 63 2e 0d 0a\n\n报文内容\n\n> SSH-2.0-nsssh2_7.0.0033 NetSarang Computer, Inc.&lt;CR>&lt;LF>\n\n## 算法协商\n\n在算法协商的过程中，双方会各自发送自己支持的算法列表，最终对以下几个算法达成共识：\n+ kex_algorithms：密钥交换算法\n+ server_host_key_algorithms：公钥算法\n+ encryption_algorithms：加密算法\n+ mac_algorithms：数据完整性算法\n+ compression_algorithms：压缩算法\n+ languages：语言标签（可选）\n+ first_kex_packet_follows：表示是否有猜测数据包\n  \n在达成共识的过程中，基本以客户端中的算法排序优先匹配\n\n（6）服务端算法表报文\n\n+ packet_length：0x00 00 04 14（1044）\n+ padding_length：0x05（5）\n+ SSH_MSG_SERVICE_ACCEPT：0x14（`SSH_MSG_KEXINIT`）\n+ Cookie：0xd7 86 29 66...(16Byte)\n+ kex_algorithms length：下方算法表长度\n+ kex_algorithms list：算法表（字符串表示，逗号分隔）\n+ server_host_key_algorithms length：下方算法表长度\n+ server_host_key_algorithms list：算法表（字符串表示，逗号分隔）\n+ encryption_algorithms_client_to_server length：下方算法表长度\n+ encryption_algorithms_client_to_server list：算法表（字符串表示，逗号分隔）\n+ encryption_algorithms_server_to_client length：下方算法表长度\n+ encryption_algorithms_server_to_client list：算法表（字符串表示，逗号分隔）\n+ mac_algorithms_client_to_server length：下方算法表长度\n+ mac_algorithms_client_to_server list：算法表（字符串表示，逗号分隔）\n+ mac_algorithms_server_to_client length：下方算法表长度\n+ mac_algorithms_server_to_client list：算法表（字符串表示，逗号分隔）\n+ compression_algorithms_client_to_server length：下方算法表长度\n+ compression_algorithms_client_to_server list：算法表（字符串表示，逗号分隔）\n+ compression_algorithms_server_to_client length：下方算法表长度\n+ compression_algorithms_server_to_client list：算法表（字符串表示，逗号分隔）\n+ languages_client_to_server length：下方算法表长度\n+ languages_client_to_server list：算法表（字符串表示，逗号分隔）\n+ languages_server_to_client length：下方算法表长度\n+ languages_server_to_client list：算法表（字符串表示，逗号分隔）\n+ first_kex_packet_follows：0x00\n+ Reserved：0x00 00 00 00\n+ Padding：0x00 00 00 00 00（`padding_length`长度）\n\n（7）客户端算法表报文\n\n与服务端算法表格式相同\n\n## 密钥交换\n\n通过双方协商，决定采用Elliptic Curve Diffie-Hellman方式进行密钥交换\n\n（8）客户端Diffie-Hellman Init\n+ packet_length：0x00 00 00 2c\n+ padding_length：0x06\n+ MSG：0x1e（Elliptic Curve Diffie-Hellman Key Exchange Init）\n+ 客户端公钥长度：0x00 00 00 20（32）\n+ 客户端公钥：0xd1 d9 b8 6c 84 67 55 0f ca 84 6e 8b 0e 67 25 27 6b 50 ae ed a4 6d dc 0b 73 4c 15 ad e9 f5 51 66\n+ Padding：0x91 f0 e8 0c f4 9b\n\n（9）服务端Diffie-Hellman Reply，New Keys，加密包\n\n服务端的回复包含三部分内容，Key Exchange Reply、New Keys、 加密包\n\n其中，Key Exchange Reply包括了密钥交换的结果\n\n+ packet_length：0x00 00 03 5c\n+ padding_length：0x08\n+ MSG：0x1f（Elliptic Curve Diffie-Hellman Key Exchange Reply）\n+ Host Key Length：0x00 00 01 97\n+ Host Key Type Length：0x00 00 00 07\n+ Host Key Type：0x73 73 68 2d 72 73 21（ssh-rsa）\n+ Multi Precision Integer Length：0x00 00 00 03\n+ RSA public exponent (e)：0x01 00 01\n+ Multi Precision Integer Length：0x00 00 01 81\n+ RSA Modulus (N)：0x00 be 1b 4b 73 9d f8 37 0e 33...\n+ ECDH server's ephemeral public key length：0x00 00 00 20\n+ ECDH server's ephemeral public key (Q_S)：0x3a 2e 62 f6 ee...\n+ KEX H signature length：0x00 00 01 8f\n+ KEX H signature ：0x00 00 00 07 73 73 68 2d 72 73 61 00 00 01 80 a0...\n+ Padding：0x00 00 00 00 00 00 00 00\n\nNew Keys表示密钥交换完成，此后的内容都需要使用新密钥处理\n\n+ packet_length：0x00 00 00 0c\n+ padding_length：0x0a\n+ MSG：0x15（`SSH_MSG_NEWKEYS`）\n+ Padding：0x00 00 00 00 00 00 00 00 00 00\n\n后续的数据已经被加密，无法查看内容，推测是与客户端进行登录认证的协商\n\n（10）客户端New Keys\n\n客户端的New Keys包与服务端相同，后续客户端发送数据也都被加密处理","slug":"SSH","published":1,"updated":"2023-12-07T07:44:56.713Z","_id":"clpb486630001jwti8ax46a41","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"RFC\"><a href=\"#RFC\" class=\"headerlink\" title=\"RFC\"></a>RFC</h1><p><a href=\"https://datatracker.ietf.org/doc/html/rfc4253\">https://datatracker.ietf.org/doc/html/rfc4253</a></p>\n<h1 id=\"SSH简介\"><a href=\"#SSH简介\" class=\"headerlink\" title=\"SSH简介\"></a>SSH简介</h1><p>安全外壳协议（Secure Shell Protocol，简称SSH）是一种加密的网络传输协议，可在不安全的网络中为网络服务提供安全的传输环境。SSH通过在网络中建立安全隧道来实现SSH客户端与服务器之间的连接。SSH最常见的用途是远程登录系统，人们通常利用SSH来传输命令行界面和远程执行命令。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"SSH数据包基本格式\"><a href=\"#SSH数据包基本格式\" class=\"headerlink\" title=\"SSH数据包基本格式\"></a>SSH数据包基本格式</h1><p>SSH的数据包加密后分块传输，每次传输的实际包长度都应为密码块大小的整数倍或8</p>\n<p>每个加密后的数据包都由如下结构构成</p>\n<figure class=\"highlight c\"><figcaption><span>c</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\">uint32    packet_length;<br>byte      padding_length;<br>byte[n1]  payload; <span class=\"hljs-comment\">// n1 = packet_length - padding_length - 1</span><br>byte[n2]  random_padding; <span class=\"hljs-comment\">// n2 = padding_length</span><br>byte[m]   mac(Message_Authentication_Code - MAC); <span class=\"hljs-comment\">// m = mac_length</span><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li><p>packet_length：数据载荷的长度，不包括<code>mac</code>部分和<code>packet_length</code>本身。在进行加密协商完成后，传输的<code>packet_length</code>也会被加密</p>\n</li>\n<li><p>padding_length：<code>random_padding</code>块的大小</p>\n</li>\n<li><p>payload：数据载荷，根绝协商决定被加密或被压缩的方法</p>\n</li>\n<li><p>random padding： 0-255位随机填充</p>\n</li>\n<li><p>mac：信息认证码，用作信息完整性校验</p>\n</li>\n</ul>\n<h1 id=\"SSH过程\"><a href=\"#SSH过程\" class=\"headerlink\" title=\"SSH过程\"></a>SSH过程</h1><p>以下采用一个SSH抓包结果为例，描述SSH链接建立过程：</p>\n<p>|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|</p>\n<p>|&nbsp;&nbsp;&nbsp;客户端&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;服务端&nbsp;&nbsp;&nbsp;&nbsp;|</p>\n<p>|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|</p>\n<p>|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;链接建立&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|</p>\n<p>|1. 三次握手1|—————————————————————————————–&gt;</p>\n<p>&lt;—————————————————————————————-|2. 三次握手2|</p>\n<p>|3. 三次握手3|—————————————————————————————–&gt;</p>\n<p>|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;协议协商&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|</p>\n<p>&lt;—————————————————————————————-|4. 服务端协议|</p>\n<p>|5. 客户端协议|—————————————————————————————–&gt;</p>\n<p>|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;算法协商&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|</p>\n<p>&lt;————————————————————————————-|6. 服务端算法表|</p>\n<p>|7. 客户端算法表|————————————————————————————&gt;</p>\n<p>|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;密钥交换&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|</p>\n<p>|8. Diffie-Hellman Init|——————————————————————————&gt;</p>\n<p>&lt;————————————————|9. Diffie-Hellman Reply，New Keys，加密包|</p>\n<p>|10. New Keys|—————————————————————————————-&gt;</p>\n<p>|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;加密通讯&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|</p>\n<h2 id=\"链接建立\"><a href=\"#链接建立\" class=\"headerlink\" title=\"链接建立\"></a>链接建立</h2><p>（1）（2）（3）三次握手报文</p>\n<p><a href=\"https://zh.wikipedia.org/zh-hans/%E4%BC%A0%E8%BE%93%E6%8E%A7%E5%88%B6%E5%8D%8F%E8%AE%AE\">TCP三次握手</a></p>\n<h2 id=\"协议协商\"><a href=\"#协议协商\" class=\"headerlink\" title=\"协议协商\"></a>协议协商</h2><p>（4）服务端协议报文</p>\n<p>Hex内容</p>\n<blockquote>\n<p>0x 53 53 48 2d 32 2e 30 2d 4f 70 65 6e 53 53 48 5f 38 2e 30 0d 0a</p>\n</blockquote>\n<p>报文内容</p>\n<blockquote>\n<p>SSH-2.0-OpenSSH_8.0&lt;CR&gt;&lt;LF&gt;</p>\n</blockquote>\n<p>包括SSH、协议版本（2.0）、软件版本（OpenSSH_8.0）</p>\n<p>（5）客户端协议报文</p>\n<p>Hex内容</p>\n<blockquote>\n<p>0x 53 53 48 2d 32 2e 30 2d 6e 73 73 73 68 32 5f 37 2e 30 2e 30 30 33 33 20 4e 65 74 53 61 72 61 6e 67 20 43 6f 6d 70 75 74 65 72 2c 20 49 6e 63 2e 0d 0a</p>\n</blockquote>\n<p>报文内容</p>\n<blockquote>\n<p>SSH-2.0-nsssh2_7.0.0033 NetSarang Computer, Inc.&lt;CR&gt;&lt;LF&gt;</p>\n</blockquote>\n<h2 id=\"算法协商\"><a href=\"#算法协商\" class=\"headerlink\" title=\"算法协商\"></a>算法协商</h2><p>在算法协商的过程中，双方会各自发送自己支持的算法列表，最终对以下几个算法达成共识：</p>\n<ul>\n<li>kex_algorithms：密钥交换算法</li>\n<li>server_host_key_algorithms：公钥算法</li>\n<li>encryption_algorithms：加密算法</li>\n<li>mac_algorithms：数据完整性算法</li>\n<li>compression_algorithms：压缩算法</li>\n<li>languages：语言标签（可选）</li>\n<li>first_kex_packet_follows：表示是否有猜测数据包</li>\n</ul>\n<p>在达成共识的过程中，基本以客户端中的算法排序优先匹配</p>\n<p>（6）服务端算法表报文</p>\n<ul>\n<li>packet_length：0x00 00 04 14（1044）</li>\n<li>padding_length：0x05（5）</li>\n<li>SSH_MSG_SERVICE_ACCEPT：0x14（<code>SSH_MSG_KEXINIT</code>）</li>\n<li>Cookie：0xd7 86 29 66…(16Byte)</li>\n<li>kex_algorithms length：下方算法表长度</li>\n<li>kex_algorithms list：算法表（字符串表示，逗号分隔）</li>\n<li>server_host_key_algorithms length：下方算法表长度</li>\n<li>server_host_key_algorithms list：算法表（字符串表示，逗号分隔）</li>\n<li>encryption_algorithms_client_to_server length：下方算法表长度</li>\n<li>encryption_algorithms_client_to_server list：算法表（字符串表示，逗号分隔）</li>\n<li>encryption_algorithms_server_to_client length：下方算法表长度</li>\n<li>encryption_algorithms_server_to_client list：算法表（字符串表示，逗号分隔）</li>\n<li>mac_algorithms_client_to_server length：下方算法表长度</li>\n<li>mac_algorithms_client_to_server list：算法表（字符串表示，逗号分隔）</li>\n<li>mac_algorithms_server_to_client length：下方算法表长度</li>\n<li>mac_algorithms_server_to_client list：算法表（字符串表示，逗号分隔）</li>\n<li>compression_algorithms_client_to_server length：下方算法表长度</li>\n<li>compression_algorithms_client_to_server list：算法表（字符串表示，逗号分隔）</li>\n<li>compression_algorithms_server_to_client length：下方算法表长度</li>\n<li>compression_algorithms_server_to_client list：算法表（字符串表示，逗号分隔）</li>\n<li>languages_client_to_server length：下方算法表长度</li>\n<li>languages_client_to_server list：算法表（字符串表示，逗号分隔）</li>\n<li>languages_server_to_client length：下方算法表长度</li>\n<li>languages_server_to_client list：算法表（字符串表示，逗号分隔）</li>\n<li>first_kex_packet_follows：0x00</li>\n<li>Reserved：0x00 00 00 00</li>\n<li>Padding：0x00 00 00 00 00（<code>padding_length</code>长度）</li>\n</ul>\n<p>（7）客户端算法表报文</p>\n<p>与服务端算法表格式相同</p>\n<h2 id=\"密钥交换\"><a href=\"#密钥交换\" class=\"headerlink\" title=\"密钥交换\"></a>密钥交换</h2><p>通过双方协商，决定采用Elliptic Curve Diffie-Hellman方式进行密钥交换</p>\n<p>（8）客户端Diffie-Hellman Init</p>\n<ul>\n<li>packet_length：0x00 00 00 2c</li>\n<li>padding_length：0x06</li>\n<li>MSG：0x1e（Elliptic Curve Diffie-Hellman Key Exchange Init）</li>\n<li>客户端公钥长度：0x00 00 00 20（32）</li>\n<li>客户端公钥：0xd1 d9 b8 6c 84 67 55 0f ca 84 6e 8b 0e 67 25 27 6b 50 ae ed a4 6d dc 0b 73 4c 15 ad e9 f5 51 66</li>\n<li>Padding：0x91 f0 e8 0c f4 9b</li>\n</ul>\n<p>（9）服务端Diffie-Hellman Reply，New Keys，加密包</p>\n<p>服务端的回复包含三部分内容，Key Exchange Reply、New Keys、 加密包</p>\n<p>其中，Key Exchange Reply包括了密钥交换的结果</p>\n<ul>\n<li>packet_length：0x00 00 03 5c</li>\n<li>padding_length：0x08</li>\n<li>MSG：0x1f（Elliptic Curve Diffie-Hellman Key Exchange Reply）</li>\n<li>Host Key Length：0x00 00 01 97</li>\n<li>Host Key Type Length：0x00 00 00 07</li>\n<li>Host Key Type：0x73 73 68 2d 72 73 21（ssh-rsa）</li>\n<li>Multi Precision Integer Length：0x00 00 00 03</li>\n<li>RSA public exponent (e)：0x01 00 01</li>\n<li>Multi Precision Integer Length：0x00 00 01 81</li>\n<li>RSA Modulus (N)：0x00 be 1b 4b 73 9d f8 37 0e 33…</li>\n<li>ECDH server’s ephemeral public key length：0x00 00 00 20</li>\n<li>ECDH server’s ephemeral public key (Q_S)：0x3a 2e 62 f6 ee…</li>\n<li>KEX H signature length：0x00 00 01 8f</li>\n<li>KEX H signature ：0x00 00 00 07 73 73 68 2d 72 73 61 00 00 01 80 a0…</li>\n<li>Padding：0x00 00 00 00 00 00 00 00</li>\n</ul>\n<p>New Keys表示密钥交换完成，此后的内容都需要使用新密钥处理</p>\n<ul>\n<li>packet_length：0x00 00 00 0c</li>\n<li>padding_length：0x0a</li>\n<li>MSG：0x15（<code>SSH_MSG_NEWKEYS</code>）</li>\n<li>Padding：0x00 00 00 00 00 00 00 00 00 00</li>\n</ul>\n<p>后续的数据已经被加密，无法查看内容，推测是与客户端进行登录认证的协商</p>\n<p>（10）客户端New Keys</p>\n<p>客户端的New Keys包与服务端相同，后续客户端发送数据也都被加密处理</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"RFC\"><a href=\"#RFC\" class=\"headerlink\" title=\"RFC\"></a>RFC</h1><p><a href=\"https://datatracker.ietf.org/doc/html/rfc4253\">https://datatracker.ietf.org/doc/html/rfc4253</a></p>\n<h1 id=\"SSH简介\"><a href=\"#SSH简介\" class=\"headerlink\" title=\"SSH简介\"></a>SSH简介</h1><p>安全外壳协议（Secure Shell Protocol，简称SSH）是一种加密的网络传输协议，可在不安全的网络中为网络服务提供安全的传输环境。SSH通过在网络中建立安全隧道来实现SSH客户端与服务器之间的连接。SSH最常见的用途是远程登录系统，人们通常利用SSH来传输命令行界面和远程执行命令。</p>","more":"<h1 id=\"SSH数据包基本格式\"><a href=\"#SSH数据包基本格式\" class=\"headerlink\" title=\"SSH数据包基本格式\"></a>SSH数据包基本格式</h1><p>SSH的数据包加密后分块传输，每次传输的实际包长度都应为密码块大小的整数倍或8</p>\n<p>每个加密后的数据包都由如下结构构成</p>\n<figure class=\"highlight c\"><figcaption><span>c</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs c\">uint32    packet_length;<br>byte      padding_length;<br>byte[n1]  payload; <span class=\"hljs-comment\">// n1 = packet_length - padding_length - 1</span><br>byte[n2]  random_padding; <span class=\"hljs-comment\">// n2 = padding_length</span><br>byte[m]   mac(Message_Authentication_Code - MAC); <span class=\"hljs-comment\">// m = mac_length</span><br></code></pre></td></tr></table></figure>\n\n<ul>\n<li><p>packet_length：数据载荷的长度，不包括<code>mac</code>部分和<code>packet_length</code>本身。在进行加密协商完成后，传输的<code>packet_length</code>也会被加密</p>\n</li>\n<li><p>padding_length：<code>random_padding</code>块的大小</p>\n</li>\n<li><p>payload：数据载荷，根绝协商决定被加密或被压缩的方法</p>\n</li>\n<li><p>random padding： 0-255位随机填充</p>\n</li>\n<li><p>mac：信息认证码，用作信息完整性校验</p>\n</li>\n</ul>\n<h1 id=\"SSH过程\"><a href=\"#SSH过程\" class=\"headerlink\" title=\"SSH过程\"></a>SSH过程</h1><p>以下采用一个SSH抓包结果为例，描述SSH链接建立过程：</p>\n<p>|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|</p>\n<p>|&nbsp;&nbsp;&nbsp;客户端&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;服务端&nbsp;&nbsp;&nbsp;&nbsp;|</p>\n<p>|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|</p>\n<p>|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;链接建立&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|</p>\n<p>|1. 三次握手1|—————————————————————————————–&gt;</p>\n<p>&lt;—————————————————————————————-|2. 三次握手2|</p>\n<p>|3. 三次握手3|—————————————————————————————–&gt;</p>\n<p>|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;协议协商&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|</p>\n<p>&lt;—————————————————————————————-|4. 服务端协议|</p>\n<p>|5. 客户端协议|—————————————————————————————–&gt;</p>\n<p>|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;算法协商&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|</p>\n<p>&lt;————————————————————————————-|6. 服务端算法表|</p>\n<p>|7. 客户端算法表|————————————————————————————&gt;</p>\n<p>|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;密钥交换&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|</p>\n<p>|8. Diffie-Hellman Init|——————————————————————————&gt;</p>\n<p>&lt;————————————————|9. Diffie-Hellman Reply，New Keys，加密包|</p>\n<p>|10. New Keys|—————————————————————————————-&gt;</p>\n<p>|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;加密通讯&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|</p>\n<h2 id=\"链接建立\"><a href=\"#链接建立\" class=\"headerlink\" title=\"链接建立\"></a>链接建立</h2><p>（1）（2）（3）三次握手报文</p>\n<p><a href=\"https://zh.wikipedia.org/zh-hans/%E4%BC%A0%E8%BE%93%E6%8E%A7%E5%88%B6%E5%8D%8F%E8%AE%AE\">TCP三次握手</a></p>\n<h2 id=\"协议协商\"><a href=\"#协议协商\" class=\"headerlink\" title=\"协议协商\"></a>协议协商</h2><p>（4）服务端协议报文</p>\n<p>Hex内容</p>\n<blockquote>\n<p>0x 53 53 48 2d 32 2e 30 2d 4f 70 65 6e 53 53 48 5f 38 2e 30 0d 0a</p>\n</blockquote>\n<p>报文内容</p>\n<blockquote>\n<p>SSH-2.0-OpenSSH_8.0&lt;CR&gt;&lt;LF&gt;</p>\n</blockquote>\n<p>包括SSH、协议版本（2.0）、软件版本（OpenSSH_8.0）</p>\n<p>（5）客户端协议报文</p>\n<p>Hex内容</p>\n<blockquote>\n<p>0x 53 53 48 2d 32 2e 30 2d 6e 73 73 73 68 32 5f 37 2e 30 2e 30 30 33 33 20 4e 65 74 53 61 72 61 6e 67 20 43 6f 6d 70 75 74 65 72 2c 20 49 6e 63 2e 0d 0a</p>\n</blockquote>\n<p>报文内容</p>\n<blockquote>\n<p>SSH-2.0-nsssh2_7.0.0033 NetSarang Computer, Inc.&lt;CR&gt;&lt;LF&gt;</p>\n</blockquote>\n<h2 id=\"算法协商\"><a href=\"#算法协商\" class=\"headerlink\" title=\"算法协商\"></a>算法协商</h2><p>在算法协商的过程中，双方会各自发送自己支持的算法列表，最终对以下几个算法达成共识：</p>\n<ul>\n<li>kex_algorithms：密钥交换算法</li>\n<li>server_host_key_algorithms：公钥算法</li>\n<li>encryption_algorithms：加密算法</li>\n<li>mac_algorithms：数据完整性算法</li>\n<li>compression_algorithms：压缩算法</li>\n<li>languages：语言标签（可选）</li>\n<li>first_kex_packet_follows：表示是否有猜测数据包</li>\n</ul>\n<p>在达成共识的过程中，基本以客户端中的算法排序优先匹配</p>\n<p>（6）服务端算法表报文</p>\n<ul>\n<li>packet_length：0x00 00 04 14（1044）</li>\n<li>padding_length：0x05（5）</li>\n<li>SSH_MSG_SERVICE_ACCEPT：0x14（<code>SSH_MSG_KEXINIT</code>）</li>\n<li>Cookie：0xd7 86 29 66…(16Byte)</li>\n<li>kex_algorithms length：下方算法表长度</li>\n<li>kex_algorithms list：算法表（字符串表示，逗号分隔）</li>\n<li>server_host_key_algorithms length：下方算法表长度</li>\n<li>server_host_key_algorithms list：算法表（字符串表示，逗号分隔）</li>\n<li>encryption_algorithms_client_to_server length：下方算法表长度</li>\n<li>encryption_algorithms_client_to_server list：算法表（字符串表示，逗号分隔）</li>\n<li>encryption_algorithms_server_to_client length：下方算法表长度</li>\n<li>encryption_algorithms_server_to_client list：算法表（字符串表示，逗号分隔）</li>\n<li>mac_algorithms_client_to_server length：下方算法表长度</li>\n<li>mac_algorithms_client_to_server list：算法表（字符串表示，逗号分隔）</li>\n<li>mac_algorithms_server_to_client length：下方算法表长度</li>\n<li>mac_algorithms_server_to_client list：算法表（字符串表示，逗号分隔）</li>\n<li>compression_algorithms_client_to_server length：下方算法表长度</li>\n<li>compression_algorithms_client_to_server list：算法表（字符串表示，逗号分隔）</li>\n<li>compression_algorithms_server_to_client length：下方算法表长度</li>\n<li>compression_algorithms_server_to_client list：算法表（字符串表示，逗号分隔）</li>\n<li>languages_client_to_server length：下方算法表长度</li>\n<li>languages_client_to_server list：算法表（字符串表示，逗号分隔）</li>\n<li>languages_server_to_client length：下方算法表长度</li>\n<li>languages_server_to_client list：算法表（字符串表示，逗号分隔）</li>\n<li>first_kex_packet_follows：0x00</li>\n<li>Reserved：0x00 00 00 00</li>\n<li>Padding：0x00 00 00 00 00（<code>padding_length</code>长度）</li>\n</ul>\n<p>（7）客户端算法表报文</p>\n<p>与服务端算法表格式相同</p>\n<h2 id=\"密钥交换\"><a href=\"#密钥交换\" class=\"headerlink\" title=\"密钥交换\"></a>密钥交换</h2><p>通过双方协商，决定采用Elliptic Curve Diffie-Hellman方式进行密钥交换</p>\n<p>（8）客户端Diffie-Hellman Init</p>\n<ul>\n<li>packet_length：0x00 00 00 2c</li>\n<li>padding_length：0x06</li>\n<li>MSG：0x1e（Elliptic Curve Diffie-Hellman Key Exchange Init）</li>\n<li>客户端公钥长度：0x00 00 00 20（32）</li>\n<li>客户端公钥：0xd1 d9 b8 6c 84 67 55 0f ca 84 6e 8b 0e 67 25 27 6b 50 ae ed a4 6d dc 0b 73 4c 15 ad e9 f5 51 66</li>\n<li>Padding：0x91 f0 e8 0c f4 9b</li>\n</ul>\n<p>（9）服务端Diffie-Hellman Reply，New Keys，加密包</p>\n<p>服务端的回复包含三部分内容，Key Exchange Reply、New Keys、 加密包</p>\n<p>其中，Key Exchange Reply包括了密钥交换的结果</p>\n<ul>\n<li>packet_length：0x00 00 03 5c</li>\n<li>padding_length：0x08</li>\n<li>MSG：0x1f（Elliptic Curve Diffie-Hellman Key Exchange Reply）</li>\n<li>Host Key Length：0x00 00 01 97</li>\n<li>Host Key Type Length：0x00 00 00 07</li>\n<li>Host Key Type：0x73 73 68 2d 72 73 21（ssh-rsa）</li>\n<li>Multi Precision Integer Length：0x00 00 00 03</li>\n<li>RSA public exponent (e)：0x01 00 01</li>\n<li>Multi Precision Integer Length：0x00 00 01 81</li>\n<li>RSA Modulus (N)：0x00 be 1b 4b 73 9d f8 37 0e 33…</li>\n<li>ECDH server’s ephemeral public key length：0x00 00 00 20</li>\n<li>ECDH server’s ephemeral public key (Q_S)：0x3a 2e 62 f6 ee…</li>\n<li>KEX H signature length：0x00 00 01 8f</li>\n<li>KEX H signature ：0x00 00 00 07 73 73 68 2d 72 73 61 00 00 01 80 a0…</li>\n<li>Padding：0x00 00 00 00 00 00 00 00</li>\n</ul>\n<p>New Keys表示密钥交换完成，此后的内容都需要使用新密钥处理</p>\n<ul>\n<li>packet_length：0x00 00 00 0c</li>\n<li>padding_length：0x0a</li>\n<li>MSG：0x15（<code>SSH_MSG_NEWKEYS</code>）</li>\n<li>Padding：0x00 00 00 00 00 00 00 00 00 00</li>\n</ul>\n<p>后续的数据已经被加密，无法查看内容，推测是与客户端进行登录认证的协商</p>\n<p>（10）客户端New Keys</p>\n<p>客户端的New Keys包与服务端相同，后续客户端发送数据也都被加密处理</p>"},{"title":"使用SSH包装Socks5代理","date":"2023-11-22T09:38:25.000Z","_content":"\n# subSocks简介\n\n[subSocks](https://github.com/luyuhuang/subsocks)是[Luyu Huang](https://luyuhuang.tech/)制作的纯golang网络代理软件。\n\n这里是作者本人对此项目的介绍[文档](https://luyuhuang.tech/2020/12/02/subsocks.html)。\n\n<!-- more -->\n\n# 为什么要做SSH包装\n\n因为之前使用v2ray总是被封端口，但是VPS上的22端口始终建在，考虑到SSH协议比较复杂，包括了Shell，SFTP等多种应用。我认为使用SSH协议包装流量可以起到一定的伪装作用，减少端口被封的可能性。\n\nsubSocks项目的代码结构非常漂亮，添加SSH包装非常便捷。\n\n# 实现过程\n\n首先需要了解subSocks的代码结构，Luyu Huang的[文档](https://luyuhuang.tech/2020/12/02/subsocks.html)中描述的非常详细，我只需要实现SSHWarpper和SSHStripper。\n\ngolang已经提供了SSH的官方实现，参考[文档](https://pkg.go.dev/golang.org/x/crypto/ssh)。并且提供了使用SSH进行远程Shell的示例。\n\n之后需要对SSH的[通讯过程](/2023/11/20/SSH.html)，```Session``` ```Channel``` ```Request```等等各种概念有基础的了解。\n\n使用ssh包中的代码，在服务端使用TCP链接，创建SSH服务器，等待客户端链接后获取Channel，将Channel包装为Stripper。\n\n客户端与服务端相似，需要使用TCP链接，向服务端完成握手过程，之后可获得Session，将Session包装成Wrapper。\n\n# 使用\n\n服务端必须配置密钥，可使用自己生成的密钥：\n\n```toml toml\n[server] # server configuration\n\nprotocol = \"ssh\"\nlisten = \"0.0.0.0:22\"\n\nssh.cert = \"./id_rsa.pub\"\nssh.key = \"./id_rsa\"\n```\n\n客户端只需将协议设置为ssh，其他与subsocks相同:\n\n```toml toml\n[client] # client configuration\n\nlisten = \"127.0.0.1:1080\"\n\nserver.protocol = \"ssh\"\nserver.address = \"serverIP:22\"\n```\n\n通过抓包验证，握手过程正常，通讯过程与SSH相同，多条链接使用正常，所有数据均经过加密：\n\n![](wireshark.png)\n\n通过观看视频网站验证，视频加载流畅，体验很好。","source":"_posts/SSHInSubSocks.md","raw":"---\ntitle: 使用SSH包装Socks5代理\ndate: 2023-11-22 17:38:25\ncategories:\n- 网络编程\ntags:\n- 网络编程\n- SSH\n---\n\n# subSocks简介\n\n[subSocks](https://github.com/luyuhuang/subsocks)是[Luyu Huang](https://luyuhuang.tech/)制作的纯golang网络代理软件。\n\n这里是作者本人对此项目的介绍[文档](https://luyuhuang.tech/2020/12/02/subsocks.html)。\n\n<!-- more -->\n\n# 为什么要做SSH包装\n\n因为之前使用v2ray总是被封端口，但是VPS上的22端口始终建在，考虑到SSH协议比较复杂，包括了Shell，SFTP等多种应用。我认为使用SSH协议包装流量可以起到一定的伪装作用，减少端口被封的可能性。\n\nsubSocks项目的代码结构非常漂亮，添加SSH包装非常便捷。\n\n# 实现过程\n\n首先需要了解subSocks的代码结构，Luyu Huang的[文档](https://luyuhuang.tech/2020/12/02/subsocks.html)中描述的非常详细，我只需要实现SSHWarpper和SSHStripper。\n\ngolang已经提供了SSH的官方实现，参考[文档](https://pkg.go.dev/golang.org/x/crypto/ssh)。并且提供了使用SSH进行远程Shell的示例。\n\n之后需要对SSH的[通讯过程](/2023/11/20/SSH.html)，```Session``` ```Channel``` ```Request```等等各种概念有基础的了解。\n\n使用ssh包中的代码，在服务端使用TCP链接，创建SSH服务器，等待客户端链接后获取Channel，将Channel包装为Stripper。\n\n客户端与服务端相似，需要使用TCP链接，向服务端完成握手过程，之后可获得Session，将Session包装成Wrapper。\n\n# 使用\n\n服务端必须配置密钥，可使用自己生成的密钥：\n\n```toml toml\n[server] # server configuration\n\nprotocol = \"ssh\"\nlisten = \"0.0.0.0:22\"\n\nssh.cert = \"./id_rsa.pub\"\nssh.key = \"./id_rsa\"\n```\n\n客户端只需将协议设置为ssh，其他与subsocks相同:\n\n```toml toml\n[client] # client configuration\n\nlisten = \"127.0.0.1:1080\"\n\nserver.protocol = \"ssh\"\nserver.address = \"serverIP:22\"\n```\n\n通过抓包验证，握手过程正常，通讯过程与SSH相同，多条链接使用正常，所有数据均经过加密：\n\n![](wireshark.png)\n\n通过观看视频网站验证，视频加载流畅，体验很好。","slug":"SSHInSubSocks","published":1,"updated":"2023-12-07T07:44:08.102Z","_id":"clpb486650002jwti6b8n35pi","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"subSocks简介\"><a href=\"#subSocks简介\" class=\"headerlink\" title=\"subSocks简介\"></a>subSocks简介</h1><p><a href=\"https://github.com/luyuhuang/subsocks\">subSocks</a>是<a href=\"https://luyuhuang.tech/\">Luyu Huang</a>制作的纯golang网络代理软件。</p>\n<p>这里是作者本人对此项目的介绍<a href=\"https://luyuhuang.tech/2020/12/02/subsocks.html\">文档</a>。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"为什么要做SSH包装\"><a href=\"#为什么要做SSH包装\" class=\"headerlink\" title=\"为什么要做SSH包装\"></a>为什么要做SSH包装</h1><p>因为之前使用v2ray总是被封端口，但是VPS上的22端口始终建在，考虑到SSH协议比较复杂，包括了Shell，SFTP等多种应用。我认为使用SSH协议包装流量可以起到一定的伪装作用，减少端口被封的可能性。</p>\n<p>subSocks项目的代码结构非常漂亮，添加SSH包装非常便捷。</p>\n<h1 id=\"实现过程\"><a href=\"#实现过程\" class=\"headerlink\" title=\"实现过程\"></a>实现过程</h1><p>首先需要了解subSocks的代码结构，Luyu Huang的<a href=\"https://luyuhuang.tech/2020/12/02/subsocks.html\">文档</a>中描述的非常详细，我只需要实现SSHWarpper和SSHStripper。</p>\n<p>golang已经提供了SSH的官方实现，参考<a href=\"https://pkg.go.dev/golang.org/x/crypto/ssh\">文档</a>。并且提供了使用SSH进行远程Shell的示例。</p>\n<p>之后需要对SSH的<a href=\"/2023/11/20/SSH.html\">通讯过程</a>，<code>Session</code> <code>Channel</code> <code>Request</code>等等各种概念有基础的了解。</p>\n<p>使用ssh包中的代码，在服务端使用TCP链接，创建SSH服务器，等待客户端链接后获取Channel，将Channel包装为Stripper。</p>\n<p>客户端与服务端相似，需要使用TCP链接，向服务端完成握手过程，之后可获得Session，将Session包装成Wrapper。</p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>服务端必须配置密钥，可使用自己生成的密钥：</p>\n<figure class=\"highlight toml\"><figcaption><span>toml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs toml\"><span class=\"hljs-section\">[server]</span> <span class=\"hljs-comment\"># server configuration</span><br><br><span class=\"hljs-attr\">protocol</span> = <span class=\"hljs-string\">&quot;ssh&quot;</span><br><span class=\"hljs-attr\">listen</span> = <span class=\"hljs-string\">&quot;0.0.0.0:22&quot;</span><br><br><span class=\"hljs-attr\">ssh.cert</span> = <span class=\"hljs-string\">&quot;./id_rsa.pub&quot;</span><br><span class=\"hljs-attr\">ssh.key</span> = <span class=\"hljs-string\">&quot;./id_rsa&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>客户端只需将协议设置为ssh，其他与subsocks相同:</p>\n<figure class=\"highlight toml\"><figcaption><span>toml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs toml\"><span class=\"hljs-section\">[client]</span> <span class=\"hljs-comment\"># client configuration</span><br><br><span class=\"hljs-attr\">listen</span> = <span class=\"hljs-string\">&quot;127.0.0.1:1080&quot;</span><br><br><span class=\"hljs-attr\">server.protocol</span> = <span class=\"hljs-string\">&quot;ssh&quot;</span><br><span class=\"hljs-attr\">server.address</span> = <span class=\"hljs-string\">&quot;serverIP:22&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>通过抓包验证，握手过程正常，通讯过程与SSH相同，多条链接使用正常，所有数据均经过加密：</p>\n<p><img src=\"/2023/11/22/SSHInSubSocks/wireshark.png\"></p>\n<p>通过观看视频网站验证，视频加载流畅，体验很好。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"subSocks简介\"><a href=\"#subSocks简介\" class=\"headerlink\" title=\"subSocks简介\"></a>subSocks简介</h1><p><a href=\"https://github.com/luyuhuang/subsocks\">subSocks</a>是<a href=\"https://luyuhuang.tech/\">Luyu Huang</a>制作的纯golang网络代理软件。</p>\n<p>这里是作者本人对此项目的介绍<a href=\"https://luyuhuang.tech/2020/12/02/subsocks.html\">文档</a>。</p>","more":"<h1 id=\"为什么要做SSH包装\"><a href=\"#为什么要做SSH包装\" class=\"headerlink\" title=\"为什么要做SSH包装\"></a>为什么要做SSH包装</h1><p>因为之前使用v2ray总是被封端口，但是VPS上的22端口始终建在，考虑到SSH协议比较复杂，包括了Shell，SFTP等多种应用。我认为使用SSH协议包装流量可以起到一定的伪装作用，减少端口被封的可能性。</p>\n<p>subSocks项目的代码结构非常漂亮，添加SSH包装非常便捷。</p>\n<h1 id=\"实现过程\"><a href=\"#实现过程\" class=\"headerlink\" title=\"实现过程\"></a>实现过程</h1><p>首先需要了解subSocks的代码结构，Luyu Huang的<a href=\"https://luyuhuang.tech/2020/12/02/subsocks.html\">文档</a>中描述的非常详细，我只需要实现SSHWarpper和SSHStripper。</p>\n<p>golang已经提供了SSH的官方实现，参考<a href=\"https://pkg.go.dev/golang.org/x/crypto/ssh\">文档</a>。并且提供了使用SSH进行远程Shell的示例。</p>\n<p>之后需要对SSH的<a href=\"/2023/11/20/SSH.html\">通讯过程</a>，<code>Session</code> <code>Channel</code> <code>Request</code>等等各种概念有基础的了解。</p>\n<p>使用ssh包中的代码，在服务端使用TCP链接，创建SSH服务器，等待客户端链接后获取Channel，将Channel包装为Stripper。</p>\n<p>客户端与服务端相似，需要使用TCP链接，向服务端完成握手过程，之后可获得Session，将Session包装成Wrapper。</p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>服务端必须配置密钥，可使用自己生成的密钥：</p>\n<figure class=\"highlight toml\"><figcaption><span>toml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs toml\"><span class=\"hljs-section\">[server]</span> <span class=\"hljs-comment\"># server configuration</span><br><br><span class=\"hljs-attr\">protocol</span> = <span class=\"hljs-string\">&quot;ssh&quot;</span><br><span class=\"hljs-attr\">listen</span> = <span class=\"hljs-string\">&quot;0.0.0.0:22&quot;</span><br><br><span class=\"hljs-attr\">ssh.cert</span> = <span class=\"hljs-string\">&quot;./id_rsa.pub&quot;</span><br><span class=\"hljs-attr\">ssh.key</span> = <span class=\"hljs-string\">&quot;./id_rsa&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>客户端只需将协议设置为ssh，其他与subsocks相同:</p>\n<figure class=\"highlight toml\"><figcaption><span>toml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs toml\"><span class=\"hljs-section\">[client]</span> <span class=\"hljs-comment\"># client configuration</span><br><br><span class=\"hljs-attr\">listen</span> = <span class=\"hljs-string\">&quot;127.0.0.1:1080&quot;</span><br><br><span class=\"hljs-attr\">server.protocol</span> = <span class=\"hljs-string\">&quot;ssh&quot;</span><br><span class=\"hljs-attr\">server.address</span> = <span class=\"hljs-string\">&quot;serverIP:22&quot;</span><br></code></pre></td></tr></table></figure>\n\n<p>通过抓包验证，握手过程正常，通讯过程与SSH相同，多条链接使用正常，所有数据均经过加密：</p>\n<p><img src=\"/2023/11/22/SSHInSubSocks/wireshark.png\"></p>\n<p>通过观看视频网站验证，视频加载流畅，体验很好。</p>"},{"title":"在Windows中使用Linux——WSL","date":"2023-11-17T08:36:34.000Z","_content":"\nhttps://learn.microsoft.com/zh-cn/windows/wsl/\n\n<!--more-->","source":"_posts/WSL.md","raw":"---\ntitle: 在Windows中使用Linux——WSL\ndate: 2023-11-17 16:36:34\ncategories:\n- 豆知识\ntags:\n- 豆知识\n- 环境配置\n- Linux\n---\n\nhttps://learn.microsoft.com/zh-cn/windows/wsl/\n\n<!--more-->","slug":"WSL","published":1,"updated":"2023-11-29T07:42:17.638Z","_id":"clpb486680005jwti3geu5uri","comments":1,"layout":"post","photos":[],"link":"","content":"<p><a href=\"https://learn.microsoft.com/zh-cn/windows/wsl/\">https://learn.microsoft.com/zh-cn/windows/wsl/</a></p>\n<span id=\"more\"></span>","site":{"data":{}},"excerpt":"<p><a href=\"https://learn.microsoft.com/zh-cn/windows/wsl/\">https://learn.microsoft.com/zh-cn/windows/wsl/</a></p>","more":""},{"title":"golang与串口设备在项目中的运用","date":"2023-11-22T03:06:28.000Z","_content":"\n# 需求简述\n\n硬件设备使用485Modbus通讯，需使用golang编写采集程序，将数据采集至平台。\n\n<!--more-->\n\n# 方案简述\n\n使用串口服务器将485Modbus通讯转为TCPModbus，并将串口服务器设置为TCPserver。\n\n使用golang编写采集器，定期向串口服务器建立TCP链接，采集数据。\n\n# 技术点与实现\n\n## 点表\n\n通过```struct```实现点位表\n\n这里使用Raw表示原始点表数据，和通讯协议一一对应\n\n后续可将Raw结构封装至更高层的业务结构，用来实现业务数据的表示、嵌套能其他功能\n\n```go go\ntype StructMcuRaw struct {\n\tVer               [4]uint8 `json:\"ver\"`                                                                               // 软件版本[4]char\n\tId                uint16   `json:\"id\"`                                                                                // 通信箱id\n\tTargetAngle       uint16   `json:\"targetAngle\" IEC104:\"yc\" IEC104Name:\"子阵目标角度\" IEC104Unit:\"°\" IEC104Factor:\"0.1\"` // 对整个子阵设置目标角度\n\tInitSnowDepth     uint16   `json:\"initSnowDepth\" IEC104:\"yx\" IEC104Name:\"标定初始雪深标志\"`                              // 标定初始雪深标志\n\tPrecipitationType uint16   `json:\"precipitationType\"`                                                                 // 降水类型\n}\n```\n\n## 读取二进制数据\n\n通过```binary```包，可以实现从buffer中读取数据向```struct```赋值\n\n```go go\nfunc (p *StructMcuRaw) MCUFromByte(res *bytes.Buffer) {\n\t// 软件版本[4]char\n\tfor x := 0; x < 4; x++ {\n\t\tbinary.Read(res, binary.BigEndian, p.Ver[x])\n\t}\n\t// 通信箱id\n\tbinary.Read(res, binary.BigEndian, &p.Id)\n\t// 对整个子阵设置目标角度\n\tbinary.Read(res, binary.BigEndian, &p.TargetAngle)\n\t// 标定初始雪深标志\n\tbinary.Read(res, binary.BigEndian, &p.InitSnowDepth)\n\t// 降水类型\n\tbinary.Read(res, binary.BigEndian, &p.PrecipitationType)\n}\n```\n\n## 封装为query\n\n在本项目中，query指对单个设备的采集方法\n\n将数据读取封装成query方法，包括TCP采集过程、日志记录、包格式处理等\n\n```go go\nfunc MCUQuery(conn *net.Conn, reader *bufio.Reader, buffer *[]byte, cb *rs.StructCommBox, mcu *rs.StructMcu) error {\n\t// 查询地址\n\taddInt, err := strconv.Atoi(mcu.Addr)\n\tif err != nil {\n\t\treturn err\n\t}\n\t// 包编号\n\ttcpSeq := TcpSeq()\n\tvar query = []byte{\n\t\tuint8(tcpSeq / 0x100), uint8(tcpSeq % 0x100), // 编号\n\t\t0x00, 0x00, 0x00, 0x06, // 长度\n\t\tbyte(addInt), 0x03, 0x00, 0xa0, 0x00, 0x29} // 指令\n\t(*conn).SetWriteDeadline(time.Now().Add(rs.QUERY_DEFAULT_TIMEOUT))\n\t_, err = (*conn).Write(query)\n\tif err != nil {\n\t\tlog.Log(true, cb.IpAddr, cb.Port, []byte{})\n\t\treturn err\n\t}\n\t// 日志\n\tlog.Log(true, cb.IpAddr, cb.Port, query)\n\t// 接收\n\t(*conn).SetReadDeadline(time.Now().Add(rs.QUERY_DEFAULT_TIMEOUT))\n\tn, err := (*reader).Read(*buffer)\n\tif err != nil {\n\t\tlog.Log(false, cb.IpAddr, cb.Port, []byte{})\n\t\treturn err\n\t}\n\t// 日志\n\tlog.Log(false, cb.IpAddr, cb.Port, (*buffer)[:n])\n\t// 解析\n\tres := bytes.NewBuffer(*buffer)\n\t// TCP头\n\tvar tcpHeader rs.StructTCPHeader\n\ttcpHeader.TCPHeaderFromByte(res)\n\tif tcpHeader.Seq != tcpSeq {\n\t\treturn errors.New(\"TCP异常\")\n\t}\n\tif tcpHeader.Len != 85 {\n\t\treturn errors.New(\"TCP长度异常\")\n\t}\n\t// modbus头\n\tvar mbHeader rs.StructMudbusHeader\n\tmbHeader.MudbusHeaderFromByte(res)\n\t// mcu内容\n\tmcu.Raw.MCUFromByte(res)\n\tmcu.VUpdate = true // 标记更新\n\treturn nil\n}\n```\n\n## 封装为采集过程\n\n最后需要将所有的采集query放置在统一的采集过程中\n\n在一次采集过程中，创建一条TCP链接，完成所有采集动作，最后断开链接\n\n```go go\nfunc Collect(cb *rs.StructCommBox) {\n\t// 记录网络占用\n\tNetCh <- true\n\tdefer func() {\n\t\t<-NetCh\n\t}()\n\t// 初始化采集标识\n\teraseFlag(cb)\n\t// 采集结束后更新时标\n\tdefer func() {\n\t\tupdateTs(cb)\n\t}()\n\t// 建链\n\tconn, err := net.DialTimeout(\"tcp\", cb.IpAddr+\":\"+cb.Port, rs.QUERY_DEFAULT_TIMEOUT)\n\tif err != nil {\n\t\tlog.Log(true, cb.IpAddr, cb.Port, []byte{})\n\t\treturn\n\t}\n\tcb.VUpdate = true\n\tdefer conn.Close()\n\t// 读写缓存\n\treadBuf := bufio.NewReader(conn)\n\tbuffer := make([]byte, 256)\n\t// 按mcu查询\n\tfor x := 0; x < len(cb.Mcus); x++ {\n\t\t// 切换MCU预留时间, 提高成功率\n\t\ttime.Sleep(rs.QUERY_MCU_INTERVAL)\n\t\t// 查mcu信息\n\t\tmcu := cb.Mcus[x]\n\t\terr = cmd.MCUQuery(&conn, readBuf, &buffer, cb, mcu)\n\t\tif err != nil {\n\t\t\treturn\n\t\t}\n\t\t// 分次查跟踪器信息\n\t\tfor y := 0; y < mcu.TracerNum; {\n\t\t\t// 切换Tracer预留时间, 提高成功率\n\t\t\ttime.Sleep(rs.QUERY_TRACER_INTERVAL)\n\t\t\t// 查询长度\n\t\t\ttracerLen := rs.QUERY_TRACER_COUNT\n\t\t\tif mcu.TracerNum-y < rs.QUERY_TRACER_COUNT {\n\t\t\t\ttracerLen = mcu.TracerNum - y\n\t\t\t}\n\t\t\terr = cmd.TracerQuery(&conn, readBuf, &buffer, cb, mcu, y, tracerLen)\n\t\t\tif err != nil {\n\t\t\t\treturn\n\t\t\t}\n\t\t\ty += tracerLen\n\t\t}\n\t}\n}\n```\n\n# 总结\n\n使用golang+串口服务器进行串口通讯，非常的简单、直观，易于开发维护。\n\n在本次项目实践中，由于golang提供了方便的并发编程与控制机制，高负载环境下的性能也得到了充分保障。","source":"_posts/golangSerial.md","raw":"---\ntitle: golang与串口设备在项目中的运用\ndate: 2023-11-22 11:06:28\ncategories:\n- 项目实践\ntags:\n- 项目实践\n- 网络编程\n- golang\n- 串口通讯\n---\n\n# 需求简述\n\n硬件设备使用485Modbus通讯，需使用golang编写采集程序，将数据采集至平台。\n\n<!--more-->\n\n# 方案简述\n\n使用串口服务器将485Modbus通讯转为TCPModbus，并将串口服务器设置为TCPserver。\n\n使用golang编写采集器，定期向串口服务器建立TCP链接，采集数据。\n\n# 技术点与实现\n\n## 点表\n\n通过```struct```实现点位表\n\n这里使用Raw表示原始点表数据，和通讯协议一一对应\n\n后续可将Raw结构封装至更高层的业务结构，用来实现业务数据的表示、嵌套能其他功能\n\n```go go\ntype StructMcuRaw struct {\n\tVer               [4]uint8 `json:\"ver\"`                                                                               // 软件版本[4]char\n\tId                uint16   `json:\"id\"`                                                                                // 通信箱id\n\tTargetAngle       uint16   `json:\"targetAngle\" IEC104:\"yc\" IEC104Name:\"子阵目标角度\" IEC104Unit:\"°\" IEC104Factor:\"0.1\"` // 对整个子阵设置目标角度\n\tInitSnowDepth     uint16   `json:\"initSnowDepth\" IEC104:\"yx\" IEC104Name:\"标定初始雪深标志\"`                              // 标定初始雪深标志\n\tPrecipitationType uint16   `json:\"precipitationType\"`                                                                 // 降水类型\n}\n```\n\n## 读取二进制数据\n\n通过```binary```包，可以实现从buffer中读取数据向```struct```赋值\n\n```go go\nfunc (p *StructMcuRaw) MCUFromByte(res *bytes.Buffer) {\n\t// 软件版本[4]char\n\tfor x := 0; x < 4; x++ {\n\t\tbinary.Read(res, binary.BigEndian, p.Ver[x])\n\t}\n\t// 通信箱id\n\tbinary.Read(res, binary.BigEndian, &p.Id)\n\t// 对整个子阵设置目标角度\n\tbinary.Read(res, binary.BigEndian, &p.TargetAngle)\n\t// 标定初始雪深标志\n\tbinary.Read(res, binary.BigEndian, &p.InitSnowDepth)\n\t// 降水类型\n\tbinary.Read(res, binary.BigEndian, &p.PrecipitationType)\n}\n```\n\n## 封装为query\n\n在本项目中，query指对单个设备的采集方法\n\n将数据读取封装成query方法，包括TCP采集过程、日志记录、包格式处理等\n\n```go go\nfunc MCUQuery(conn *net.Conn, reader *bufio.Reader, buffer *[]byte, cb *rs.StructCommBox, mcu *rs.StructMcu) error {\n\t// 查询地址\n\taddInt, err := strconv.Atoi(mcu.Addr)\n\tif err != nil {\n\t\treturn err\n\t}\n\t// 包编号\n\ttcpSeq := TcpSeq()\n\tvar query = []byte{\n\t\tuint8(tcpSeq / 0x100), uint8(tcpSeq % 0x100), // 编号\n\t\t0x00, 0x00, 0x00, 0x06, // 长度\n\t\tbyte(addInt), 0x03, 0x00, 0xa0, 0x00, 0x29} // 指令\n\t(*conn).SetWriteDeadline(time.Now().Add(rs.QUERY_DEFAULT_TIMEOUT))\n\t_, err = (*conn).Write(query)\n\tif err != nil {\n\t\tlog.Log(true, cb.IpAddr, cb.Port, []byte{})\n\t\treturn err\n\t}\n\t// 日志\n\tlog.Log(true, cb.IpAddr, cb.Port, query)\n\t// 接收\n\t(*conn).SetReadDeadline(time.Now().Add(rs.QUERY_DEFAULT_TIMEOUT))\n\tn, err := (*reader).Read(*buffer)\n\tif err != nil {\n\t\tlog.Log(false, cb.IpAddr, cb.Port, []byte{})\n\t\treturn err\n\t}\n\t// 日志\n\tlog.Log(false, cb.IpAddr, cb.Port, (*buffer)[:n])\n\t// 解析\n\tres := bytes.NewBuffer(*buffer)\n\t// TCP头\n\tvar tcpHeader rs.StructTCPHeader\n\ttcpHeader.TCPHeaderFromByte(res)\n\tif tcpHeader.Seq != tcpSeq {\n\t\treturn errors.New(\"TCP异常\")\n\t}\n\tif tcpHeader.Len != 85 {\n\t\treturn errors.New(\"TCP长度异常\")\n\t}\n\t// modbus头\n\tvar mbHeader rs.StructMudbusHeader\n\tmbHeader.MudbusHeaderFromByte(res)\n\t// mcu内容\n\tmcu.Raw.MCUFromByte(res)\n\tmcu.VUpdate = true // 标记更新\n\treturn nil\n}\n```\n\n## 封装为采集过程\n\n最后需要将所有的采集query放置在统一的采集过程中\n\n在一次采集过程中，创建一条TCP链接，完成所有采集动作，最后断开链接\n\n```go go\nfunc Collect(cb *rs.StructCommBox) {\n\t// 记录网络占用\n\tNetCh <- true\n\tdefer func() {\n\t\t<-NetCh\n\t}()\n\t// 初始化采集标识\n\teraseFlag(cb)\n\t// 采集结束后更新时标\n\tdefer func() {\n\t\tupdateTs(cb)\n\t}()\n\t// 建链\n\tconn, err := net.DialTimeout(\"tcp\", cb.IpAddr+\":\"+cb.Port, rs.QUERY_DEFAULT_TIMEOUT)\n\tif err != nil {\n\t\tlog.Log(true, cb.IpAddr, cb.Port, []byte{})\n\t\treturn\n\t}\n\tcb.VUpdate = true\n\tdefer conn.Close()\n\t// 读写缓存\n\treadBuf := bufio.NewReader(conn)\n\tbuffer := make([]byte, 256)\n\t// 按mcu查询\n\tfor x := 0; x < len(cb.Mcus); x++ {\n\t\t// 切换MCU预留时间, 提高成功率\n\t\ttime.Sleep(rs.QUERY_MCU_INTERVAL)\n\t\t// 查mcu信息\n\t\tmcu := cb.Mcus[x]\n\t\terr = cmd.MCUQuery(&conn, readBuf, &buffer, cb, mcu)\n\t\tif err != nil {\n\t\t\treturn\n\t\t}\n\t\t// 分次查跟踪器信息\n\t\tfor y := 0; y < mcu.TracerNum; {\n\t\t\t// 切换Tracer预留时间, 提高成功率\n\t\t\ttime.Sleep(rs.QUERY_TRACER_INTERVAL)\n\t\t\t// 查询长度\n\t\t\ttracerLen := rs.QUERY_TRACER_COUNT\n\t\t\tif mcu.TracerNum-y < rs.QUERY_TRACER_COUNT {\n\t\t\t\ttracerLen = mcu.TracerNum - y\n\t\t\t}\n\t\t\terr = cmd.TracerQuery(&conn, readBuf, &buffer, cb, mcu, y, tracerLen)\n\t\t\tif err != nil {\n\t\t\t\treturn\n\t\t\t}\n\t\t\ty += tracerLen\n\t\t}\n\t}\n}\n```\n\n# 总结\n\n使用golang+串口服务器进行串口通讯，非常的简单、直观，易于开发维护。\n\n在本次项目实践中，由于golang提供了方便的并发编程与控制机制，高负载环境下的性能也得到了充分保障。","slug":"golangSerial","published":1,"updated":"2023-12-07T07:51:13.014Z","_id":"clpb486690006jwtifqfn06fb","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"需求简述\"><a href=\"#需求简述\" class=\"headerlink\" title=\"需求简述\"></a>需求简述</h1><p>硬件设备使用485Modbus通讯，需使用golang编写采集程序，将数据采集至平台。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"方案简述\"><a href=\"#方案简述\" class=\"headerlink\" title=\"方案简述\"></a>方案简述</h1><p>使用串口服务器将485Modbus通讯转为TCPModbus，并将串口服务器设置为TCPserver。</p>\n<p>使用golang编写采集器，定期向串口服务器建立TCP链接，采集数据。</p>\n<h1 id=\"技术点与实现\"><a href=\"#技术点与实现\" class=\"headerlink\" title=\"技术点与实现\"></a>技术点与实现</h1><h2 id=\"点表\"><a href=\"#点表\" class=\"headerlink\" title=\"点表\"></a>点表</h2><p>通过<code>struct</code>实现点位表</p>\n<p>这里使用Raw表示原始点表数据，和通讯协议一一对应</p>\n<p>后续可将Raw结构封装至更高层的业务结构，用来实现业务数据的表示、嵌套能其他功能</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-go\" data-language=\"go\"><div class=\"caption\"><span>go</span></div><code class=\"language-go\"><span class=\"token keyword\">type</span> StructMcuRaw <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span>\n\tVer               <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">uint8</span> <span class=\"token string\">`json:\"ver\"`</span>                                                                               <span class=\"token comment\">// 软件版本[4]char</span>\n\tId                <span class=\"token builtin\">uint16</span>   <span class=\"token string\">`json:\"id\"`</span>                                                                                <span class=\"token comment\">// 通信箱id</span>\n\tTargetAngle       <span class=\"token builtin\">uint16</span>   <span class=\"token string\">`json:\"targetAngle\" IEC104:\"yc\" IEC104Name:\"子阵目标角度\" IEC104Unit:\"°\" IEC104Factor:\"0.1\"`</span> <span class=\"token comment\">// 对整个子阵设置目标角度</span>\n\tInitSnowDepth     <span class=\"token builtin\">uint16</span>   <span class=\"token string\">`json:\"initSnowDepth\" IEC104:\"yx\" IEC104Name:\"标定初始雪深标志\"`</span>                              <span class=\"token comment\">// 标定初始雪深标志</span>\n\tPrecipitationType <span class=\"token builtin\">uint16</span>   <span class=\"token string\">`json:\"precipitationType\"`</span>                                                                 <span class=\"token comment\">// 降水类型</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h2 id=\"读取二进制数据\"><a href=\"#读取二进制数据\" class=\"headerlink\" title=\"读取二进制数据\"></a>读取二进制数据</h2><p>通过<code>binary</code>包，可以实现从buffer中读取数据向<code>struct</code>赋值</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-go\" data-language=\"go\"><div class=\"caption\"><span>go</span></div><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">*</span>StructMcuRaw<span class=\"token punctuation\">)</span> <span class=\"token function\">MCUFromByte</span><span class=\"token punctuation\">(</span>res <span class=\"token operator\">*</span>bytes<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">// 软件版本[4]char</span>\n\t<span class=\"token keyword\">for</span> x <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span>\n\t\tbinary<span class=\"token punctuation\">.</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span> binary<span class=\"token punctuation\">.</span>BigEndian<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>Ver<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token comment\">// 通信箱id</span>\n\tbinary<span class=\"token punctuation\">.</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span> binary<span class=\"token punctuation\">.</span>BigEndian<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>p<span class=\"token punctuation\">.</span>Id<span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// 对整个子阵设置目标角度</span>\n\tbinary<span class=\"token punctuation\">.</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span> binary<span class=\"token punctuation\">.</span>BigEndian<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>p<span class=\"token punctuation\">.</span>TargetAngle<span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// 标定初始雪深标志</span>\n\tbinary<span class=\"token punctuation\">.</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span> binary<span class=\"token punctuation\">.</span>BigEndian<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>p<span class=\"token punctuation\">.</span>InitSnowDepth<span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// 降水类型</span>\n\tbinary<span class=\"token punctuation\">.</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span> binary<span class=\"token punctuation\">.</span>BigEndian<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>p<span class=\"token punctuation\">.</span>PrecipitationType<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h2 id=\"封装为query\"><a href=\"#封装为query\" class=\"headerlink\" title=\"封装为query\"></a>封装为query</h2><p>在本项目中，query指对单个设备的采集方法</p>\n<p>将数据读取封装成query方法，包括TCP采集过程、日志记录、包格式处理等</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-go\" data-language=\"go\"><div class=\"caption\"><span>go</span></div><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">MCUQuery</span><span class=\"token punctuation\">(</span>conn <span class=\"token operator\">*</span>net<span class=\"token punctuation\">.</span>Conn<span class=\"token punctuation\">,</span> reader <span class=\"token operator\">*</span>bufio<span class=\"token punctuation\">.</span>Reader<span class=\"token punctuation\">,</span> buffer <span class=\"token operator\">*</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">,</span> cb <span class=\"token operator\">*</span>rs<span class=\"token punctuation\">.</span>StructCommBox<span class=\"token punctuation\">,</span> mcu <span class=\"token operator\">*</span>rs<span class=\"token punctuation\">.</span>StructMcu<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">// 查询地址</span>\n\taddInt<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">Atoi</span><span class=\"token punctuation\">(</span>mcu<span class=\"token punctuation\">.</span>Addr<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">return</span> err\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token comment\">// 包编号</span>\n\ttcpSeq <span class=\"token operator\">:=</span> <span class=\"token function\">TcpSeq</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">var</span> query <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">uint8</span><span class=\"token punctuation\">(</span>tcpSeq <span class=\"token operator\">/</span> <span class=\"token number\">0x100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">uint8</span><span class=\"token punctuation\">(</span>tcpSeq <span class=\"token operator\">%</span> <span class=\"token number\">0x100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 编号</span>\n\t\t<span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x06</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 长度</span>\n\t\t<span class=\"token function\">byte</span><span class=\"token punctuation\">(</span>addInt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x29</span><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">// 指令</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetWriteDeadline</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span><span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span>QUERY_DEFAULT_TIMEOUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">.</span>IpAddr<span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">.</span>Port<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span> err\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token comment\">// 日志</span>\n\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">.</span>IpAddr<span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">.</span>Port<span class=\"token punctuation\">,</span> query<span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// 接收</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetReadDeadline</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span><span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span>QUERY_DEFAULT_TIMEOUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tn<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>reader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>buffer<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">.</span>IpAddr<span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">.</span>Port<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span> err\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token comment\">// 日志</span>\n\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">.</span>IpAddr<span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">.</span>Port<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// 解析</span>\n\tres <span class=\"token operator\">:=</span> bytes<span class=\"token punctuation\">.</span><span class=\"token function\">NewBuffer</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>buffer<span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// TCP头</span>\n\t<span class=\"token keyword\">var</span> tcpHeader rs<span class=\"token punctuation\">.</span>StructTCPHeader\n\ttcpHeader<span class=\"token punctuation\">.</span><span class=\"token function\">TCPHeaderFromByte</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> tcpHeader<span class=\"token punctuation\">.</span>Seq <span class=\"token operator\">!=</span> tcpSeq <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">return</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TCP异常\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">if</span> tcpHeader<span class=\"token punctuation\">.</span>Len <span class=\"token operator\">!=</span> <span class=\"token number\">85</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">return</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TCP长度异常\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token comment\">// modbus头</span>\n\t<span class=\"token keyword\">var</span> mbHeader rs<span class=\"token punctuation\">.</span>StructMudbusHeader\n\tmbHeader<span class=\"token punctuation\">.</span><span class=\"token function\">MudbusHeaderFromByte</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// mcu内容</span>\n\tmcu<span class=\"token punctuation\">.</span>Raw<span class=\"token punctuation\">.</span><span class=\"token function\">MCUFromByte</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n\tmcu<span class=\"token punctuation\">.</span>VUpdate <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token comment\">// 标记更新</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h2 id=\"封装为采集过程\"><a href=\"#封装为采集过程\" class=\"headerlink\" title=\"封装为采集过程\"></a>封装为采集过程</h2><p>最后需要将所有的采集query放置在统一的采集过程中</p>\n<p>在一次采集过程中，创建一条TCP链接，完成所有采集动作，最后断开链接</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-go\" data-language=\"go\"><div class=\"caption\"><span>go</span></div><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">Collect</span><span class=\"token punctuation\">(</span>cb <span class=\"token operator\">*</span>rs<span class=\"token punctuation\">.</span>StructCommBox<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">// 记录网络占用</span>\n\tNetCh <span class=\"token operator\">&lt;-</span> <span class=\"token boolean\">true</span>\n\t<span class=\"token keyword\">defer</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token operator\">&lt;-</span>NetCh\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// 初始化采集标识</span>\n\t<span class=\"token function\">eraseFlag</span><span class=\"token punctuation\">(</span>cb<span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// 采集结束后更新时标</span>\n\t<span class=\"token keyword\">defer</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">updateTs</span><span class=\"token punctuation\">(</span>cb<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// 建链</span>\n\tconn<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> net<span class=\"token punctuation\">.</span><span class=\"token function\">DialTimeout</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tcp\"</span><span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">.</span>IpAddr<span class=\"token operator\">+</span><span class=\"token string\">\":\"</span><span class=\"token operator\">+</span>cb<span class=\"token punctuation\">.</span>Port<span class=\"token punctuation\">,</span> rs<span class=\"token punctuation\">.</span>QUERY_DEFAULT_TIMEOUT<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">.</span>IpAddr<span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">.</span>Port<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tcb<span class=\"token punctuation\">.</span>VUpdate <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n\t<span class=\"token keyword\">defer</span> conn<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// 读写缓存</span>\n\treadBuf <span class=\"token operator\">:=</span> bufio<span class=\"token punctuation\">.</span><span class=\"token function\">NewReader</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span>\n\tbuffer <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// 按mcu查询</span>\n\t<span class=\"token keyword\">for</span> x <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>cb<span class=\"token punctuation\">.</span>Mcus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">// 切换MCU预留时间, 提高成功率</span>\n\t\ttime<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span>QUERY_MCU_INTERVAL<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token comment\">// 查mcu信息</span>\n\t\tmcu <span class=\"token operator\">:=</span> cb<span class=\"token punctuation\">.</span>Mcus<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span>\n\t\terr <span class=\"token operator\">=</span> cmd<span class=\"token punctuation\">.</span><span class=\"token function\">MCUQuery</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>conn<span class=\"token punctuation\">,</span> readBuf<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>buffer<span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">,</span> mcu<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">return</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token comment\">// 分次查跟踪器信息</span>\n\t\t<span class=\"token keyword\">for</span> y <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;</span> mcu<span class=\"token punctuation\">.</span>TracerNum<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token comment\">// 切换Tracer预留时间, 提高成功率</span>\n\t\t\ttime<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span>QUERY_TRACER_INTERVAL<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token comment\">// 查询长度</span>\n\t\t\ttracerLen <span class=\"token operator\">:=</span> rs<span class=\"token punctuation\">.</span>QUERY_TRACER_COUNT\n\t\t\t<span class=\"token keyword\">if</span> mcu<span class=\"token punctuation\">.</span>TracerNum<span class=\"token operator\">-</span>y <span class=\"token operator\">&lt;</span> rs<span class=\"token punctuation\">.</span>QUERY_TRACER_COUNT <span class=\"token punctuation\">&#123;</span>\n\t\t\t\ttracerLen <span class=\"token operator\">=</span> mcu<span class=\"token punctuation\">.</span>TracerNum <span class=\"token operator\">-</span> y\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\terr <span class=\"token operator\">=</span> cmd<span class=\"token punctuation\">.</span><span class=\"token function\">TracerQuery</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>conn<span class=\"token punctuation\">,</span> readBuf<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>buffer<span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">,</span> mcu<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> tracerLen<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">return</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\ty <span class=\"token operator\">+=</span> tracerLen\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>使用golang+串口服务器进行串口通讯，非常的简单、直观，易于开发维护。</p>\n<p>在本次项目实践中，由于golang提供了方便的并发编程与控制机制，高负载环境下的性能也得到了充分保障。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"需求简述\"><a href=\"#需求简述\" class=\"headerlink\" title=\"需求简述\"></a>需求简述</h1><p>硬件设备使用485Modbus通讯，需使用golang编写采集程序，将数据采集至平台。</p>","more":"<h1 id=\"方案简述\"><a href=\"#方案简述\" class=\"headerlink\" title=\"方案简述\"></a>方案简述</h1><p>使用串口服务器将485Modbus通讯转为TCPModbus，并将串口服务器设置为TCPserver。</p>\n<p>使用golang编写采集器，定期向串口服务器建立TCP链接，采集数据。</p>\n<h1 id=\"技术点与实现\"><a href=\"#技术点与实现\" class=\"headerlink\" title=\"技术点与实现\"></a>技术点与实现</h1><h2 id=\"点表\"><a href=\"#点表\" class=\"headerlink\" title=\"点表\"></a>点表</h2><p>通过<code>struct</code>实现点位表</p>\n<p>这里使用Raw表示原始点表数据，和通讯协议一一对应</p>\n<p>后续可将Raw结构封装至更高层的业务结构，用来实现业务数据的表示、嵌套能其他功能</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><div class=\"caption\"><span>go</span></div><code class=\"language-go\"><span class=\"token keyword\">type</span> StructMcuRaw <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">&#123;</span>\n\tVer               <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">uint8</span> <span class=\"token string\">`json:\"ver\"`</span>                                                                               <span class=\"token comment\">// 软件版本[4]char</span>\n\tId                <span class=\"token builtin\">uint16</span>   <span class=\"token string\">`json:\"id\"`</span>                                                                                <span class=\"token comment\">// 通信箱id</span>\n\tTargetAngle       <span class=\"token builtin\">uint16</span>   <span class=\"token string\">`json:\"targetAngle\" IEC104:\"yc\" IEC104Name:\"子阵目标角度\" IEC104Unit:\"°\" IEC104Factor:\"0.1\"`</span> <span class=\"token comment\">// 对整个子阵设置目标角度</span>\n\tInitSnowDepth     <span class=\"token builtin\">uint16</span>   <span class=\"token string\">`json:\"initSnowDepth\" IEC104:\"yx\" IEC104Name:\"标定初始雪深标志\"`</span>                              <span class=\"token comment\">// 标定初始雪深标志</span>\n\tPrecipitationType <span class=\"token builtin\">uint16</span>   <span class=\"token string\">`json:\"precipitationType\"`</span>                                                                 <span class=\"token comment\">// 降水类型</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"读取二进制数据\"><a href=\"#读取二进制数据\" class=\"headerlink\" title=\"读取二进制数据\"></a>读取二进制数据</h2><p>通过<code>binary</code>包，可以实现从buffer中读取数据向<code>struct</code>赋值</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><div class=\"caption\"><span>go</span></div><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>p <span class=\"token operator\">*</span>StructMcuRaw<span class=\"token punctuation\">)</span> <span class=\"token function\">MCUFromByte</span><span class=\"token punctuation\">(</span>res <span class=\"token operator\">*</span>bytes<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">// 软件版本[4]char</span>\n\t<span class=\"token keyword\">for</span> x <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span>\n\t\tbinary<span class=\"token punctuation\">.</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span> binary<span class=\"token punctuation\">.</span>BigEndian<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>Ver<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token comment\">// 通信箱id</span>\n\tbinary<span class=\"token punctuation\">.</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span> binary<span class=\"token punctuation\">.</span>BigEndian<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>p<span class=\"token punctuation\">.</span>Id<span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// 对整个子阵设置目标角度</span>\n\tbinary<span class=\"token punctuation\">.</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span> binary<span class=\"token punctuation\">.</span>BigEndian<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>p<span class=\"token punctuation\">.</span>TargetAngle<span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// 标定初始雪深标志</span>\n\tbinary<span class=\"token punctuation\">.</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span> binary<span class=\"token punctuation\">.</span>BigEndian<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>p<span class=\"token punctuation\">.</span>InitSnowDepth<span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// 降水类型</span>\n\tbinary<span class=\"token punctuation\">.</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span> binary<span class=\"token punctuation\">.</span>BigEndian<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>p<span class=\"token punctuation\">.</span>PrecipitationType<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"封装为query\"><a href=\"#封装为query\" class=\"headerlink\" title=\"封装为query\"></a>封装为query</h2><p>在本项目中，query指对单个设备的采集方法</p>\n<p>将数据读取封装成query方法，包括TCP采集过程、日志记录、包格式处理等</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><div class=\"caption\"><span>go</span></div><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">MCUQuery</span><span class=\"token punctuation\">(</span>conn <span class=\"token operator\">*</span>net<span class=\"token punctuation\">.</span>Conn<span class=\"token punctuation\">,</span> reader <span class=\"token operator\">*</span>bufio<span class=\"token punctuation\">.</span>Reader<span class=\"token punctuation\">,</span> buffer <span class=\"token operator\">*</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">,</span> cb <span class=\"token operator\">*</span>rs<span class=\"token punctuation\">.</span>StructCommBox<span class=\"token punctuation\">,</span> mcu <span class=\"token operator\">*</span>rs<span class=\"token punctuation\">.</span>StructMcu<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">// 查询地址</span>\n\taddInt<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">Atoi</span><span class=\"token punctuation\">(</span>mcu<span class=\"token punctuation\">.</span>Addr<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">return</span> err\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token comment\">// 包编号</span>\n\ttcpSeq <span class=\"token operator\">:=</span> <span class=\"token function\">TcpSeq</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">var</span> query <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">uint8</span><span class=\"token punctuation\">(</span>tcpSeq <span class=\"token operator\">/</span> <span class=\"token number\">0x100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">uint8</span><span class=\"token punctuation\">(</span>tcpSeq <span class=\"token operator\">%</span> <span class=\"token number\">0x100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 编号</span>\n\t\t<span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x06</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 长度</span>\n\t\t<span class=\"token function\">byte</span><span class=\"token punctuation\">(</span>addInt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x03</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x29</span><span class=\"token punctuation\">&#125;</span> <span class=\"token comment\">// 指令</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetWriteDeadline</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span><span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span>QUERY_DEFAULT_TIMEOUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Write</span><span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">.</span>IpAddr<span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">.</span>Port<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span> err\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token comment\">// 日志</span>\n\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">.</span>IpAddr<span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">.</span>Port<span class=\"token punctuation\">,</span> query<span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// 接收</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>conn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">SetReadDeadline</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span><span class=\"token function\">Now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span>QUERY_DEFAULT_TIMEOUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\tn<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>reader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Read</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>buffer<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">.</span>IpAddr<span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">.</span>Port<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span> err\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token comment\">// 日志</span>\n\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">.</span>IpAddr<span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">.</span>Port<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// 解析</span>\n\tres <span class=\"token operator\">:=</span> bytes<span class=\"token punctuation\">.</span><span class=\"token function\">NewBuffer</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>buffer<span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// TCP头</span>\n\t<span class=\"token keyword\">var</span> tcpHeader rs<span class=\"token punctuation\">.</span>StructTCPHeader\n\ttcpHeader<span class=\"token punctuation\">.</span><span class=\"token function\">TCPHeaderFromByte</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> tcpHeader<span class=\"token punctuation\">.</span>Seq <span class=\"token operator\">!=</span> tcpSeq <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">return</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TCP异常\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">if</span> tcpHeader<span class=\"token punctuation\">.</span>Len <span class=\"token operator\">!=</span> <span class=\"token number\">85</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">return</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TCP长度异常\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token comment\">// modbus头</span>\n\t<span class=\"token keyword\">var</span> mbHeader rs<span class=\"token punctuation\">.</span>StructMudbusHeader\n\tmbHeader<span class=\"token punctuation\">.</span><span class=\"token function\">MudbusHeaderFromByte</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// mcu内容</span>\n\tmcu<span class=\"token punctuation\">.</span>Raw<span class=\"token punctuation\">.</span><span class=\"token function\">MCUFromByte</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n\tmcu<span class=\"token punctuation\">.</span>VUpdate <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token comment\">// 标记更新</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"封装为采集过程\"><a href=\"#封装为采集过程\" class=\"headerlink\" title=\"封装为采集过程\"></a>封装为采集过程</h2><p>最后需要将所有的采集query放置在统一的采集过程中</p>\n<p>在一次采集过程中，创建一条TCP链接，完成所有采集动作，最后断开链接</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><div class=\"caption\"><span>go</span></div><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">Collect</span><span class=\"token punctuation\">(</span>cb <span class=\"token operator\">*</span>rs<span class=\"token punctuation\">.</span>StructCommBox<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">// 记录网络占用</span>\n\tNetCh <span class=\"token operator\">&lt;-</span> <span class=\"token boolean\">true</span>\n\t<span class=\"token keyword\">defer</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token operator\">&lt;-</span>NetCh\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// 初始化采集标识</span>\n\t<span class=\"token function\">eraseFlag</span><span class=\"token punctuation\">(</span>cb<span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// 采集结束后更新时标</span>\n\t<span class=\"token keyword\">defer</span> <span class=\"token keyword\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token function\">updateTs</span><span class=\"token punctuation\">(</span>cb<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// 建链</span>\n\tconn<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> net<span class=\"token punctuation\">.</span><span class=\"token function\">DialTimeout</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tcp\"</span><span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">.</span>IpAddr<span class=\"token operator\">+</span><span class=\"token string\">\":\"</span><span class=\"token operator\">+</span>cb<span class=\"token punctuation\">.</span>Port<span class=\"token punctuation\">,</span> rs<span class=\"token punctuation\">.</span>QUERY_DEFAULT_TIMEOUT<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">.</span>IpAddr<span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">.</span>Port<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tcb<span class=\"token punctuation\">.</span>VUpdate <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n\t<span class=\"token keyword\">defer</span> conn<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// 读写缓存</span>\n\treadBuf <span class=\"token operator\">:=</span> bufio<span class=\"token punctuation\">.</span><span class=\"token function\">NewReader</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span>\n\tbuffer <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// 按mcu查询</span>\n\t<span class=\"token keyword\">for</span> x <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>cb<span class=\"token punctuation\">.</span>Mcus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">// 切换MCU预留时间, 提高成功率</span>\n\t\ttime<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span>QUERY_MCU_INTERVAL<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token comment\">// 查mcu信息</span>\n\t\tmcu <span class=\"token operator\">:=</span> cb<span class=\"token punctuation\">.</span>Mcus<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span>\n\t\terr <span class=\"token operator\">=</span> cmd<span class=\"token punctuation\">.</span><span class=\"token function\">MCUQuery</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>conn<span class=\"token punctuation\">,</span> readBuf<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>buffer<span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">,</span> mcu<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">return</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token comment\">// 分次查跟踪器信息</span>\n\t\t<span class=\"token keyword\">for</span> y <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;</span> mcu<span class=\"token punctuation\">.</span>TracerNum<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token comment\">// 切换Tracer预留时间, 提高成功率</span>\n\t\t\ttime<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span>rs<span class=\"token punctuation\">.</span>QUERY_TRACER_INTERVAL<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token comment\">// 查询长度</span>\n\t\t\ttracerLen <span class=\"token operator\">:=</span> rs<span class=\"token punctuation\">.</span>QUERY_TRACER_COUNT\n\t\t\t<span class=\"token keyword\">if</span> mcu<span class=\"token punctuation\">.</span>TracerNum<span class=\"token operator\">-</span>y <span class=\"token operator\">&lt;</span> rs<span class=\"token punctuation\">.</span>QUERY_TRACER_COUNT <span class=\"token punctuation\">&#123;</span>\n\t\t\t\ttracerLen <span class=\"token operator\">=</span> mcu<span class=\"token punctuation\">.</span>TracerNum <span class=\"token operator\">-</span> y\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\terr <span class=\"token operator\">=</span> cmd<span class=\"token punctuation\">.</span><span class=\"token function\">TracerQuery</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>conn<span class=\"token punctuation\">,</span> readBuf<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>buffer<span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">,</span> mcu<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> tracerLen<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">return</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\ty <span class=\"token operator\">+=</span> tracerLen\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>使用golang+串口服务器进行串口通讯，非常的简单、直观，易于开发维护。</p>\n<p>在本次项目实践中，由于golang提供了方便的并发编程与控制机制，高负载环境下的性能也得到了充分保障。</p>"},{"title":"AI入门笔记（1）——简介与历史","date":"2023-11-24T01:42:38.000Z","_content":"\n# 课程\n\nhttps://github.com/microsoft/AI-For-Beginners/blob/main/lessons/1-Intro/README.md\n\n这是微软提供的AI-For-Beginners课程第一课，对AI的基础概念、定义、发展历史等内容进行了简单的介绍。\n\n<!-- more -->\n\n# 内容\n\n什么是```Weak AI```，什么是```Strong AI```\n\n什么是图灵测试，如何定义```Intelligence```\n\nAI的不同实现路径，过去主要是```Symbolic Reasoning```，而现在主要使用```Neural Networks```\n\nAI发展的简要历史\n\n近年来AI技术取得的重大进展：图片识别、自然语言识别、翻译等等","source":"_posts/AiForBeginners-1.md","raw":"---\ntitle: AI入门笔记（1）——简介与历史\ndate: 2023-11-24 09:42:38\ncategories:\n- AI学习\ntags:\n- AI\n- 笔记\n---\n\n# 课程\n\nhttps://github.com/microsoft/AI-For-Beginners/blob/main/lessons/1-Intro/README.md\n\n这是微软提供的AI-For-Beginners课程第一课，对AI的基础概念、定义、发展历史等内容进行了简单的介绍。\n\n<!-- more -->\n\n# 内容\n\n什么是```Weak AI```，什么是```Strong AI```\n\n什么是图灵测试，如何定义```Intelligence```\n\nAI的不同实现路径，过去主要是```Symbolic Reasoning```，而现在主要使用```Neural Networks```\n\nAI发展的简要历史\n\n近年来AI技术取得的重大进展：图片识别、自然语言识别、翻译等等","slug":"AiForBeginners-1","published":1,"updated":"2023-11-29T07:41:58.050Z","_id":"clpbyjvz20000mgtih16ad32g","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"课程\"><a href=\"#课程\" class=\"headerlink\" title=\"课程\"></a>课程</h1><p><a href=\"https://github.com/microsoft/AI-For-Beginners/blob/main/lessons/1-Intro/README.md\">https://github.com/microsoft/AI-For-Beginners/blob/main/lessons/1-Intro/README.md</a></p>\n<p>这是微软提供的AI-For-Beginners课程第一课，对AI的基础概念、定义、发展历史等内容进行了简单的介绍。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"内容\"><a href=\"#内容\" class=\"headerlink\" title=\"内容\"></a>内容</h1><p>什么是<code>Weak AI</code>，什么是<code>Strong AI</code></p>\n<p>什么是图灵测试，如何定义<code>Intelligence</code></p>\n<p>AI的不同实现路径，过去主要是<code>Symbolic Reasoning</code>，而现在主要使用<code>Neural Networks</code></p>\n<p>AI发展的简要历史</p>\n<p>近年来AI技术取得的重大进展：图片识别、自然语言识别、翻译等等</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"课程\"><a href=\"#课程\" class=\"headerlink\" title=\"课程\"></a>课程</h1><p><a href=\"https://github.com/microsoft/AI-For-Beginners/blob/main/lessons/1-Intro/README.md\">https://github.com/microsoft/AI-For-Beginners/blob/main/lessons/1-Intro/README.md</a></p>\n<p>这是微软提供的AI-For-Beginners课程第一课，对AI的基础概念、定义、发展历史等内容进行了简单的介绍。</p>","more":"<h1 id=\"内容\"><a href=\"#内容\" class=\"headerlink\" title=\"内容\"></a>内容</h1><p>什么是<code>Weak AI</code>，什么是<code>Strong AI</code></p>\n<p>什么是图灵测试，如何定义<code>Intelligence</code></p>\n<p>AI的不同实现路径，过去主要是<code>Symbolic Reasoning</code>，而现在主要使用<code>Neural Networks</code></p>\n<p>AI发展的简要历史</p>\n<p>近年来AI技术取得的重大进展：图片识别、自然语言识别、翻译等等</p>"},{"title":"AI入门笔记（2）——知识表示与专家系统","date":"2023-11-24T07:33:38.000Z","_content":"\n# 课程\n\nhttps://github.com/microsoft/AI-For-Beginners/blob/main/lessons/2-Symbolic/README.md\n\n这是微软提供的AI-For-Beginners课程第二课，介绍了过去常见的自顶向下的AI设计方法。\n\n<!-- more -->\n\n# 内容\n\n通过DIKW金字塔，探讨了 数据、信息、知识、智慧 的含义，传统的人工智能实现方式就是一类尝试将数据组织成知识的方法。\n\n探讨了使用计算机表达知识的几种方式。\n\n## 专家系统\n\n介绍了早期```symbolic AI```的一种成功实践：专家系统。\n\n将专家系统的实现区分为两种类型：向后推理与向前推理。\n\n后向推理实现专家系统的代码实践：https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/2-Symbolic/animal_Inference.py\n\n## 本体论和语义网\n\n```ontology``` 本体指的是某个概念实体，```Semantic Web``` 语义网指的是对本体的各种规范性描述的集合，简单的有对本体属性的描述，复杂的有对各种逻辑关系的描述。\n\n本体和语义网也是对人类思考方式的归纳和模仿，是一种组织复杂数据形成知识的方式，```WikiData``` 就是这样的一个知识库。\n\n使用语义网实现家谱查询系统的代码实践：https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/2-Symbolic/family_ontology.py\n\n# 总结\n\n学习了```Symbolic AI```的概念，历史，还通过几个简单例子进行了最简单的了解。\n\n可以感受到曾经计算机行业的先驱者们为了赋予计算机智能，付出了多少辛劳和汗水，也取得了巨大的成果。\n\nHowever, the important characteristics of knowledge-based systems is that you can always *explain* exactly how any of the decisions were made.","source":"_posts/AiForBeginners-2.md","raw":"---\ntitle: AI入门笔记（2）——知识表示与专家系统\ndate: 2023-11-24 15:33:38\ncategories:\n- AI学习\ntags:\n- AI\n- 笔记\n---\n\n# 课程\n\nhttps://github.com/microsoft/AI-For-Beginners/blob/main/lessons/2-Symbolic/README.md\n\n这是微软提供的AI-For-Beginners课程第二课，介绍了过去常见的自顶向下的AI设计方法。\n\n<!-- more -->\n\n# 内容\n\n通过DIKW金字塔，探讨了 数据、信息、知识、智慧 的含义，传统的人工智能实现方式就是一类尝试将数据组织成知识的方法。\n\n探讨了使用计算机表达知识的几种方式。\n\n## 专家系统\n\n介绍了早期```symbolic AI```的一种成功实践：专家系统。\n\n将专家系统的实现区分为两种类型：向后推理与向前推理。\n\n后向推理实现专家系统的代码实践：https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/2-Symbolic/animal_Inference.py\n\n## 本体论和语义网\n\n```ontology``` 本体指的是某个概念实体，```Semantic Web``` 语义网指的是对本体的各种规范性描述的集合，简单的有对本体属性的描述，复杂的有对各种逻辑关系的描述。\n\n本体和语义网也是对人类思考方式的归纳和模仿，是一种组织复杂数据形成知识的方式，```WikiData``` 就是这样的一个知识库。\n\n使用语义网实现家谱查询系统的代码实践：https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/2-Symbolic/family_ontology.py\n\n# 总结\n\n学习了```Symbolic AI```的概念，历史，还通过几个简单例子进行了最简单的了解。\n\n可以感受到曾经计算机行业的先驱者们为了赋予计算机智能，付出了多少辛劳和汗水，也取得了巨大的成果。\n\nHowever, the important characteristics of knowledge-based systems is that you can always *explain* exactly how any of the decisions were made.","slug":"AiForBeginners-2","published":1,"updated":"2023-11-29T07:42:01.626Z","_id":"clpcbnje30000hgtid1lv62q2","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"课程\"><a href=\"#课程\" class=\"headerlink\" title=\"课程\"></a>课程</h1><p><a href=\"https://github.com/microsoft/AI-For-Beginners/blob/main/lessons/2-Symbolic/README.md\">https://github.com/microsoft/AI-For-Beginners/blob/main/lessons/2-Symbolic/README.md</a></p>\n<p>这是微软提供的AI-For-Beginners课程第二课，介绍了过去常见的自顶向下的AI设计方法。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"内容\"><a href=\"#内容\" class=\"headerlink\" title=\"内容\"></a>内容</h1><p>通过DIKW金字塔，探讨了 数据、信息、知识、智慧 的含义，传统的人工智能实现方式就是一类尝试将数据组织成知识的方法。</p>\n<p>探讨了使用计算机表达知识的几种方式。</p>\n<h2 id=\"专家系统\"><a href=\"#专家系统\" class=\"headerlink\" title=\"专家系统\"></a>专家系统</h2><p>介绍了早期<code>symbolic AI</code>的一种成功实践：专家系统。</p>\n<p>将专家系统的实现区分为两种类型：向后推理与向前推理。</p>\n<p>后向推理实现专家系统的代码实践：<a href=\"https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/2-Symbolic/animal_Inference.py\">https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/2-Symbolic/animal_Inference.py</a></p>\n<h2 id=\"本体论和语义网\"><a href=\"#本体论和语义网\" class=\"headerlink\" title=\"本体论和语义网\"></a>本体论和语义网</h2><p><code>ontology</code> 本体指的是某个概念实体，<code>Semantic Web</code> 语义网指的是对本体的各种规范性描述的集合，简单的有对本体属性的描述，复杂的有对各种逻辑关系的描述。</p>\n<p>本体和语义网也是对人类思考方式的归纳和模仿，是一种组织复杂数据形成知识的方式，<code>WikiData</code> 就是这样的一个知识库。</p>\n<p>使用语义网实现家谱查询系统的代码实践：<a href=\"https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/2-Symbolic/family_ontology.py\">https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/2-Symbolic/family_ontology.py</a></p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>学习了<code>Symbolic AI</code>的概念，历史，还通过几个简单例子进行了最简单的了解。</p>\n<p>可以感受到曾经计算机行业的先驱者们为了赋予计算机智能，付出了多少辛劳和汗水，也取得了巨大的成果。</p>\n<p>However, the important characteristics of knowledge-based systems is that you can always <em>explain</em> exactly how any of the decisions were made.</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"课程\"><a href=\"#课程\" class=\"headerlink\" title=\"课程\"></a>课程</h1><p><a href=\"https://github.com/microsoft/AI-For-Beginners/blob/main/lessons/2-Symbolic/README.md\">https://github.com/microsoft/AI-For-Beginners/blob/main/lessons/2-Symbolic/README.md</a></p>\n<p>这是微软提供的AI-For-Beginners课程第二课，介绍了过去常见的自顶向下的AI设计方法。</p>","more":"<h1 id=\"内容\"><a href=\"#内容\" class=\"headerlink\" title=\"内容\"></a>内容</h1><p>通过DIKW金字塔，探讨了 数据、信息、知识、智慧 的含义，传统的人工智能实现方式就是一类尝试将数据组织成知识的方法。</p>\n<p>探讨了使用计算机表达知识的几种方式。</p>\n<h2 id=\"专家系统\"><a href=\"#专家系统\" class=\"headerlink\" title=\"专家系统\"></a>专家系统</h2><p>介绍了早期<code>symbolic AI</code>的一种成功实践：专家系统。</p>\n<p>将专家系统的实现区分为两种类型：向后推理与向前推理。</p>\n<p>后向推理实现专家系统的代码实践：<a href=\"https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/2-Symbolic/animal_Inference.py\">https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/2-Symbolic/animal_Inference.py</a></p>\n<h2 id=\"本体论和语义网\"><a href=\"#本体论和语义网\" class=\"headerlink\" title=\"本体论和语义网\"></a>本体论和语义网</h2><p><code>ontology</code> 本体指的是某个概念实体，<code>Semantic Web</code> 语义网指的是对本体的各种规范性描述的集合，简单的有对本体属性的描述，复杂的有对各种逻辑关系的描述。</p>\n<p>本体和语义网也是对人类思考方式的归纳和模仿，是一种组织复杂数据形成知识的方式，<code>WikiData</code> 就是这样的一个知识库。</p>\n<p>使用语义网实现家谱查询系统的代码实践：<a href=\"https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/2-Symbolic/family_ontology.py\">https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/2-Symbolic/family_ontology.py</a></p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>学习了<code>Symbolic AI</code>的概念，历史，还通过几个简单例子进行了最简单的了解。</p>\n<p>可以感受到曾经计算机行业的先驱者们为了赋予计算机智能，付出了多少辛劳和汗水，也取得了巨大的成果。</p>\n<p>However, the important characteristics of knowledge-based systems is that you can always <em>explain</em> exactly how any of the decisions were made.</p>"},{"title":"Numpy入门笔记","date":"2023-11-28T01:13:53.000Z","_content":"\n# 前言\n\n网站 https://numpy.org/\n\nNumPy（Numerical Python）是Python中数字处理的事实标准，也是学习其他数据知识的必备工具。\n\n本文是学习Numpy过程中的笔记，所有内容都来自官方文档：https://numpy.org/doc/stable/user/absolute_beginners.html\n\n<!-- more -->\n\n# 1. 普通数组和np数组的区别\n\n```python python\nimport numpy as np\n\n# 普通数组\na = [0, 1, 2, 3]\nprint(a)\n# np数组\nb = np.array(a)\nprint(b)\n```\n\n# 2. 创建np数组的方法\n\n```python python\nnp.zeros(2) # 全0填充\nnp.ones(2) # 全1填充\nnp.empty(2) # 空数组\nnp.arange(4) # [0, 1, 2, 3]\nnp.arange(2, 9, 2) # [2, 4, 6, 8]\nnp.linspace(0, 10, num=5) # [0, 2.5, 5, 7.5, 10]\n# 可以自己决定数据类型\nnp.ones(2, dtype=np.int64) # [1, 1]\n```\n\n# 3. 排序和拼接\n\n```python python\narr = np.array([2, 1, 5, 3, 7, 4, 6, 8])\nnp.sort(arr) # 排序\na = np.array([1, 2, 3, 4])\nb = np.array([5, 6, 7, 8])\nnp.concatenate((a, b)) # 拼接\nx = np.array([[1, 2], [3, 4]])\ny = np.array([[5, 6]])\nnp.concatenate((x, y), axis=0) # 拼接\n```\n\n# 4. 形状和大小\n\n```python python\narray_example = np.array([\n  [[0, 1, 2, 3], [4, 5, 6, 7]],\n  [[0, 1, 2, 3], [4, 5, 6, 7]],\n  [[0 ,1 ,2, 3], [4, 5, 6, 7]]\n])\narray_example.ndim # 维度 3\narray_example.size # 大小 24\narray_example.shape # 形状 (3, 2, 4)\n```\n\n# 5. 改变数组的形状\n\n```python python\na = np.arange(6)\nb = a.reshape(3, 2)\n# [[0 1]\n#  [2 3]\n#  [4 5]]\nnp.reshape(a, newshape=(1, 6), order='C') # 更多参数\n```\n\n# 6. 添加维度\n\n```python python\na = np.array([1, 2, 3, 4, 5, 6])\na.shape # 一维 (6, )\na2 = a[np.newaxis, :]\na2.shape # 二维 (1, 6)\ncol_vector = a[:, np.newaxis] # 插入列向量\ncol_vector.shape # 二维 (6, 1)\n# 在指定维度插入\nb = np.expand_dims(a, axis=1)\nb.shape # (6, 1)\nc = np.expand_dims(a, axis=0)\nc.shape # (1, 6)\n```\n\n# 7. 索引和切片\n\n```python python\ndata = np.array([1, 2, 3])\ndata[1] # 正常索引方式 2\ndata[0:2] # 正常切片 array([1, 2])\ndata[1:] # 正向到底 array([2, 3])\ndata[-2:] # 反向到底 array([2, 3])\n# 条件过滤\na = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]])\na[a < 8] # 符合条件的内容 [1 2 3 4 5 6 7]\nfive_up = (a >= 5) # 条件表达式作为参数\na[five_up] # [5 6 7 8 9 10 11 12]\nc = a[(a > 2) & (a < 11)] # 可以使用与&或| [3 4 5 6 7 8 9 10]\nfive_up = (a > 5) | (a == 5) # 条件本身会被计算成一个bool数组, 和原数组结构相同\nfive_up\n# [[False False False False]\n#  [ True  True  True  True]\n#  [ True  True  True True]]\na = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]])\nb = np.nonzero(a < 6) # 根据查询条件, 返回符合条件的元素的索引\n# 返回的数组数是a的维数, 返回值是索引值, 返回长度是符合条件的个数\n# print(b) # (array([0, 0, 0, 0, 1], dtype=int64), array([0, 1, 2, 3, 0], dtype=int64))\n# 将上述内容压缩成坐标列表\nlist_of_coordinates= list(zip(b[0], b[1])) # [[0, 0], [0, 1], [0, 2], [0, 3], [1, 0]]\na[b] # 也可以用索引直接获得元素 [1 2 3 4 5]\n# 结果为空\nnot_there = np.nonzero(a == 42) # (array([], dtype=int64), array([], dtype=int64))\n```\n\n# 8. 现有数据转数组\n\n```python python\na = np.array([1,  2,  3,  4,  5,  6,  7,  8,  9, 10])\narr1 = a[3:8] # 通过切片创建新数组 array([4, 5, 6, 7, 8])\na1 = np.array([[1, 1], [2, 2]])\na2 = np.array([[3, 3], [4, 4]])\nnp.vstack((a1, a2)) # 垂直堆叠 [[1, 1], [2, 2], [3, 3], [4, 4]]\nnp.hstack((a1, a2)) # 水平堆叠 [[1, 1], [3, 3], [2, 2], [4, 4]]\nx = np.arange(1, 25).reshape(2, 12) # 素材\n# array([[ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12],\n#       [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]])\nnp.hsplit(x, 3) # 拆成三个\n# [array([[ 1,  2,  3,  4],\n#        [13, 14, 15, 16]]), array([[ 5,  6,  7,  8],\n#        [17, 18, 19, 20]]), array([[ 9, 10, 11, 12],\n#        [21, 22, 23, 24]])]\nnp.hsplit(x, (3, 4)) # 按指定列号拆分\n# [array([[ 1,  2,  3],\n#        [13, 14, 15]]), array([[ 4],\n#        [16]]), array([[ 5,  6,  7,  8,  9, 10, 11, 12],\n#        [17, 18, 19, 20, 21, 22, 23, 24]])]\n# 视图是引用, 修改视图也会修改原数据\na = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]])\nb1 = a[0, :] # array([1, 2, 3, 4])\nb1[0] = 99\na\n# array([[99,  2,  3,  4],\n#        [ 5,  6,  7,  8],\n#        [ 9, 10, 11, 12]])\n# copy是复制, 修改copy对原数据没影响\nb2 = a.copy()\n```\n\n# 9. 基础数组操作\n\n```python python\n# 加减乘除\ndata = np.array([1, 2]) # [1 2]\nones = np.ones(2, dtype=int) # [1 1]\ndata + ones # [2 3]\n# 求和\na = np.array([1, 2, 3, 4])\na.sum() # 10\n# 在所选维度求和\nb = np.array([[1, 1], [2, 2]])\nb.sum(axis=0) # [3, 3]\nb.sum(axis=1) # [2, 4]\n# 和常量的运算\ndata = np.array([1.0, 2.0])\ndata * 1.6 # [1.6 3.2]\n# 素材\na = np.array([[0.45053314, 0.17296777, 0.34376245, 0.5510652],\n              [0.54627315, 0.05093587, 0.40067661, 0.55645993],\n              [0.12697628, 0.82485143, 0.26590556, 0.56917101]])\na.sum() # 求和 4.8595784\na.min() # 极小值 0.05093587\na.min(axis=0) # 维度极小值 [0.12697628, 0.05093587, 0.26590556, 0.5510652 ]\n```\n\n# 10. 矩阵\n\n```python python\ndata = np.array([[1, 2], [3, 4], [5, 6]])\n# array([[1, 2],\n#        [3, 4],\n#        [5, 6]])\ndata[0, 1] # 正常索引 2\ndata[1:3] # 正常切片 array([[3, 4], [5, 6]])\ndata[0:2, 0] # 0:2是切片, 0是索引, 切片和索引混用 array([1, 3])\ndata.max() # 6\ndata.min() # 1\ndata.sum() # 21\n# 也可以指定维度\ndata = np.array([[1, 2], [5, 3], [4, 6]])\ndata.max(axis=0) # array([5, 6])\ndata.max(axis=1) # array([2, 5, 6])\n# 矩阵之间的运算（需要矩阵尺寸相同）\ndata = np.array([[1, 2], [3, 4]])\nones = np.array([[1, 1], [1, 1]])\ndata + ones # array([[2, 3], [4, 5]])\n# 如果某个矩阵只有一行或者一列, 也可使用广播规则运算\ndata = np.array([[1, 2], [3, 4], [5, 6]])\nones_row = np.array([[1, 1]])\ndata + ones_row\n# array([[2, 3],\n#        [4, 5],\n#        [6, 7]])\n```\n\n# 11. 生成随机数\n\n```python python\nrng = np.random.default_rng()\nrng.integers(5, size=(2, 4)) # 两行四列, 随机整数, 小于5\nrng.random((3, 2)) # 三行两列 0-1之间 float\n```\n\n# 12. 去重和计数\n\n```python python\na = np.array([11, 11, 12, 13, 14, 15, 16, 17, 12, 13, 11, 14, 18, 19, 20])\nunique_values = np.unique(a) # 去重 [11 12 13 14 15 16 17 18 19 20]\nunique_values, indices_list = np.unique(a, return_index=True) # 序号 [ 0  2  3  4  5  6  7 12 13 14]\nunique_values, occurrence_count = np.unique(a, return_counts=True) # 数量 [3 2 2 2 1 1 1 1 1 1]\n# 对多维数组也可用\na_2d = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [1, 2, 3, 4]])\nunique_values = np.unique(a_2d) # 去重 [ 1  2  3  4  5  6  7  8  9 10 11 12]\nunique_rows = np.unique(a_2d, axis=0) # 获得去重的行\n# [[ 1  2  3  4]\n#  [ 5  6  7  8]\n#  [ 9 10 11 12]]\nunique_rows, indices, occurrence_count = np.unique(a_2d, axis=0, return_counts=True, return_index=True)\nindices # 所得行的序号 [0 1 2]\noccurrence_count # 所得行的数量 [2 1 1]\n```\n\n# 13. 矩阵转置和变形\n\n```python python\ndata = np.array([1, 2, 3, 4, 5, 6])\n# 变形\ndata.reshape(2, 3)\n# array([[1, 2, 3],\n#        [4, 5, 6]])\ndata.reshape(3, 2)\n# array([[1, 2],\n#        [3, 4],\n#        [5, 6]])\n# 转置\ndata = data.reshape(2, 3) # 先准备一个 23 矩阵\n# array([[1, 2, 3],\n#        [4, 5, 6]])\ndata.transpose() # 转置\n# [[1 4]\n#  [2 5]\n#  [3 6]]\n# 也可以直接用T\ndata.T\n# [[1 4]\n#  [2 5]\n#  [3 6]]\n```\n\n# 14. 数组逆序\n\n```python python\narr = np.array([1, 2, 3, 4, 5, 6, 7, 8])\nreversed_arr = np.flip(arr) # [8 7 6 5 4 3 2 1]\n# 二维数组逆序\narr_2d = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]])\nreversed_arr = np.flip(arr_2d)\n# [[12 11 10  9]\n#  [ 8  7  6  5]\n#  [ 4  3  2  1]]\n# 针对的维度逆序\nreversed_arr_rows = np.flip(arr_2d, axis=0)\n# [[ 9 10 11 12]\n#  [ 5  6  7  8]\n#  [ 1  2  3  4]]\n# 对切片逆序并赋值\narr_2d[:,1] = np.flip(arr_2d[:,1])\n# [[ 1 10  3  4]\n#  [ 8  7  6  5]\n#  [ 9  2 11 12]]\n```\n\n# 15. 多维数组展开\n\n```python python\nx = np.array([[1 , 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]])\nx.flatten() # 拷贝展开 array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12])\na2 = x.ravel() # 引用展开 array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12])\n```\n\n# 16. 内置文档\n\n```python python\n# help(max) 输出说明\n# max? 同名所有函数说明\na = np.array([1, 2, 3, 4, 5, 6])\n# a? 变量说明\n```\n\n# 17. 实现数学公式\n\n```python python\npredictions = np.array([1, 2, 3])\nlabels = np.array([1, 1, 1])\n# 例如均方误差公式\nerror = (1 / 3) * np.sum(np.square(predictions - labels))\n```\n\n# 18. np对象导入导出\n\n```python python\na = np.array([1, 2, 3, 4, 5, 6])\n# np.save('filename', a) 存成文件\n# b = np.load('filename.npy') 从文件读取\n# 使用csv格式\n# np.savetxt('new_file.csv', a)\n# np.loadtxt('new_file.csv')\n```\n\n# 19. 使用 Pandas 库进行csv导入导出操作\n\n```python python\nimport pandas as pd\n\n# # If all of your columns are the same type:\n# x = pd.read_csv('music.csv', header=0).values\n# print(x)\n# [['Billie Holiday' 'Jazz' 1300000 27000000]\n#  ['Jimmie Hendrix' 'Rock' 2700000 70000000]\n#  ['Miles Davis' 'Jazz' 1500000 48000000]\n#  ['SIA' 'Pop' 2000000 74000000]]\n\n# # You can also simply select the columns you need:\n# x = pd.read_csv('music.csv', usecols=['Artist', 'Plays']).values\n# print(x)\n# [['Billie Holiday' 27000000]\n#  ['Jimmie Hendrix' 70000000]\n#  ['Miles Davis' 48000000]\n#  ['SIA' 74000000]]\n```\n\n# 20. 使用 Matplotlib 绘制数据图像\n\n```python python\nimport matplotlib.pyplot as plt\n# 显示数组\na = np.array([2, 1, 5, 7, 4, 6, 8, 14, 10, 9, 18, 20, 22])\nplt.plot(a)\nplt.show()\n# 两种数据\nx = np.linspace(0, 5, 20)\ny = np.linspace(0, 10, 20)\nplt.plot(x, y, 'purple') # line\nplt.plot(x, y, 'o')      # dots\nplt.show()\n# 高级使用\nfig = plt.figure()\nax = fig.add_subplot(projection='3d')\nX = np.arange(-5, 5, 0.15)\nY = np.arange(-5, 5, 0.15)\nX, Y = np.meshgrid(X, Y)\nR = np.sqrt(X**2 + Y**2)\nZ = np.sin(R)\n\nax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap='viridis')\nplt.show()\n```\n","source":"_posts/pythonNumpy.md","raw":"---\ntitle: Numpy入门笔记\ndate: 2023-11-28 09:13:53\ncategories:\n- python\ntags:\n- python\n- 库\n- 笔记\n- 豆知识\n---\n\n# 前言\n\n网站 https://numpy.org/\n\nNumPy（Numerical Python）是Python中数字处理的事实标准，也是学习其他数据知识的必备工具。\n\n本文是学习Numpy过程中的笔记，所有内容都来自官方文档：https://numpy.org/doc/stable/user/absolute_beginners.html\n\n<!-- more -->\n\n# 1. 普通数组和np数组的区别\n\n```python python\nimport numpy as np\n\n# 普通数组\na = [0, 1, 2, 3]\nprint(a)\n# np数组\nb = np.array(a)\nprint(b)\n```\n\n# 2. 创建np数组的方法\n\n```python python\nnp.zeros(2) # 全0填充\nnp.ones(2) # 全1填充\nnp.empty(2) # 空数组\nnp.arange(4) # [0, 1, 2, 3]\nnp.arange(2, 9, 2) # [2, 4, 6, 8]\nnp.linspace(0, 10, num=5) # [0, 2.5, 5, 7.5, 10]\n# 可以自己决定数据类型\nnp.ones(2, dtype=np.int64) # [1, 1]\n```\n\n# 3. 排序和拼接\n\n```python python\narr = np.array([2, 1, 5, 3, 7, 4, 6, 8])\nnp.sort(arr) # 排序\na = np.array([1, 2, 3, 4])\nb = np.array([5, 6, 7, 8])\nnp.concatenate((a, b)) # 拼接\nx = np.array([[1, 2], [3, 4]])\ny = np.array([[5, 6]])\nnp.concatenate((x, y), axis=0) # 拼接\n```\n\n# 4. 形状和大小\n\n```python python\narray_example = np.array([\n  [[0, 1, 2, 3], [4, 5, 6, 7]],\n  [[0, 1, 2, 3], [4, 5, 6, 7]],\n  [[0 ,1 ,2, 3], [4, 5, 6, 7]]\n])\narray_example.ndim # 维度 3\narray_example.size # 大小 24\narray_example.shape # 形状 (3, 2, 4)\n```\n\n# 5. 改变数组的形状\n\n```python python\na = np.arange(6)\nb = a.reshape(3, 2)\n# [[0 1]\n#  [2 3]\n#  [4 5]]\nnp.reshape(a, newshape=(1, 6), order='C') # 更多参数\n```\n\n# 6. 添加维度\n\n```python python\na = np.array([1, 2, 3, 4, 5, 6])\na.shape # 一维 (6, )\na2 = a[np.newaxis, :]\na2.shape # 二维 (1, 6)\ncol_vector = a[:, np.newaxis] # 插入列向量\ncol_vector.shape # 二维 (6, 1)\n# 在指定维度插入\nb = np.expand_dims(a, axis=1)\nb.shape # (6, 1)\nc = np.expand_dims(a, axis=0)\nc.shape # (1, 6)\n```\n\n# 7. 索引和切片\n\n```python python\ndata = np.array([1, 2, 3])\ndata[1] # 正常索引方式 2\ndata[0:2] # 正常切片 array([1, 2])\ndata[1:] # 正向到底 array([2, 3])\ndata[-2:] # 反向到底 array([2, 3])\n# 条件过滤\na = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]])\na[a < 8] # 符合条件的内容 [1 2 3 4 5 6 7]\nfive_up = (a >= 5) # 条件表达式作为参数\na[five_up] # [5 6 7 8 9 10 11 12]\nc = a[(a > 2) & (a < 11)] # 可以使用与&或| [3 4 5 6 7 8 9 10]\nfive_up = (a > 5) | (a == 5) # 条件本身会被计算成一个bool数组, 和原数组结构相同\nfive_up\n# [[False False False False]\n#  [ True  True  True  True]\n#  [ True  True  True True]]\na = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]])\nb = np.nonzero(a < 6) # 根据查询条件, 返回符合条件的元素的索引\n# 返回的数组数是a的维数, 返回值是索引值, 返回长度是符合条件的个数\n# print(b) # (array([0, 0, 0, 0, 1], dtype=int64), array([0, 1, 2, 3, 0], dtype=int64))\n# 将上述内容压缩成坐标列表\nlist_of_coordinates= list(zip(b[0], b[1])) # [[0, 0], [0, 1], [0, 2], [0, 3], [1, 0]]\na[b] # 也可以用索引直接获得元素 [1 2 3 4 5]\n# 结果为空\nnot_there = np.nonzero(a == 42) # (array([], dtype=int64), array([], dtype=int64))\n```\n\n# 8. 现有数据转数组\n\n```python python\na = np.array([1,  2,  3,  4,  5,  6,  7,  8,  9, 10])\narr1 = a[3:8] # 通过切片创建新数组 array([4, 5, 6, 7, 8])\na1 = np.array([[1, 1], [2, 2]])\na2 = np.array([[3, 3], [4, 4]])\nnp.vstack((a1, a2)) # 垂直堆叠 [[1, 1], [2, 2], [3, 3], [4, 4]]\nnp.hstack((a1, a2)) # 水平堆叠 [[1, 1], [3, 3], [2, 2], [4, 4]]\nx = np.arange(1, 25).reshape(2, 12) # 素材\n# array([[ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12],\n#       [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]])\nnp.hsplit(x, 3) # 拆成三个\n# [array([[ 1,  2,  3,  4],\n#        [13, 14, 15, 16]]), array([[ 5,  6,  7,  8],\n#        [17, 18, 19, 20]]), array([[ 9, 10, 11, 12],\n#        [21, 22, 23, 24]])]\nnp.hsplit(x, (3, 4)) # 按指定列号拆分\n# [array([[ 1,  2,  3],\n#        [13, 14, 15]]), array([[ 4],\n#        [16]]), array([[ 5,  6,  7,  8,  9, 10, 11, 12],\n#        [17, 18, 19, 20, 21, 22, 23, 24]])]\n# 视图是引用, 修改视图也会修改原数据\na = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]])\nb1 = a[0, :] # array([1, 2, 3, 4])\nb1[0] = 99\na\n# array([[99,  2,  3,  4],\n#        [ 5,  6,  7,  8],\n#        [ 9, 10, 11, 12]])\n# copy是复制, 修改copy对原数据没影响\nb2 = a.copy()\n```\n\n# 9. 基础数组操作\n\n```python python\n# 加减乘除\ndata = np.array([1, 2]) # [1 2]\nones = np.ones(2, dtype=int) # [1 1]\ndata + ones # [2 3]\n# 求和\na = np.array([1, 2, 3, 4])\na.sum() # 10\n# 在所选维度求和\nb = np.array([[1, 1], [2, 2]])\nb.sum(axis=0) # [3, 3]\nb.sum(axis=1) # [2, 4]\n# 和常量的运算\ndata = np.array([1.0, 2.0])\ndata * 1.6 # [1.6 3.2]\n# 素材\na = np.array([[0.45053314, 0.17296777, 0.34376245, 0.5510652],\n              [0.54627315, 0.05093587, 0.40067661, 0.55645993],\n              [0.12697628, 0.82485143, 0.26590556, 0.56917101]])\na.sum() # 求和 4.8595784\na.min() # 极小值 0.05093587\na.min(axis=0) # 维度极小值 [0.12697628, 0.05093587, 0.26590556, 0.5510652 ]\n```\n\n# 10. 矩阵\n\n```python python\ndata = np.array([[1, 2], [3, 4], [5, 6]])\n# array([[1, 2],\n#        [3, 4],\n#        [5, 6]])\ndata[0, 1] # 正常索引 2\ndata[1:3] # 正常切片 array([[3, 4], [5, 6]])\ndata[0:2, 0] # 0:2是切片, 0是索引, 切片和索引混用 array([1, 3])\ndata.max() # 6\ndata.min() # 1\ndata.sum() # 21\n# 也可以指定维度\ndata = np.array([[1, 2], [5, 3], [4, 6]])\ndata.max(axis=0) # array([5, 6])\ndata.max(axis=1) # array([2, 5, 6])\n# 矩阵之间的运算（需要矩阵尺寸相同）\ndata = np.array([[1, 2], [3, 4]])\nones = np.array([[1, 1], [1, 1]])\ndata + ones # array([[2, 3], [4, 5]])\n# 如果某个矩阵只有一行或者一列, 也可使用广播规则运算\ndata = np.array([[1, 2], [3, 4], [5, 6]])\nones_row = np.array([[1, 1]])\ndata + ones_row\n# array([[2, 3],\n#        [4, 5],\n#        [6, 7]])\n```\n\n# 11. 生成随机数\n\n```python python\nrng = np.random.default_rng()\nrng.integers(5, size=(2, 4)) # 两行四列, 随机整数, 小于5\nrng.random((3, 2)) # 三行两列 0-1之间 float\n```\n\n# 12. 去重和计数\n\n```python python\na = np.array([11, 11, 12, 13, 14, 15, 16, 17, 12, 13, 11, 14, 18, 19, 20])\nunique_values = np.unique(a) # 去重 [11 12 13 14 15 16 17 18 19 20]\nunique_values, indices_list = np.unique(a, return_index=True) # 序号 [ 0  2  3  4  5  6  7 12 13 14]\nunique_values, occurrence_count = np.unique(a, return_counts=True) # 数量 [3 2 2 2 1 1 1 1 1 1]\n# 对多维数组也可用\na_2d = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [1, 2, 3, 4]])\nunique_values = np.unique(a_2d) # 去重 [ 1  2  3  4  5  6  7  8  9 10 11 12]\nunique_rows = np.unique(a_2d, axis=0) # 获得去重的行\n# [[ 1  2  3  4]\n#  [ 5  6  7  8]\n#  [ 9 10 11 12]]\nunique_rows, indices, occurrence_count = np.unique(a_2d, axis=0, return_counts=True, return_index=True)\nindices # 所得行的序号 [0 1 2]\noccurrence_count # 所得行的数量 [2 1 1]\n```\n\n# 13. 矩阵转置和变形\n\n```python python\ndata = np.array([1, 2, 3, 4, 5, 6])\n# 变形\ndata.reshape(2, 3)\n# array([[1, 2, 3],\n#        [4, 5, 6]])\ndata.reshape(3, 2)\n# array([[1, 2],\n#        [3, 4],\n#        [5, 6]])\n# 转置\ndata = data.reshape(2, 3) # 先准备一个 23 矩阵\n# array([[1, 2, 3],\n#        [4, 5, 6]])\ndata.transpose() # 转置\n# [[1 4]\n#  [2 5]\n#  [3 6]]\n# 也可以直接用T\ndata.T\n# [[1 4]\n#  [2 5]\n#  [3 6]]\n```\n\n# 14. 数组逆序\n\n```python python\narr = np.array([1, 2, 3, 4, 5, 6, 7, 8])\nreversed_arr = np.flip(arr) # [8 7 6 5 4 3 2 1]\n# 二维数组逆序\narr_2d = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]])\nreversed_arr = np.flip(arr_2d)\n# [[12 11 10  9]\n#  [ 8  7  6  5]\n#  [ 4  3  2  1]]\n# 针对的维度逆序\nreversed_arr_rows = np.flip(arr_2d, axis=0)\n# [[ 9 10 11 12]\n#  [ 5  6  7  8]\n#  [ 1  2  3  4]]\n# 对切片逆序并赋值\narr_2d[:,1] = np.flip(arr_2d[:,1])\n# [[ 1 10  3  4]\n#  [ 8  7  6  5]\n#  [ 9  2 11 12]]\n```\n\n# 15. 多维数组展开\n\n```python python\nx = np.array([[1 , 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]])\nx.flatten() # 拷贝展开 array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12])\na2 = x.ravel() # 引用展开 array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12])\n```\n\n# 16. 内置文档\n\n```python python\n# help(max) 输出说明\n# max? 同名所有函数说明\na = np.array([1, 2, 3, 4, 5, 6])\n# a? 变量说明\n```\n\n# 17. 实现数学公式\n\n```python python\npredictions = np.array([1, 2, 3])\nlabels = np.array([1, 1, 1])\n# 例如均方误差公式\nerror = (1 / 3) * np.sum(np.square(predictions - labels))\n```\n\n# 18. np对象导入导出\n\n```python python\na = np.array([1, 2, 3, 4, 5, 6])\n# np.save('filename', a) 存成文件\n# b = np.load('filename.npy') 从文件读取\n# 使用csv格式\n# np.savetxt('new_file.csv', a)\n# np.loadtxt('new_file.csv')\n```\n\n# 19. 使用 Pandas 库进行csv导入导出操作\n\n```python python\nimport pandas as pd\n\n# # If all of your columns are the same type:\n# x = pd.read_csv('music.csv', header=0).values\n# print(x)\n# [['Billie Holiday' 'Jazz' 1300000 27000000]\n#  ['Jimmie Hendrix' 'Rock' 2700000 70000000]\n#  ['Miles Davis' 'Jazz' 1500000 48000000]\n#  ['SIA' 'Pop' 2000000 74000000]]\n\n# # You can also simply select the columns you need:\n# x = pd.read_csv('music.csv', usecols=['Artist', 'Plays']).values\n# print(x)\n# [['Billie Holiday' 27000000]\n#  ['Jimmie Hendrix' 70000000]\n#  ['Miles Davis' 48000000]\n#  ['SIA' 74000000]]\n```\n\n# 20. 使用 Matplotlib 绘制数据图像\n\n```python python\nimport matplotlib.pyplot as plt\n# 显示数组\na = np.array([2, 1, 5, 7, 4, 6, 8, 14, 10, 9, 18, 20, 22])\nplt.plot(a)\nplt.show()\n# 两种数据\nx = np.linspace(0, 5, 20)\ny = np.linspace(0, 10, 20)\nplt.plot(x, y, 'purple') # line\nplt.plot(x, y, 'o')      # dots\nplt.show()\n# 高级使用\nfig = plt.figure()\nax = fig.add_subplot(projection='3d')\nX = np.arange(-5, 5, 0.15)\nY = np.arange(-5, 5, 0.15)\nX, Y = np.meshgrid(X, Y)\nR = np.sqrt(X**2 + Y**2)\nZ = np.sin(R)\n\nax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap='viridis')\nplt.show()\n```\n","slug":"pythonNumpy","published":1,"updated":"2023-12-07T07:48:35.071Z","_id":"clpj53yr000055kti4s749y5p","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>网站 <a href=\"https://numpy.org/\">https://numpy.org/</a></p>\n<p>NumPy（Numerical Python）是Python中数字处理的事实标准，也是学习其他数据知识的必备工具。</p>\n<p>本文是学习Numpy过程中的笔记，所有内容都来自官方文档：<a href=\"https://numpy.org/doc/stable/user/absolute_beginners.html\">https://numpy.org/doc/stable/user/absolute_beginners.html</a></p>\n<span id=\"more\"></span>\n\n<h1 id=\"1-普通数组和np数组的区别\"><a href=\"#1-普通数组和np数组的区别\" class=\"headerlink\" title=\"1. 普通数组和np数组的区别\"></a>1. 普通数组和np数组的区别</h1><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n<span class=\"token comment\"># 普通数组</span>\na <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># np数组</span>\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"2-创建np数组的方法\"><a href=\"#2-创建np数组的方法\" class=\"headerlink\" title=\"2. 创建np数组的方法\"></a>2. 创建np数组的方法</h1><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 全0填充</span>\nnp<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 全1填充</span>\nnp<span class=\"token punctuation\">.</span>empty<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 空数组</span>\nnp<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># [0, 1, 2, 3]</span>\nnp<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># [2, 4, 6, 8]</span>\nnp<span class=\"token punctuation\">.</span>linspace<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> num<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># [0, 2.5, 5, 7.5, 10]</span>\n<span class=\"token comment\"># 可以自己决定数据类型</span>\nnp<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>int64<span class=\"token punctuation\">)</span> <span class=\"token comment\"># [1, 1]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"3-排序和拼接\"><a href=\"#3-排序和拼接\" class=\"headerlink\" title=\"3. 排序和拼接\"></a>3. 排序和拼接</h1><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">arr <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nnp<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 排序</span>\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nnp<span class=\"token punctuation\">.</span>concatenate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 拼接</span>\nx <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ny <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nnp<span class=\"token punctuation\">.</span>concatenate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 拼接</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"4-形状和大小\"><a href=\"#4-形状和大小\" class=\"headerlink\" title=\"4. 形状和大小\"></a>4. 形状和大小</h1><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">array_example <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span> <span class=\"token punctuation\">,</span><span class=\"token number\">1</span> <span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\narray_example<span class=\"token punctuation\">.</span>ndim <span class=\"token comment\"># 维度 3</span>\narray_example<span class=\"token punctuation\">.</span>size <span class=\"token comment\"># 大小 24</span>\narray_example<span class=\"token punctuation\">.</span>shape <span class=\"token comment\"># 形状 (3, 2, 4)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"5-改变数组的形状\"><a href=\"#5-改变数组的形状\" class=\"headerlink\" title=\"5. 改变数组的形状\"></a>5. 改变数组的形状</h1><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [[0 1]</span>\n<span class=\"token comment\">#  [2 3]</span>\n<span class=\"token comment\">#  [4 5]]</span>\nnp<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> newshape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> order<span class=\"token operator\">=</span><span class=\"token string\">'C'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 更多参数</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"6-添加维度\"><a href=\"#6-添加维度\" class=\"headerlink\" title=\"6. 添加维度\"></a>6. 添加维度</h1><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\na<span class=\"token punctuation\">.</span>shape <span class=\"token comment\"># 一维 (6, )</span>\na2 <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>np<span class=\"token punctuation\">.</span>newaxis<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\na2<span class=\"token punctuation\">.</span>shape <span class=\"token comment\"># 二维 (1, 6)</span>\ncol_vector <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>newaxis<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 插入列向量</span>\ncol_vector<span class=\"token punctuation\">.</span>shape <span class=\"token comment\"># 二维 (6, 1)</span>\n<span class=\"token comment\"># 在指定维度插入</span>\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>expand_dims<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nb<span class=\"token punctuation\">.</span>shape <span class=\"token comment\"># (6, 1)</span>\nc <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>expand_dims<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nc<span class=\"token punctuation\">.</span>shape <span class=\"token comment\"># (1, 6)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"7-索引和切片\"><a href=\"#7-索引和切片\" class=\"headerlink\" title=\"7. 索引和切片\"></a>7. 索引和切片</h1><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">data <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 正常索引方式 2</span>\ndata<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 正常切片 array([1, 2])</span>\ndata<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 正向到底 array([2, 3])</span>\ndata<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 反向到底 array([2, 3])</span>\n<span class=\"token comment\"># 条件过滤</span>\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\na<span class=\"token punctuation\">[</span>a <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 符合条件的内容 [1 2 3 4 5 6 7]</span>\nfive_up <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">>=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 条件表达式作为参数</span>\na<span class=\"token punctuation\">[</span>five_up<span class=\"token punctuation\">]</span> <span class=\"token comment\"># [5 6 7 8 9 10 11 12]</span>\nc <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">&lt;</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 可以使用与&amp;或| [3 4 5 6 7 8 9 10]</span>\nfive_up <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 条件本身会被计算成一个bool数组, 和原数组结构相同</span>\nfive_up\n<span class=\"token comment\"># [[False False False False]</span>\n<span class=\"token comment\">#  [ True  True  True  True]</span>\n<span class=\"token comment\">#  [ True  True  True True]]</span>\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>nonzero<span class=\"token punctuation\">(</span>a <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 根据查询条件, 返回符合条件的元素的索引</span>\n<span class=\"token comment\"># 返回的数组数是a的维数, 返回值是索引值, 返回长度是符合条件的个数</span>\n<span class=\"token comment\"># print(b) # (array([0, 0, 0, 0, 1], dtype=int64), array([0, 1, 2, 3, 0], dtype=int64))</span>\n<span class=\"token comment\"># 将上述内容压缩成坐标列表</span>\nlist_of_coordinates<span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># [[0, 0], [0, 1], [0, 2], [0, 3], [1, 0]]</span>\na<span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 也可以用索引直接获得元素 [1 2 3 4 5]</span>\n<span class=\"token comment\"># 结果为空</span>\nnot_there <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>nonzero<span class=\"token punctuation\">(</span>a <span class=\"token operator\">==</span> <span class=\"token number\">42</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># (array([], dtype=int64), array([], dtype=int64))</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"8-现有数据转数组\"><a href=\"#8-现有数据转数组\" class=\"headerlink\" title=\"8. 现有数据转数组\"></a>8. 现有数据转数组</h1><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">4</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">6</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">7</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\narr1 <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 通过切片创建新数组 array([4, 5, 6, 7, 8])</span>\na1 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\na2 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nnp<span class=\"token punctuation\">.</span>vstack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 垂直堆叠 [[1, 1], [2, 2], [3, 3], [4, 4]]</span>\nnp<span class=\"token punctuation\">.</span>hstack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 水平堆叠 [[1, 1], [3, 3], [2, 2], [4, 4]]</span>\nx <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 素材</span>\n<span class=\"token comment\"># array([[ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12],</span>\n<span class=\"token comment\">#       [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]])</span>\nnp<span class=\"token punctuation\">.</span>hsplit<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 拆成三个</span>\n<span class=\"token comment\"># [array([[ 1,  2,  3,  4],</span>\n<span class=\"token comment\">#        [13, 14, 15, 16]]), array([[ 5,  6,  7,  8],</span>\n<span class=\"token comment\">#        [17, 18, 19, 20]]), array([[ 9, 10, 11, 12],</span>\n<span class=\"token comment\">#        [21, 22, 23, 24]])]</span>\nnp<span class=\"token punctuation\">.</span>hsplit<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 按指定列号拆分</span>\n<span class=\"token comment\"># [array([[ 1,  2,  3],</span>\n<span class=\"token comment\">#        [13, 14, 15]]), array([[ 4],</span>\n<span class=\"token comment\">#        [16]]), array([[ 5,  6,  7,  8,  9, 10, 11, 12],</span>\n<span class=\"token comment\">#        [17, 18, 19, 20, 21, 22, 23, 24]])]</span>\n<span class=\"token comment\"># 视图是引用, 修改视图也会修改原数据</span>\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nb1 <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># array([1, 2, 3, 4])</span>\nb1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">99</span>\na\n<span class=\"token comment\"># array([[99,  2,  3,  4],</span>\n<span class=\"token comment\">#        [ 5,  6,  7,  8],</span>\n<span class=\"token comment\">#        [ 9, 10, 11, 12]])</span>\n<span class=\"token comment\"># copy是复制, 修改copy对原数据没影响</span>\nb2 <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"9-基础数组操作\"><a href=\"#9-基础数组操作\" class=\"headerlink\" title=\"9. 基础数组操作\"></a>9. 基础数组操作</h1><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token comment\"># 加减乘除</span>\ndata <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># [1 2]</span>\nones <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># [1 1]</span>\ndata <span class=\"token operator\">+</span> ones <span class=\"token comment\"># [2 3]</span>\n<span class=\"token comment\"># 求和</span>\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\na<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 10</span>\n<span class=\"token comment\"># 在所选维度求和</span>\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nb<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># [3, 3]</span>\nb<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># [2, 4]</span>\n<span class=\"token comment\"># 和常量的运算</span>\ndata <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ndata <span class=\"token operator\">*</span> <span class=\"token number\">1.6</span> <span class=\"token comment\"># [1.6 3.2]</span>\n<span class=\"token comment\"># 素材</span>\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.45053314</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.17296777</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.34376245</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5510652</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">[</span><span class=\"token number\">0.54627315</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.05093587</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.40067661</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.55645993</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">[</span><span class=\"token number\">0.12697628</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.82485143</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.26590556</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.56917101</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\na<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 求和 4.8595784</span>\na<span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 极小值 0.05093587</span>\na<span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 维度极小值 [0.12697628, 0.05093587, 0.26590556, 0.5510652 ]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"10-矩阵\"><a href=\"#10-矩阵\" class=\"headerlink\" title=\"10. 矩阵\"></a>10. 矩阵</h1><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">data <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># array([[1, 2],</span>\n<span class=\"token comment\">#        [3, 4],</span>\n<span class=\"token comment\">#        [5, 6]])</span>\ndata<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 正常索引 2</span>\ndata<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 正常切片 array([[3, 4], [5, 6]])</span>\ndata<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 0:2是切片, 0是索引, 切片和索引混用 array([1, 3])</span>\ndata<span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 6</span>\ndata<span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 1</span>\ndata<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 21</span>\n<span class=\"token comment\"># 也可以指定维度</span>\ndata <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># array([5, 6])</span>\ndata<span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># array([2, 5, 6])</span>\n<span class=\"token comment\"># 矩阵之间的运算（需要矩阵尺寸相同）</span>\ndata <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nones <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ndata <span class=\"token operator\">+</span> ones <span class=\"token comment\"># array([[2, 3], [4, 5]])</span>\n<span class=\"token comment\"># 如果某个矩阵只有一行或者一列, 也可使用广播规则运算</span>\ndata <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nones_row <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ndata <span class=\"token operator\">+</span> ones_row\n<span class=\"token comment\"># array([[2, 3],</span>\n<span class=\"token comment\">#        [4, 5],</span>\n<span class=\"token comment\">#        [6, 7]])</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"11-生成随机数\"><a href=\"#11-生成随机数\" class=\"headerlink\" title=\"11. 生成随机数\"></a>11. 生成随机数</h1><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">rng <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>default_rng<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nrng<span class=\"token punctuation\">.</span>integers<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> size<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 两行四列, 随机整数, 小于5</span>\nrng<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 三行两列 0-1之间 float</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"12-去重和计数\"><a href=\"#12-去重和计数\" class=\"headerlink\" title=\"12. 去重和计数\"></a>12. 去重和计数</h1><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nunique_values <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>unique<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 去重 [11 12 13 14 15 16 17 18 19 20]</span>\nunique_values<span class=\"token punctuation\">,</span> indices_list <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>unique<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> return_index<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 序号 [ 0  2  3  4  5  6  7 12 13 14]</span>\nunique_values<span class=\"token punctuation\">,</span> occurrence_count <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>unique<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> return_counts<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 数量 [3 2 2 2 1 1 1 1 1 1]</span>\n<span class=\"token comment\"># 对多维数组也可用</span>\na_2d <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nunique_values <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>unique<span class=\"token punctuation\">(</span>a_2d<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 去重 [ 1  2  3  4  5  6  7  8  9 10 11 12]</span>\nunique_rows <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>unique<span class=\"token punctuation\">(</span>a_2d<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 获得去重的行</span>\n<span class=\"token comment\"># [[ 1  2  3  4]</span>\n<span class=\"token comment\">#  [ 5  6  7  8]</span>\n<span class=\"token comment\">#  [ 9 10 11 12]]</span>\nunique_rows<span class=\"token punctuation\">,</span> indices<span class=\"token punctuation\">,</span> occurrence_count <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>unique<span class=\"token punctuation\">(</span>a_2d<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> return_counts<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> return_index<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\nindices <span class=\"token comment\"># 所得行的序号 [0 1 2]</span>\noccurrence_count <span class=\"token comment\"># 所得行的数量 [2 1 1]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"13-矩阵转置和变形\"><a href=\"#13-矩阵转置和变形\" class=\"headerlink\" title=\"13. 矩阵转置和变形\"></a>13. 矩阵转置和变形</h1><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">data <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 变形</span>\ndata<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># array([[1, 2, 3],</span>\n<span class=\"token comment\">#        [4, 5, 6]])</span>\ndata<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># array([[1, 2],</span>\n<span class=\"token comment\">#        [3, 4],</span>\n<span class=\"token comment\">#        [5, 6]])</span>\n<span class=\"token comment\"># 转置</span>\ndata <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 先准备一个 23 矩阵</span>\n<span class=\"token comment\"># array([[1, 2, 3],</span>\n<span class=\"token comment\">#        [4, 5, 6]])</span>\ndata<span class=\"token punctuation\">.</span>transpose<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 转置</span>\n<span class=\"token comment\"># [[1 4]</span>\n<span class=\"token comment\">#  [2 5]</span>\n<span class=\"token comment\">#  [3 6]]</span>\n<span class=\"token comment\"># 也可以直接用T</span>\ndata<span class=\"token punctuation\">.</span>T\n<span class=\"token comment\"># [[1 4]</span>\n<span class=\"token comment\">#  [2 5]</span>\n<span class=\"token comment\">#  [3 6]]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"14-数组逆序\"><a href=\"#14-数组逆序\" class=\"headerlink\" title=\"14. 数组逆序\"></a>14. 数组逆序</h1><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">arr <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nreversed_arr <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>flip<span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token comment\"># [8 7 6 5 4 3 2 1]</span>\n<span class=\"token comment\"># 二维数组逆序</span>\narr_2d <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nreversed_arr <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>flip<span class=\"token punctuation\">(</span>arr_2d<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [[12 11 10  9]</span>\n<span class=\"token comment\">#  [ 8  7  6  5]</span>\n<span class=\"token comment\">#  [ 4  3  2  1]]</span>\n<span class=\"token comment\"># 针对的维度逆序</span>\nreversed_arr_rows <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>flip<span class=\"token punctuation\">(</span>arr_2d<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [[ 9 10 11 12]</span>\n<span class=\"token comment\">#  [ 5  6  7  8]</span>\n<span class=\"token comment\">#  [ 1  2  3  4]]</span>\n<span class=\"token comment\"># 对切片逆序并赋值</span>\narr_2d<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>flip<span class=\"token punctuation\">(</span>arr_2d<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [[ 1 10  3  4]</span>\n<span class=\"token comment\">#  [ 8  7  6  5]</span>\n<span class=\"token comment\">#  [ 9  2 11 12]]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"15-多维数组展开\"><a href=\"#15-多维数组展开\" class=\"headerlink\" title=\"15. 多维数组展开\"></a>15. 多维数组展开</h1><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nx<span class=\"token punctuation\">.</span>flatten<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 拷贝展开 array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12])</span>\na2 <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>ravel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 引用展开 array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12])</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"16-内置文档\"><a href=\"#16-内置文档\" class=\"headerlink\" title=\"16. 内置文档\"></a>16. 内置文档</h1><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token comment\"># help(max) 输出说明</span>\n<span class=\"token comment\"># max? 同名所有函数说明</span>\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># a? 变量说明</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"17-实现数学公式\"><a href=\"#17-实现数学公式\" class=\"headerlink\" title=\"17. 实现数学公式\"></a>17. 实现数学公式</h1><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">predictions <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nlabels <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 例如均方误差公式</span>\nerror <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>square<span class=\"token punctuation\">(</span>predictions <span class=\"token operator\">-</span> labels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"18-np对象导入导出\"><a href=\"#18-np对象导入导出\" class=\"headerlink\" title=\"18. np对象导入导出\"></a>18. np对象导入导出</h1><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># np.save('filename', a) 存成文件</span>\n<span class=\"token comment\"># b = np.load('filename.npy') 从文件读取</span>\n<span class=\"token comment\"># 使用csv格式</span>\n<span class=\"token comment\"># np.savetxt('new_file.csv', a)</span>\n<span class=\"token comment\"># np.loadtxt('new_file.csv')</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"19-使用-Pandas-库进行csv导入导出操作\"><a href=\"#19-使用-Pandas-库进行csv导入导出操作\" class=\"headerlink\" title=\"19. 使用 Pandas 库进行csv导入导出操作\"></a>19. 使用 Pandas 库进行csv导入导出操作</h1><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\n<span class=\"token comment\"># # If all of your columns are the same type:</span>\n<span class=\"token comment\"># x = pd.read_csv('music.csv', header=0).values</span>\n<span class=\"token comment\"># print(x)</span>\n<span class=\"token comment\"># [['Billie Holiday' 'Jazz' 1300000 27000000]</span>\n<span class=\"token comment\">#  ['Jimmie Hendrix' 'Rock' 2700000 70000000]</span>\n<span class=\"token comment\">#  ['Miles Davis' 'Jazz' 1500000 48000000]</span>\n<span class=\"token comment\">#  ['SIA' 'Pop' 2000000 74000000]]</span>\n\n<span class=\"token comment\"># # You can also simply select the columns you need:</span>\n<span class=\"token comment\"># x = pd.read_csv('music.csv', usecols=['Artist', 'Plays']).values</span>\n<span class=\"token comment\"># print(x)</span>\n<span class=\"token comment\"># [['Billie Holiday' 27000000]</span>\n<span class=\"token comment\">#  ['Jimmie Hendrix' 70000000]</span>\n<span class=\"token comment\">#  ['Miles Davis' 48000000]</span>\n<span class=\"token comment\">#  ['SIA' 74000000]]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"20-使用-Matplotlib-绘制数据图像\"><a href=\"#20-使用-Matplotlib-绘制数据图像\" class=\"headerlink\" title=\"20. 使用 Matplotlib 绘制数据图像\"></a>20. 使用 Matplotlib 绘制数据图像</h1><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\n<span class=\"token comment\"># 显示数组</span>\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 两种数据</span>\nx <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>linspace<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\ny <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>linspace<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token string\">'purple'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># line</span>\nplt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token string\">'o'</span><span class=\"token punctuation\">)</span>      <span class=\"token comment\"># dots</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 高级使用</span>\nfig <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nax <span class=\"token operator\">=</span> fig<span class=\"token punctuation\">.</span>add_subplot<span class=\"token punctuation\">(</span>projection<span class=\"token operator\">=</span><span class=\"token string\">'3d'</span><span class=\"token punctuation\">)</span>\nX <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.15</span><span class=\"token punctuation\">)</span>\nY <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.15</span><span class=\"token punctuation\">)</span>\nX<span class=\"token punctuation\">,</span> Y <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>meshgrid<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> Y<span class=\"token punctuation\">)</span>\nR <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span>X<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> Y<span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\nZ <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>sin<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span>\n\nax<span class=\"token punctuation\">.</span>plot_surface<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> Y<span class=\"token punctuation\">,</span> Z<span class=\"token punctuation\">,</span> rstride<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> cstride<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> cmap<span class=\"token operator\">=</span><span class=\"token string\">'viridis'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n","site":{"data":{}},"excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>网站 <a href=\"https://numpy.org/\">https://numpy.org/</a></p>\n<p>NumPy（Numerical Python）是Python中数字处理的事实标准，也是学习其他数据知识的必备工具。</p>\n<p>本文是学习Numpy过程中的笔记，所有内容都来自官方文档：<a href=\"https://numpy.org/doc/stable/user/absolute_beginners.html\">https://numpy.org/doc/stable/user/absolute_beginners.html</a></p>","more":"<h1 id=\"1-普通数组和np数组的区别\"><a href=\"#1-普通数组和np数组的区别\" class=\"headerlink\" title=\"1. 普通数组和np数组的区别\"></a>1. 普通数组和np数组的区别</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n<span class=\"token comment\"># 普通数组</span>\na <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># np数组</span>\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"2-创建np数组的方法\"><a href=\"#2-创建np数组的方法\" class=\"headerlink\" title=\"2. 创建np数组的方法\"></a>2. 创建np数组的方法</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 全0填充</span>\nnp<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 全1填充</span>\nnp<span class=\"token punctuation\">.</span>empty<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 空数组</span>\nnp<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># [0, 1, 2, 3]</span>\nnp<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># [2, 4, 6, 8]</span>\nnp<span class=\"token punctuation\">.</span>linspace<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> num<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># [0, 2.5, 5, 7.5, 10]</span>\n<span class=\"token comment\"># 可以自己决定数据类型</span>\nnp<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>int64<span class=\"token punctuation\">)</span> <span class=\"token comment\"># [1, 1]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"3-排序和拼接\"><a href=\"#3-排序和拼接\" class=\"headerlink\" title=\"3. 排序和拼接\"></a>3. 排序和拼接</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">arr <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nnp<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 排序</span>\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nnp<span class=\"token punctuation\">.</span>concatenate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 拼接</span>\nx <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ny <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nnp<span class=\"token punctuation\">.</span>concatenate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 拼接</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"4-形状和大小\"><a href=\"#4-形状和大小\" class=\"headerlink\" title=\"4. 形状和大小\"></a>4. 形状和大小</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">array_example <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span> <span class=\"token punctuation\">,</span><span class=\"token number\">1</span> <span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\narray_example<span class=\"token punctuation\">.</span>ndim <span class=\"token comment\"># 维度 3</span>\narray_example<span class=\"token punctuation\">.</span>size <span class=\"token comment\"># 大小 24</span>\narray_example<span class=\"token punctuation\">.</span>shape <span class=\"token comment\"># 形状 (3, 2, 4)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"5-改变数组的形状\"><a href=\"#5-改变数组的形状\" class=\"headerlink\" title=\"5. 改变数组的形状\"></a>5. 改变数组的形状</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [[0 1]</span>\n<span class=\"token comment\">#  [2 3]</span>\n<span class=\"token comment\">#  [4 5]]</span>\nnp<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> newshape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> order<span class=\"token operator\">=</span><span class=\"token string\">'C'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 更多参数</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"6-添加维度\"><a href=\"#6-添加维度\" class=\"headerlink\" title=\"6. 添加维度\"></a>6. 添加维度</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\na<span class=\"token punctuation\">.</span>shape <span class=\"token comment\"># 一维 (6, )</span>\na2 <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>np<span class=\"token punctuation\">.</span>newaxis<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\na2<span class=\"token punctuation\">.</span>shape <span class=\"token comment\"># 二维 (1, 6)</span>\ncol_vector <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>newaxis<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 插入列向量</span>\ncol_vector<span class=\"token punctuation\">.</span>shape <span class=\"token comment\"># 二维 (6, 1)</span>\n<span class=\"token comment\"># 在指定维度插入</span>\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>expand_dims<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\nb<span class=\"token punctuation\">.</span>shape <span class=\"token comment\"># (6, 1)</span>\nc <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>expand_dims<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nc<span class=\"token punctuation\">.</span>shape <span class=\"token comment\"># (1, 6)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"7-索引和切片\"><a href=\"#7-索引和切片\" class=\"headerlink\" title=\"7. 索引和切片\"></a>7. 索引和切片</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">data <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 正常索引方式 2</span>\ndata<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 正常切片 array([1, 2])</span>\ndata<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 正向到底 array([2, 3])</span>\ndata<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 反向到底 array([2, 3])</span>\n<span class=\"token comment\"># 条件过滤</span>\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\na<span class=\"token punctuation\">[</span>a <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 符合条件的内容 [1 2 3 4 5 6 7]</span>\nfive_up <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">>=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 条件表达式作为参数</span>\na<span class=\"token punctuation\">[</span>five_up<span class=\"token punctuation\">]</span> <span class=\"token comment\"># [5 6 7 8 9 10 11 12]</span>\nc <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">&lt;</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 可以使用与&amp;或| [3 4 5 6 7 8 9 10]</span>\nfive_up <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 条件本身会被计算成一个bool数组, 和原数组结构相同</span>\nfive_up\n<span class=\"token comment\"># [[False False False False]</span>\n<span class=\"token comment\">#  [ True  True  True  True]</span>\n<span class=\"token comment\">#  [ True  True  True True]]</span>\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>nonzero<span class=\"token punctuation\">(</span>a <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 根据查询条件, 返回符合条件的元素的索引</span>\n<span class=\"token comment\"># 返回的数组数是a的维数, 返回值是索引值, 返回长度是符合条件的个数</span>\n<span class=\"token comment\"># print(b) # (array([0, 0, 0, 0, 1], dtype=int64), array([0, 1, 2, 3, 0], dtype=int64))</span>\n<span class=\"token comment\"># 将上述内容压缩成坐标列表</span>\nlist_of_coordinates<span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># [[0, 0], [0, 1], [0, 2], [0, 3], [1, 0]]</span>\na<span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">]</span> <span class=\"token comment\"># 也可以用索引直接获得元素 [1 2 3 4 5]</span>\n<span class=\"token comment\"># 结果为空</span>\nnot_there <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>nonzero<span class=\"token punctuation\">(</span>a <span class=\"token operator\">==</span> <span class=\"token number\">42</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># (array([], dtype=int64), array([], dtype=int64))</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"8-现有数据转数组\"><a href=\"#8-现有数据转数组\" class=\"headerlink\" title=\"8. 现有数据转数组\"></a>8. 现有数据转数组</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">4</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">6</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">7</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\narr1 <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 通过切片创建新数组 array([4, 5, 6, 7, 8])</span>\na1 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\na2 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nnp<span class=\"token punctuation\">.</span>vstack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 垂直堆叠 [[1, 1], [2, 2], [3, 3], [4, 4]]</span>\nnp<span class=\"token punctuation\">.</span>hstack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">,</span> a2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 水平堆叠 [[1, 1], [3, 3], [2, 2], [4, 4]]</span>\nx <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 素材</span>\n<span class=\"token comment\"># array([[ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12],</span>\n<span class=\"token comment\">#       [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]])</span>\nnp<span class=\"token punctuation\">.</span>hsplit<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 拆成三个</span>\n<span class=\"token comment\"># [array([[ 1,  2,  3,  4],</span>\n<span class=\"token comment\">#        [13, 14, 15, 16]]), array([[ 5,  6,  7,  8],</span>\n<span class=\"token comment\">#        [17, 18, 19, 20]]), array([[ 9, 10, 11, 12],</span>\n<span class=\"token comment\">#        [21, 22, 23, 24]])]</span>\nnp<span class=\"token punctuation\">.</span>hsplit<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 按指定列号拆分</span>\n<span class=\"token comment\"># [array([[ 1,  2,  3],</span>\n<span class=\"token comment\">#        [13, 14, 15]]), array([[ 4],</span>\n<span class=\"token comment\">#        [16]]), array([[ 5,  6,  7,  8,  9, 10, 11, 12],</span>\n<span class=\"token comment\">#        [17, 18, 19, 20, 21, 22, 23, 24]])]</span>\n<span class=\"token comment\"># 视图是引用, 修改视图也会修改原数据</span>\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nb1 <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># array([1, 2, 3, 4])</span>\nb1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">99</span>\na\n<span class=\"token comment\"># array([[99,  2,  3,  4],</span>\n<span class=\"token comment\">#        [ 5,  6,  7,  8],</span>\n<span class=\"token comment\">#        [ 9, 10, 11, 12]])</span>\n<span class=\"token comment\"># copy是复制, 修改copy对原数据没影响</span>\nb2 <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"9-基础数组操作\"><a href=\"#9-基础数组操作\" class=\"headerlink\" title=\"9. 基础数组操作\"></a>9. 基础数组操作</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token comment\"># 加减乘除</span>\ndata <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># [1 2]</span>\nones <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># [1 1]</span>\ndata <span class=\"token operator\">+</span> ones <span class=\"token comment\"># [2 3]</span>\n<span class=\"token comment\"># 求和</span>\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\na<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 10</span>\n<span class=\"token comment\"># 在所选维度求和</span>\nb <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nb<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># [3, 3]</span>\nb<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># [2, 4]</span>\n<span class=\"token comment\"># 和常量的运算</span>\ndata <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ndata <span class=\"token operator\">*</span> <span class=\"token number\">1.6</span> <span class=\"token comment\"># [1.6 3.2]</span>\n<span class=\"token comment\"># 素材</span>\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0.45053314</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.17296777</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.34376245</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5510652</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">[</span><span class=\"token number\">0.54627315</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.05093587</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.40067661</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.55645993</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">[</span><span class=\"token number\">0.12697628</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.82485143</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.26590556</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.56917101</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\na<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 求和 4.8595784</span>\na<span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 极小值 0.05093587</span>\na<span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 维度极小值 [0.12697628, 0.05093587, 0.26590556, 0.5510652 ]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"10-矩阵\"><a href=\"#10-矩阵\" class=\"headerlink\" title=\"10. 矩阵\"></a>10. 矩阵</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">data <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># array([[1, 2],</span>\n<span class=\"token comment\">#        [3, 4],</span>\n<span class=\"token comment\">#        [5, 6]])</span>\ndata<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 正常索引 2</span>\ndata<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 正常切片 array([[3, 4], [5, 6]])</span>\ndata<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 0:2是切片, 0是索引, 切片和索引混用 array([1, 3])</span>\ndata<span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 6</span>\ndata<span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 1</span>\ndata<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 21</span>\n<span class=\"token comment\"># 也可以指定维度</span>\ndata <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># array([5, 6])</span>\ndata<span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># array([2, 5, 6])</span>\n<span class=\"token comment\"># 矩阵之间的运算（需要矩阵尺寸相同）</span>\ndata <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nones <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ndata <span class=\"token operator\">+</span> ones <span class=\"token comment\"># array([[2, 3], [4, 5]])</span>\n<span class=\"token comment\"># 如果某个矩阵只有一行或者一列, 也可使用广播规则运算</span>\ndata <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nones_row <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ndata <span class=\"token operator\">+</span> ones_row\n<span class=\"token comment\"># array([[2, 3],</span>\n<span class=\"token comment\">#        [4, 5],</span>\n<span class=\"token comment\">#        [6, 7]])</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"11-生成随机数\"><a href=\"#11-生成随机数\" class=\"headerlink\" title=\"11. 生成随机数\"></a>11. 生成随机数</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">rng <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>default_rng<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nrng<span class=\"token punctuation\">.</span>integers<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> size<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 两行四列, 随机整数, 小于5</span>\nrng<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 三行两列 0-1之间 float</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"12-去重和计数\"><a href=\"#12-去重和计数\" class=\"headerlink\" title=\"12. 去重和计数\"></a>12. 去重和计数</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nunique_values <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>unique<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 去重 [11 12 13 14 15 16 17 18 19 20]</span>\nunique_values<span class=\"token punctuation\">,</span> indices_list <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>unique<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> return_index<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 序号 [ 0  2  3  4  5  6  7 12 13 14]</span>\nunique_values<span class=\"token punctuation\">,</span> occurrence_count <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>unique<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> return_counts<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 数量 [3 2 2 2 1 1 1 1 1 1]</span>\n<span class=\"token comment\"># 对多维数组也可用</span>\na_2d <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nunique_values <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>unique<span class=\"token punctuation\">(</span>a_2d<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 去重 [ 1  2  3  4  5  6  7  8  9 10 11 12]</span>\nunique_rows <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>unique<span class=\"token punctuation\">(</span>a_2d<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 获得去重的行</span>\n<span class=\"token comment\"># [[ 1  2  3  4]</span>\n<span class=\"token comment\">#  [ 5  6  7  8]</span>\n<span class=\"token comment\">#  [ 9 10 11 12]]</span>\nunique_rows<span class=\"token punctuation\">,</span> indices<span class=\"token punctuation\">,</span> occurrence_count <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>unique<span class=\"token punctuation\">(</span>a_2d<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> return_counts<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> return_index<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\nindices <span class=\"token comment\"># 所得行的序号 [0 1 2]</span>\noccurrence_count <span class=\"token comment\"># 所得行的数量 [2 1 1]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"13-矩阵转置和变形\"><a href=\"#13-矩阵转置和变形\" class=\"headerlink\" title=\"13. 矩阵转置和变形\"></a>13. 矩阵转置和变形</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">data <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 变形</span>\ndata<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># array([[1, 2, 3],</span>\n<span class=\"token comment\">#        [4, 5, 6]])</span>\ndata<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># array([[1, 2],</span>\n<span class=\"token comment\">#        [3, 4],</span>\n<span class=\"token comment\">#        [5, 6]])</span>\n<span class=\"token comment\"># 转置</span>\ndata <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 先准备一个 23 矩阵</span>\n<span class=\"token comment\"># array([[1, 2, 3],</span>\n<span class=\"token comment\">#        [4, 5, 6]])</span>\ndata<span class=\"token punctuation\">.</span>transpose<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 转置</span>\n<span class=\"token comment\"># [[1 4]</span>\n<span class=\"token comment\">#  [2 5]</span>\n<span class=\"token comment\">#  [3 6]]</span>\n<span class=\"token comment\"># 也可以直接用T</span>\ndata<span class=\"token punctuation\">.</span>T\n<span class=\"token comment\"># [[1 4]</span>\n<span class=\"token comment\">#  [2 5]</span>\n<span class=\"token comment\">#  [3 6]]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"14-数组逆序\"><a href=\"#14-数组逆序\" class=\"headerlink\" title=\"14. 数组逆序\"></a>14. 数组逆序</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">arr <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nreversed_arr <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>flip<span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span> <span class=\"token comment\"># [8 7 6 5 4 3 2 1]</span>\n<span class=\"token comment\"># 二维数组逆序</span>\narr_2d <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nreversed_arr <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>flip<span class=\"token punctuation\">(</span>arr_2d<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [[12 11 10  9]</span>\n<span class=\"token comment\">#  [ 8  7  6  5]</span>\n<span class=\"token comment\">#  [ 4  3  2  1]]</span>\n<span class=\"token comment\"># 针对的维度逆序</span>\nreversed_arr_rows <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>flip<span class=\"token punctuation\">(</span>arr_2d<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [[ 9 10 11 12]</span>\n<span class=\"token comment\">#  [ 5  6  7  8]</span>\n<span class=\"token comment\">#  [ 1  2  3  4]]</span>\n<span class=\"token comment\"># 对切片逆序并赋值</span>\narr_2d<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>flip<span class=\"token punctuation\">(</span>arr_2d<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># [[ 1 10  3  4]</span>\n<span class=\"token comment\">#  [ 8  7  6  5]</span>\n<span class=\"token comment\">#  [ 9  2 11 12]]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"15-多维数组展开\"><a href=\"#15-多维数组展开\" class=\"headerlink\" title=\"15. 多维数组展开\"></a>15. 多维数组展开</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nx<span class=\"token punctuation\">.</span>flatten<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 拷贝展开 array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12])</span>\na2 <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>ravel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 引用展开 array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12])</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"16-内置文档\"><a href=\"#16-内置文档\" class=\"headerlink\" title=\"16. 内置文档\"></a>16. 内置文档</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token comment\"># help(max) 输出说明</span>\n<span class=\"token comment\"># max? 同名所有函数说明</span>\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># a? 变量说明</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"17-实现数学公式\"><a href=\"#17-实现数学公式\" class=\"headerlink\" title=\"17. 实现数学公式\"></a>17. 实现数学公式</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">predictions <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nlabels <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 例如均方误差公式</span>\nerror <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>square<span class=\"token punctuation\">(</span>predictions <span class=\"token operator\">-</span> labels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"18-np对象导入导出\"><a href=\"#18-np对象导入导出\" class=\"headerlink\" title=\"18. np对象导入导出\"></a>18. np对象导入导出</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\">a <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># np.save('filename', a) 存成文件</span>\n<span class=\"token comment\"># b = np.load('filename.npy') 从文件读取</span>\n<span class=\"token comment\"># 使用csv格式</span>\n<span class=\"token comment\"># np.savetxt('new_file.csv', a)</span>\n<span class=\"token comment\"># np.loadtxt('new_file.csv')</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"19-使用-Pandas-库进行csv导入导出操作\"><a href=\"#19-使用-Pandas-库进行csv导入导出操作\" class=\"headerlink\" title=\"19. 使用 Pandas 库进行csv导入导出操作\"></a>19. 使用 Pandas 库进行csv导入导出操作</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\n<span class=\"token comment\"># # If all of your columns are the same type:</span>\n<span class=\"token comment\"># x = pd.read_csv('music.csv', header=0).values</span>\n<span class=\"token comment\"># print(x)</span>\n<span class=\"token comment\"># [['Billie Holiday' 'Jazz' 1300000 27000000]</span>\n<span class=\"token comment\">#  ['Jimmie Hendrix' 'Rock' 2700000 70000000]</span>\n<span class=\"token comment\">#  ['Miles Davis' 'Jazz' 1500000 48000000]</span>\n<span class=\"token comment\">#  ['SIA' 'Pop' 2000000 74000000]]</span>\n\n<span class=\"token comment\"># # You can also simply select the columns you need:</span>\n<span class=\"token comment\"># x = pd.read_csv('music.csv', usecols=['Artist', 'Plays']).values</span>\n<span class=\"token comment\"># print(x)</span>\n<span class=\"token comment\"># [['Billie Holiday' 27000000]</span>\n<span class=\"token comment\">#  ['Jimmie Hendrix' 70000000]</span>\n<span class=\"token comment\">#  ['Miles Davis' 48000000]</span>\n<span class=\"token comment\">#  ['SIA' 74000000]]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"20-使用-Matplotlib-绘制数据图像\"><a href=\"#20-使用-Matplotlib-绘制数据图像\" class=\"headerlink\" title=\"20. 使用 Matplotlib 绘制数据图像\"></a>20. 使用 Matplotlib 绘制数据图像</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\n<span class=\"token comment\"># 显示数组</span>\na <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 两种数据</span>\nx <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>linspace<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\ny <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>linspace<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token string\">'purple'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># line</span>\nplt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token string\">'o'</span><span class=\"token punctuation\">)</span>      <span class=\"token comment\"># dots</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 高级使用</span>\nfig <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nax <span class=\"token operator\">=</span> fig<span class=\"token punctuation\">.</span>add_subplot<span class=\"token punctuation\">(</span>projection<span class=\"token operator\">=</span><span class=\"token string\">'3d'</span><span class=\"token punctuation\">)</span>\nX <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.15</span><span class=\"token punctuation\">)</span>\nY <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.15</span><span class=\"token punctuation\">)</span>\nX<span class=\"token punctuation\">,</span> Y <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>meshgrid<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> Y<span class=\"token punctuation\">)</span>\nR <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span>X<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> Y<span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\nZ <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>sin<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span>\n\nax<span class=\"token punctuation\">.</span>plot_surface<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> Y<span class=\"token punctuation\">,</span> Z<span class=\"token punctuation\">,</span> rstride<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> cstride<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> cmap<span class=\"token operator\">=</span><span class=\"token string\">'viridis'</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"title":"Matplotlib入门笔记","date":"2023-11-29T07:40:57.000Z","_content":"\n# 前言\n\n网站 https://matplotlib.org/stable/\n\nMatplotlib 是一个用于创建静态、动画和交互式可视化的综合库。\n\n本文是学习 Matplotlib 过程中的笔记，所有内容都来自官方文档：https://matplotlib.org/stable/users/explain/quick_start.html\n\n<!-- more -->\n\n# 1. 入门示例\n\n```python python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nimport matplotlib as mpl\n\ndef e1():\n  x = np.linspace(0, 2 * np.pi, 200)\n  y = np.sin(x)\n\n  fig, ax = plt.subplots()\n  ax.plot(x, y)\n  plt.show()\n\ne1()\n```\n\n# 2. 窗口、图像和绘制\n\n```python python\ndef e2():\n  # 创建一个只有一个 axes 的 figure\n  fig, ax = plt.subplots()\n  # 在 axes 上 plot 一些数据\n  ax.plot([1, 2, 3, 4], [1, 4, 2, 3])\n  plt.show()\n\ne2()\n```\n\n# 3. figure 的构成部分\n\n```python python\n# figure 是一个绘图窗口\n# axes 是一副数据图像\n# axis 是坐标轴\ndef e3():\n  # 一个没有 axes 的 figure\n  fig = plt.figure()\n  # 只有一个 axes 的图像\n  fig, ax = plt.subplots()\n  # 2 * 2 布局的图像\n  fig, axs = plt.subplots(2, 2)\n  # 左一右二布局\n  fig, axs = plt.subplot_mosaic([['left', 'right_top'], ['left', 'right_bottom']])\n  plt.show()\n\ne3()\n```\n\n# 4. 输入数据类型\n\n```python python\ndef e4():\n  # plot 接受 np.array np.ma.masked_array np.asarray 三种类型的输入\n  # 如果不是此类数据，需要先进行处理\n  b = np.matrix([[1, 2], [3, 4]])\n  b_asarray = np.asarray(b)\n  # 对于一些已经准备好的对象(字典)数据, 也可以用下面的方式输入\n  np.random.seed(19680801)  # seed the random number generator.\n  # a 是 0-50 的整数 用于每个数据的 x 坐标\n  # b 是 50个随机数 用于每个数据的 y 坐标 (50个0-1的随机数 * 10 再加 x坐标)\n  # c 随机颜色 50个50以下的整数\n  # d 是随机尺寸\n  data = {'a': np.arange(50),\n          'c': np.random.randint(0, 50, 50),\n          'd': np.random.randn(50)}\n  data['b'] = data['a'] + 10 * np.random.randn(50)\n  data['d'] = np.abs(data['d']) * 100\n\n  fig, ax = plt.subplots(figsize=(5, 2.7), layout='constrained')\n  # 离散数据 使用字典中的内容赋值\n  ax.scatter('a', 'b', c='c', s='d', data=data)\n  ax.set_xlabel('entry a')\n  ax.set_ylabel('entry b')\n  plt.show()\n\ne4()\n```\n\n# 5. 接口风格\n\n```python python\n# mplib提供了两种接口风格 一是显示的获取各层对象并调用 二是直接使用plt搞定一切\n# 显示风格的例子\ndef e5_1():\n  x = np.linspace(0, 2, 100)  # 示意数据\n  # 获得 figure 和 axes\n  fig, ax = plt.subplots(figsize=(5, 2.7), layout='constrained')\n  # 一次二次和三次函数\n  ax.plot(x, x, label='linear')\n  ax.plot(x, x**2, label='quadratic')\n  ax.plot(x, x**3, label='cubic')\n  # 指定xy的label\n  ax.set_xlabel('x label')\n  ax.set_ylabel('y label')\n  # axes 的title\n  ax.set_title(\"Simple Plot\")\n  # 添加一个图例 用来显示各plot的label\n  ax.legend()\n  plt.show()\n\n# 隐式风格的例子 效果和显示风格完全相同\ndef e5_2():\n  x = np.linspace(0, 2, 100)\n  plt.figure(figsize=(5, 2.7), layout='constrained')\n  plt.plot(x, x, label='linear')\n  plt.plot(x, x**2, label='quadratic')\n  plt.plot(x, x**3, label='cubic')\n  plt.xlabel('x label')\n  plt.ylabel('y label')\n  plt.title(\"Simple Plot\")\n  plt.legend()\n  plt.show()\n\ne5_1()\ne5_2()\n```\n\n# 6. 制作辅助函数\n\n```python python\n# 制作工具函数, 避免代码重复\ndef e6_plotter(ax, data1, data2, param_dict):\n    \"\"\"\n    A helper function to make a graph.\n    \"\"\"\n    out = ax.plot(data1, data2, **param_dict)\n    return out\n\ndef e6():\n  data1, data2, data3, data4 = np.random.randn(4, 100)  # make 4 random data sets\n  fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(5, 2.7))\n  e6_plotter(ax1, data1, data2, {'marker': 'x'})\n  e6_plotter(ax2, data3, data4, {'marker': 'o'})\n  plt.show()\n\ne6()\n```\n\n# 7. 样式\n\n```python python\ndef e7():\n  data1, data2 = np.random.randn(2, 100)\n  fig, ax = plt.subplots(figsize=(5, 2.7))\n  x = np.arange(len(data1))\n  # plot 直接跟样式参数\n  ax.plot(x, np.cumsum(data1), color='blue', linewidth=3, linestyle='--')\n  l, = ax.plot(x, np.cumsum(data2), color='orange', linewidth=2)\n  # plot 后对返回内容进行样式赋值\n  l.set_linestyle(':')\n  plt.show()\n\ne7()\n```\n\n# 8. 标记\n\n## 基础标记\n\n```python python\ndef e8_1():\n  mu, sigma = 115, 15\n  # x 是一万个值的列表 randn 会给出一组正态分布的随机数结果\n  x = mu + sigma * np.random.randn(10000)\n  fig, ax = plt.subplots(figsize=(5, 2.7), layout='constrained')\n  # the histogram of the data\n  # 直方图参数: x-数据内容 50-柱数量 density-返回概率密度 \n  n, bins, patches = ax.hist(x, 50, density=True, facecolor='C0', alpha=0.75)\n\n  # 轴和图的标题\n  ax.set_xlabel('Length [cm]')\n  ax.set_ylabel('Probability')\n  ax.set_title('Aardvark lengths\\n (not really)')\n  # 文本 (使用了数学符号)\n  ax.text(75, .025, r'$\\mu=115,\\ \\sigma=15$')\n  # 轴定义\n  ax.axis([55, 175, 0, 0.03])\n  # 网线\n  ax.grid(True)\n  plt.show()\n\ne8_1()\n```\n\n## 标记图上的点\n\n```python python\ndef e8_2():\n  fig, ax = plt.subplots(figsize=(5, 2.7))\n\n  t = np.arange(0.0, 5.0, 0.01)\n  s = np.cos(2 * np.pi * t)\n  line, = ax.plot(t, s, lw=2)\n  # 使用点位、文本位、箭头设置来标记点\n  ax.annotate('local max', xy=(2, 1), xytext=(3, 1.5),\n            arrowprops=dict(facecolor='black', shrink=0.05))\n  # y轴limit\n  ax.set_ylim(-2, 2)\n  plt.show()\n\ne8_2()\n```\n\n## 添加 Legend用以区分数据\n\n```python python\ndef e8_3():\n  data1, data2, data3 = np.random.randn(3, 100)\n  fig, ax = plt.subplots(figsize=(5, 2.7))\n  ax.plot(np.arange(len(data1)), data1, label='data1')\n  ax.plot(np.arange(len(data2)), data2, label='data2')\n  ax.plot(np.arange(len(data3)), data3, 'd', label='data3')\n  ax.legend()\n  plt.show()\n\ne8_3()\n```\n\n# 9. 轴的比例和刻度\n\n## 轴的比例定义\n\n```python python\ndef e9_1():\n  # 100 个随机数\n  data1 = np.random.randn(100)\n  # 两个 axes\n  fig, axs = plt.subplots(1, 2, figsize=(5, 2.7), layout='constrained')\n  # x轴为随机数的数量\n  xdata = np.arange(len(data1))\n  # y数据为 10 ** data1\n  data = 10**data1\n  # axes 使用折线图\n  axs[0].plot(xdata, data)\n  # axes 使用对数坐标 图像内容接近 data1 的原始值\n  axs[1].set_yscale('log')\n  axs[1].plot(xdata, data)\n  plt.show()\n\ne9_1()\n```\n\n## 手动操作 axis 上的 ticks\n\n```python python\ndef e9_2():\n  data1 = np.random.randn(100)\n  xdata = np.arange(len(data1))\n  fig, axs = plt.subplots(2, 1, layout='constrained')\n  axs[0].plot(xdata, data1)\n  axs[0].set_title('Automatic ticks')\n\n  axs[1].plot(xdata, data1)\n  # 设置x 轴和显示内容\n  axs[1].set_xticks(np.arange(0, 100, 30), ['zero', '30', 'sixty', '90'])\n  # 设置 y 轴\n  axs[1].set_yticks([-1.5, 0, 1.5])\n  axs[1].set_title('Manual ticks')\n  plt.show()\n\ne9_2()\n```\n\n## 使用时间做轴\n\n```python python\ndef e9_3():\n  fig, ax = plt.subplots(figsize=(5, 2.7), layout='constrained')\n  # 通过时间范围和间隔构建时间戳数组\n  dates = np.arange(np.datetime64('2021-11-15'), np.datetime64('2021-12-25'),\n                    np.timedelta64(1, 'h'))\n  # 随机数的数据\n  data = np.cumsum(np.random.randn(len(dates)))\n  # x 和 y 数据正常放入图像\n  ax.plot(dates, data)\n  # 设置日期格式化方式并添加到轴\n  cdf = mpl.dates.ConciseDateFormatter(ax.xaxis.get_major_locator())\n  ax.xaxis.set_major_formatter(cdf)\n  plt.show()\n\ne9_3()\n```\n\n## 使用字符串做轴\n\n```python python\ndef e9_4():\n  fig, ax = plt.subplots(figsize=(5, 2.7), layout='constrained')\n  categories = ['turnips', 'rutabaga', 'cucumber', 'pumpkins']\n\n  ax.bar(categories, np.random.rand(len(categories)))\n  plt.show()\n\ne9_4()\n```\n\n## 添加更多的轴\n\n```python python\ndef e9_5():\n  t = np.arange(0.0, 5.0, 0.01)\n  s = np.cos(2 * np.pi * t)\n  # fig上的图像为 ax1 和 ax3\n  fig, (ax1, ax3) = plt.subplots(1, 2, figsize=(7, 2.7), layout='constrained')\n  l1, = ax1.plot(t, s)\n  # ax2 和 ax1 绘制在一起, 共享x轴\n  ax2 = ax1.twinx()\n  l2, = ax2.plot(t, range(len(t)), 'C1')\n  ax2.legend([l1, l2], ['Sine (left)', 'Straight (right)'])\n\n  ax3.plot(t, s)\n  ax3.set_xlabel('Angle [rad]')\n  # secondary_xaxis 用于创建一个新的x轴 传入了和原x轴的互相转换函数\n  ax4 = ax3.secondary_xaxis('top', functions=(np.rad2deg, np.deg2rad))\n  ax4.set_xlabel('Angle [°]')\n  plt.show()\n\ne9_5()\n```\n\n# 10. 色块图\n\n```python python\ndef e10():\n  data1, data2, data3 = np.random.randn(3, 100)\n  X, Y = np.meshgrid(np.linspace(-3, 3, 128), np.linspace(-3, 3, 128))\n  Z = (1 - X/2 + X**5 + Y**3) * np.exp(-X**2 - Y**2)\n\n  fig, axs = plt.subplots(2, 2, layout='constrained')\n  pc = axs[0, 0].pcolormesh(X, Y, Z, vmin=-1, vmax=1, cmap='RdBu_r')\n  fig.colorbar(pc, ax=axs[0, 0])\n  axs[0, 0].set_title('pcolormesh()')\n\n  co = axs[0, 1].contourf(X, Y, Z, levels=np.linspace(-1.25, 1.25, 11))\n  fig.colorbar(co, ax=axs[0, 1])\n  axs[0, 1].set_title('contourf()')\n\n  pc = axs[1, 0].imshow(Z**2 * 100, cmap='plasma',\n                            norm=mpl.colors.LogNorm(vmin=0.01, vmax=100))\n  fig.colorbar(pc, ax=axs[1, 0], extend='both')\n  axs[1, 0].set_title('imshow() with LogNorm()')\n\n  pc = axs[1, 1].scatter(data1, data2, c=data3, cmap='RdBu_r')\n  fig.colorbar(pc, ax=axs[1, 1], extend='both')\n  axs[1, 1].set_title('scatter()')\n  plt.show()\n\ne10()\n```\n\n# 11. 多 axes 使用 dict 操作\n\n```python python\ndef e11():\n  fig, axd = plt.subplot_mosaic([['upleft', 'right'],\n                               ['lowleft', 'right']], layout='constrained')\n  axd['upleft'].set_title('upleft')\n  axd['lowleft'].set_title('lowleft')\n  axd['right'].set_title('right')\n\ne11()\n```","source":"_posts/pythonMatplotlib.md","raw":"---\ntitle: Matplotlib入门笔记\ndate: 2023-11-29 15:40:57\ncategories:\n- python\ntags:\n- python\n- 库\n- 笔记\n- 豆知识\n---\n\n# 前言\n\n网站 https://matplotlib.org/stable/\n\nMatplotlib 是一个用于创建静态、动画和交互式可视化的综合库。\n\n本文是学习 Matplotlib 过程中的笔记，所有内容都来自官方文档：https://matplotlib.org/stable/users/explain/quick_start.html\n\n<!-- more -->\n\n# 1. 入门示例\n\n```python python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nimport matplotlib as mpl\n\ndef e1():\n  x = np.linspace(0, 2 * np.pi, 200)\n  y = np.sin(x)\n\n  fig, ax = plt.subplots()\n  ax.plot(x, y)\n  plt.show()\n\ne1()\n```\n\n# 2. 窗口、图像和绘制\n\n```python python\ndef e2():\n  # 创建一个只有一个 axes 的 figure\n  fig, ax = plt.subplots()\n  # 在 axes 上 plot 一些数据\n  ax.plot([1, 2, 3, 4], [1, 4, 2, 3])\n  plt.show()\n\ne2()\n```\n\n# 3. figure 的构成部分\n\n```python python\n# figure 是一个绘图窗口\n# axes 是一副数据图像\n# axis 是坐标轴\ndef e3():\n  # 一个没有 axes 的 figure\n  fig = plt.figure()\n  # 只有一个 axes 的图像\n  fig, ax = plt.subplots()\n  # 2 * 2 布局的图像\n  fig, axs = plt.subplots(2, 2)\n  # 左一右二布局\n  fig, axs = plt.subplot_mosaic([['left', 'right_top'], ['left', 'right_bottom']])\n  plt.show()\n\ne3()\n```\n\n# 4. 输入数据类型\n\n```python python\ndef e4():\n  # plot 接受 np.array np.ma.masked_array np.asarray 三种类型的输入\n  # 如果不是此类数据，需要先进行处理\n  b = np.matrix([[1, 2], [3, 4]])\n  b_asarray = np.asarray(b)\n  # 对于一些已经准备好的对象(字典)数据, 也可以用下面的方式输入\n  np.random.seed(19680801)  # seed the random number generator.\n  # a 是 0-50 的整数 用于每个数据的 x 坐标\n  # b 是 50个随机数 用于每个数据的 y 坐标 (50个0-1的随机数 * 10 再加 x坐标)\n  # c 随机颜色 50个50以下的整数\n  # d 是随机尺寸\n  data = {'a': np.arange(50),\n          'c': np.random.randint(0, 50, 50),\n          'd': np.random.randn(50)}\n  data['b'] = data['a'] + 10 * np.random.randn(50)\n  data['d'] = np.abs(data['d']) * 100\n\n  fig, ax = plt.subplots(figsize=(5, 2.7), layout='constrained')\n  # 离散数据 使用字典中的内容赋值\n  ax.scatter('a', 'b', c='c', s='d', data=data)\n  ax.set_xlabel('entry a')\n  ax.set_ylabel('entry b')\n  plt.show()\n\ne4()\n```\n\n# 5. 接口风格\n\n```python python\n# mplib提供了两种接口风格 一是显示的获取各层对象并调用 二是直接使用plt搞定一切\n# 显示风格的例子\ndef e5_1():\n  x = np.linspace(0, 2, 100)  # 示意数据\n  # 获得 figure 和 axes\n  fig, ax = plt.subplots(figsize=(5, 2.7), layout='constrained')\n  # 一次二次和三次函数\n  ax.plot(x, x, label='linear')\n  ax.plot(x, x**2, label='quadratic')\n  ax.plot(x, x**3, label='cubic')\n  # 指定xy的label\n  ax.set_xlabel('x label')\n  ax.set_ylabel('y label')\n  # axes 的title\n  ax.set_title(\"Simple Plot\")\n  # 添加一个图例 用来显示各plot的label\n  ax.legend()\n  plt.show()\n\n# 隐式风格的例子 效果和显示风格完全相同\ndef e5_2():\n  x = np.linspace(0, 2, 100)\n  plt.figure(figsize=(5, 2.7), layout='constrained')\n  plt.plot(x, x, label='linear')\n  plt.plot(x, x**2, label='quadratic')\n  plt.plot(x, x**3, label='cubic')\n  plt.xlabel('x label')\n  plt.ylabel('y label')\n  plt.title(\"Simple Plot\")\n  plt.legend()\n  plt.show()\n\ne5_1()\ne5_2()\n```\n\n# 6. 制作辅助函数\n\n```python python\n# 制作工具函数, 避免代码重复\ndef e6_plotter(ax, data1, data2, param_dict):\n    \"\"\"\n    A helper function to make a graph.\n    \"\"\"\n    out = ax.plot(data1, data2, **param_dict)\n    return out\n\ndef e6():\n  data1, data2, data3, data4 = np.random.randn(4, 100)  # make 4 random data sets\n  fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(5, 2.7))\n  e6_plotter(ax1, data1, data2, {'marker': 'x'})\n  e6_plotter(ax2, data3, data4, {'marker': 'o'})\n  plt.show()\n\ne6()\n```\n\n# 7. 样式\n\n```python python\ndef e7():\n  data1, data2 = np.random.randn(2, 100)\n  fig, ax = plt.subplots(figsize=(5, 2.7))\n  x = np.arange(len(data1))\n  # plot 直接跟样式参数\n  ax.plot(x, np.cumsum(data1), color='blue', linewidth=3, linestyle='--')\n  l, = ax.plot(x, np.cumsum(data2), color='orange', linewidth=2)\n  # plot 后对返回内容进行样式赋值\n  l.set_linestyle(':')\n  plt.show()\n\ne7()\n```\n\n# 8. 标记\n\n## 基础标记\n\n```python python\ndef e8_1():\n  mu, sigma = 115, 15\n  # x 是一万个值的列表 randn 会给出一组正态分布的随机数结果\n  x = mu + sigma * np.random.randn(10000)\n  fig, ax = plt.subplots(figsize=(5, 2.7), layout='constrained')\n  # the histogram of the data\n  # 直方图参数: x-数据内容 50-柱数量 density-返回概率密度 \n  n, bins, patches = ax.hist(x, 50, density=True, facecolor='C0', alpha=0.75)\n\n  # 轴和图的标题\n  ax.set_xlabel('Length [cm]')\n  ax.set_ylabel('Probability')\n  ax.set_title('Aardvark lengths\\n (not really)')\n  # 文本 (使用了数学符号)\n  ax.text(75, .025, r'$\\mu=115,\\ \\sigma=15$')\n  # 轴定义\n  ax.axis([55, 175, 0, 0.03])\n  # 网线\n  ax.grid(True)\n  plt.show()\n\ne8_1()\n```\n\n## 标记图上的点\n\n```python python\ndef e8_2():\n  fig, ax = plt.subplots(figsize=(5, 2.7))\n\n  t = np.arange(0.0, 5.0, 0.01)\n  s = np.cos(2 * np.pi * t)\n  line, = ax.plot(t, s, lw=2)\n  # 使用点位、文本位、箭头设置来标记点\n  ax.annotate('local max', xy=(2, 1), xytext=(3, 1.5),\n            arrowprops=dict(facecolor='black', shrink=0.05))\n  # y轴limit\n  ax.set_ylim(-2, 2)\n  plt.show()\n\ne8_2()\n```\n\n## 添加 Legend用以区分数据\n\n```python python\ndef e8_3():\n  data1, data2, data3 = np.random.randn(3, 100)\n  fig, ax = plt.subplots(figsize=(5, 2.7))\n  ax.plot(np.arange(len(data1)), data1, label='data1')\n  ax.plot(np.arange(len(data2)), data2, label='data2')\n  ax.plot(np.arange(len(data3)), data3, 'd', label='data3')\n  ax.legend()\n  plt.show()\n\ne8_3()\n```\n\n# 9. 轴的比例和刻度\n\n## 轴的比例定义\n\n```python python\ndef e9_1():\n  # 100 个随机数\n  data1 = np.random.randn(100)\n  # 两个 axes\n  fig, axs = plt.subplots(1, 2, figsize=(5, 2.7), layout='constrained')\n  # x轴为随机数的数量\n  xdata = np.arange(len(data1))\n  # y数据为 10 ** data1\n  data = 10**data1\n  # axes 使用折线图\n  axs[0].plot(xdata, data)\n  # axes 使用对数坐标 图像内容接近 data1 的原始值\n  axs[1].set_yscale('log')\n  axs[1].plot(xdata, data)\n  plt.show()\n\ne9_1()\n```\n\n## 手动操作 axis 上的 ticks\n\n```python python\ndef e9_2():\n  data1 = np.random.randn(100)\n  xdata = np.arange(len(data1))\n  fig, axs = plt.subplots(2, 1, layout='constrained')\n  axs[0].plot(xdata, data1)\n  axs[0].set_title('Automatic ticks')\n\n  axs[1].plot(xdata, data1)\n  # 设置x 轴和显示内容\n  axs[1].set_xticks(np.arange(0, 100, 30), ['zero', '30', 'sixty', '90'])\n  # 设置 y 轴\n  axs[1].set_yticks([-1.5, 0, 1.5])\n  axs[1].set_title('Manual ticks')\n  plt.show()\n\ne9_2()\n```\n\n## 使用时间做轴\n\n```python python\ndef e9_3():\n  fig, ax = plt.subplots(figsize=(5, 2.7), layout='constrained')\n  # 通过时间范围和间隔构建时间戳数组\n  dates = np.arange(np.datetime64('2021-11-15'), np.datetime64('2021-12-25'),\n                    np.timedelta64(1, 'h'))\n  # 随机数的数据\n  data = np.cumsum(np.random.randn(len(dates)))\n  # x 和 y 数据正常放入图像\n  ax.plot(dates, data)\n  # 设置日期格式化方式并添加到轴\n  cdf = mpl.dates.ConciseDateFormatter(ax.xaxis.get_major_locator())\n  ax.xaxis.set_major_formatter(cdf)\n  plt.show()\n\ne9_3()\n```\n\n## 使用字符串做轴\n\n```python python\ndef e9_4():\n  fig, ax = plt.subplots(figsize=(5, 2.7), layout='constrained')\n  categories = ['turnips', 'rutabaga', 'cucumber', 'pumpkins']\n\n  ax.bar(categories, np.random.rand(len(categories)))\n  plt.show()\n\ne9_4()\n```\n\n## 添加更多的轴\n\n```python python\ndef e9_5():\n  t = np.arange(0.0, 5.0, 0.01)\n  s = np.cos(2 * np.pi * t)\n  # fig上的图像为 ax1 和 ax3\n  fig, (ax1, ax3) = plt.subplots(1, 2, figsize=(7, 2.7), layout='constrained')\n  l1, = ax1.plot(t, s)\n  # ax2 和 ax1 绘制在一起, 共享x轴\n  ax2 = ax1.twinx()\n  l2, = ax2.plot(t, range(len(t)), 'C1')\n  ax2.legend([l1, l2], ['Sine (left)', 'Straight (right)'])\n\n  ax3.plot(t, s)\n  ax3.set_xlabel('Angle [rad]')\n  # secondary_xaxis 用于创建一个新的x轴 传入了和原x轴的互相转换函数\n  ax4 = ax3.secondary_xaxis('top', functions=(np.rad2deg, np.deg2rad))\n  ax4.set_xlabel('Angle [°]')\n  plt.show()\n\ne9_5()\n```\n\n# 10. 色块图\n\n```python python\ndef e10():\n  data1, data2, data3 = np.random.randn(3, 100)\n  X, Y = np.meshgrid(np.linspace(-3, 3, 128), np.linspace(-3, 3, 128))\n  Z = (1 - X/2 + X**5 + Y**3) * np.exp(-X**2 - Y**2)\n\n  fig, axs = plt.subplots(2, 2, layout='constrained')\n  pc = axs[0, 0].pcolormesh(X, Y, Z, vmin=-1, vmax=1, cmap='RdBu_r')\n  fig.colorbar(pc, ax=axs[0, 0])\n  axs[0, 0].set_title('pcolormesh()')\n\n  co = axs[0, 1].contourf(X, Y, Z, levels=np.linspace(-1.25, 1.25, 11))\n  fig.colorbar(co, ax=axs[0, 1])\n  axs[0, 1].set_title('contourf()')\n\n  pc = axs[1, 0].imshow(Z**2 * 100, cmap='plasma',\n                            norm=mpl.colors.LogNorm(vmin=0.01, vmax=100))\n  fig.colorbar(pc, ax=axs[1, 0], extend='both')\n  axs[1, 0].set_title('imshow() with LogNorm()')\n\n  pc = axs[1, 1].scatter(data1, data2, c=data3, cmap='RdBu_r')\n  fig.colorbar(pc, ax=axs[1, 1], extend='both')\n  axs[1, 1].set_title('scatter()')\n  plt.show()\n\ne10()\n```\n\n# 11. 多 axes 使用 dict 操作\n\n```python python\ndef e11():\n  fig, axd = plt.subplot_mosaic([['upleft', 'right'],\n                               ['lowleft', 'right']], layout='constrained')\n  axd['upleft'].set_title('upleft')\n  axd['lowleft'].set_title('lowleft')\n  axd['right'].set_title('right')\n\ne11()\n```","slug":"pythonMatplotlib","published":1,"updated":"2023-12-07T07:49:17.888Z","_id":"clpklhp0u0007rkti05k83vid","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>网站 <a href=\"https://matplotlib.org/stable/\">https://matplotlib.org/stable/</a></p>\n<p>Matplotlib 是一个用于创建静态、动画和交互式可视化的综合库。</p>\n<p>本文是学习 Matplotlib 过程中的笔记，所有内容都来自官方文档：<a href=\"https://matplotlib.org/stable/users/explain/quick_start.html\">https://matplotlib.org/stable/users/explain/quick_start.html</a></p>\n<span id=\"more\"></span>\n\n<h1 id=\"1-入门示例\"><a href=\"#1-入门示例\" class=\"headerlink\" title=\"1. 入门示例\"></a>1. 入门示例</h1><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n<span class=\"token keyword\">import</span> matplotlib <span class=\"token keyword\">as</span> mpl\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">e1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>linspace<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>pi<span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n  y <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>sin<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n\n  fig<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  ax<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"2-窗口、图像和绘制\"><a href=\"#2-窗口、图像和绘制\" class=\"headerlink\" title=\"2. 窗口、图像和绘制\"></a>2. 窗口、图像和绘制</h1><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">e2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># 创建一个只有一个 axes 的 figure</span>\n  fig<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 在 axes 上 plot 一些数据</span>\n  ax<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne2<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"3-figure-的构成部分\"><a href=\"#3-figure-的构成部分\" class=\"headerlink\" title=\"3. figure 的构成部分\"></a>3. figure 的构成部分</h1><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token comment\"># figure 是一个绘图窗口</span>\n<span class=\"token comment\"># axes 是一副数据图像</span>\n<span class=\"token comment\"># axis 是坐标轴</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">e3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># 一个没有 axes 的 figure</span>\n  fig <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 只有一个 axes 的图像</span>\n  fig<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 2 * 2 布局的图像</span>\n  fig<span class=\"token punctuation\">,</span> axs <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 左一右二布局</span>\n  fig<span class=\"token punctuation\">,</span> axs <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplot_mosaic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'left'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'right_top'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'left'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'right_bottom'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne3<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"4-输入数据类型\"><a href=\"#4-输入数据类型\" class=\"headerlink\" title=\"4. 输入数据类型\"></a>4. 输入数据类型</h1><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">e4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># plot 接受 np.array np.ma.masked_array np.asarray 三种类型的输入</span>\n  <span class=\"token comment\"># 如果不是此类数据，需要先进行处理</span>\n  b <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>matrix<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  b_asarray <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>asarray<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 对于一些已经准备好的对象(字典)数据, 也可以用下面的方式输入</span>\n  np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>seed<span class=\"token punctuation\">(</span><span class=\"token number\">19680801</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># seed the random number generator.</span>\n  <span class=\"token comment\"># a 是 0-50 的整数 用于每个数据的 x 坐标</span>\n  <span class=\"token comment\"># b 是 50个随机数 用于每个数据的 y 坐标 (50个0-1的随机数 * 10 再加 x坐标)</span>\n  <span class=\"token comment\"># c 随机颜色 50个50以下的整数</span>\n  <span class=\"token comment\"># d 是随机尺寸</span>\n  data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">:</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">'c'</span><span class=\"token punctuation\">:</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">'d'</span><span class=\"token punctuation\">:</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span>\n  data<span class=\"token punctuation\">[</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span>\n  data<span class=\"token punctuation\">[</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span>\n\n  fig<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> layout<span class=\"token operator\">=</span><span class=\"token string\">'constrained'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 离散数据 使用字典中的内容赋值</span>\n  ax<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> c<span class=\"token operator\">=</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span> s<span class=\"token operator\">=</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span>\n  ax<span class=\"token punctuation\">.</span>set_xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'entry a'</span><span class=\"token punctuation\">)</span>\n  ax<span class=\"token punctuation\">.</span>set_ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">'entry b'</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne4<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"5-接口风格\"><a href=\"#5-接口风格\" class=\"headerlink\" title=\"5. 接口风格\"></a>5. 接口风格</h1><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token comment\"># mplib提供了两种接口风格 一是显示的获取各层对象并调用 二是直接使用plt搞定一切</span>\n<span class=\"token comment\"># 显示风格的例子</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">e5_1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>linspace<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 示意数据</span>\n  <span class=\"token comment\"># 获得 figure 和 axes</span>\n  fig<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> layout<span class=\"token operator\">=</span><span class=\"token string\">'constrained'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 一次二次和三次函数</span>\n  ax<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">'linear'</span><span class=\"token punctuation\">)</span>\n  ax<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> x<span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">'quadratic'</span><span class=\"token punctuation\">)</span>\n  ax<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> x<span class=\"token operator\">**</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">'cubic'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 指定xy的label</span>\n  ax<span class=\"token punctuation\">.</span>set_xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'x label'</span><span class=\"token punctuation\">)</span>\n  ax<span class=\"token punctuation\">.</span>set_ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">'y label'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># axes 的title</span>\n  ax<span class=\"token punctuation\">.</span>set_title<span class=\"token punctuation\">(</span><span class=\"token string\">\"Simple Plot\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 添加一个图例 用来显示各plot的label</span>\n  ax<span class=\"token punctuation\">.</span>legend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 隐式风格的例子 效果和显示风格完全相同</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">e5_2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>linspace<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> layout<span class=\"token operator\">=</span><span class=\"token string\">'constrained'</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">'linear'</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> x<span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">'quadratic'</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> x<span class=\"token operator\">**</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">'cubic'</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'x label'</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">'y label'</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">\"Simple Plot\"</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>legend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne5_1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ne5_2<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"6-制作辅助函数\"><a href=\"#6-制作辅助函数\" class=\"headerlink\" title=\"6. 制作辅助函数\"></a>6. 制作辅助函数</h1><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token comment\"># 制作工具函数, 避免代码重复</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">e6_plotter</span><span class=\"token punctuation\">(</span>ax<span class=\"token punctuation\">,</span> data1<span class=\"token punctuation\">,</span> data2<span class=\"token punctuation\">,</span> param_dict<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    A helper function to make a graph.\n    \"\"\"</span>\n    out <span class=\"token operator\">=</span> ax<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">,</span> data2<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>param_dict<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> out\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">e6</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  data1<span class=\"token punctuation\">,</span> data2<span class=\"token punctuation\">,</span> data3<span class=\"token punctuation\">,</span> data4 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># make 4 random data sets</span>\n  fig<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>ax1<span class=\"token punctuation\">,</span> ax2<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  e6_plotter<span class=\"token punctuation\">(</span>ax1<span class=\"token punctuation\">,</span> data1<span class=\"token punctuation\">,</span> data2<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'marker'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'x'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  e6_plotter<span class=\"token punctuation\">(</span>ax2<span class=\"token punctuation\">,</span> data3<span class=\"token punctuation\">,</span> data4<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'marker'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'o'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne6<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"7-样式\"><a href=\"#7-样式\" class=\"headerlink\" title=\"7. 样式\"></a>7. 样式</h1><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">e7</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  data1<span class=\"token punctuation\">,</span> data2 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n  fig<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># plot 直接跟样式参数</span>\n  ax<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>cumsum<span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token string\">'blue'</span><span class=\"token punctuation\">,</span> linewidth<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> linestyle<span class=\"token operator\">=</span><span class=\"token string\">'--'</span><span class=\"token punctuation\">)</span>\n  l<span class=\"token punctuation\">,</span> <span class=\"token operator\">=</span> ax<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>cumsum<span class=\"token punctuation\">(</span>data2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token string\">'orange'</span><span class=\"token punctuation\">,</span> linewidth<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># plot 后对返回内容进行样式赋值</span>\n  l<span class=\"token punctuation\">.</span>set_linestyle<span class=\"token punctuation\">(</span><span class=\"token string\">':'</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne7<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"8-标记\"><a href=\"#8-标记\" class=\"headerlink\" title=\"8. 标记\"></a>8. 标记</h1><h2 id=\"基础标记\"><a href=\"#基础标记\" class=\"headerlink\" title=\"基础标记\"></a>基础标记</h2><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">e8_1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  mu<span class=\"token punctuation\">,</span> sigma <span class=\"token operator\">=</span> <span class=\"token number\">115</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span>\n  <span class=\"token comment\"># x 是一万个值的列表 randn 会给出一组正态分布的随机数结果</span>\n  x <span class=\"token operator\">=</span> mu <span class=\"token operator\">+</span> sigma <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">10000</span><span class=\"token punctuation\">)</span>\n  fig<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> layout<span class=\"token operator\">=</span><span class=\"token string\">'constrained'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># the histogram of the data</span>\n  <span class=\"token comment\"># 直方图参数: x-数据内容 50-柱数量 density-返回概率密度 </span>\n  n<span class=\"token punctuation\">,</span> bins<span class=\"token punctuation\">,</span> patches <span class=\"token operator\">=</span> ax<span class=\"token punctuation\">.</span>hist<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> density<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> facecolor<span class=\"token operator\">=</span><span class=\"token string\">'C0'</span><span class=\"token punctuation\">,</span> alpha<span class=\"token operator\">=</span><span class=\"token number\">0.75</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\"># 轴和图的标题</span>\n  ax<span class=\"token punctuation\">.</span>set_xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'Length [cm]'</span><span class=\"token punctuation\">)</span>\n  ax<span class=\"token punctuation\">.</span>set_ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">'Probability'</span><span class=\"token punctuation\">)</span>\n  ax<span class=\"token punctuation\">.</span>set_title<span class=\"token punctuation\">(</span><span class=\"token string\">'Aardvark lengths\\n (not really)'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 文本 (使用了数学符号)</span>\n  ax<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">.025</span><span class=\"token punctuation\">,</span> <span class=\"token string\">r'$\\mu=115,\\ \\sigma=15$'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 轴定义</span>\n  ax<span class=\"token punctuation\">.</span>axis<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">175</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.03</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 网线</span>\n  ax<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne8_1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h2 id=\"标记图上的点\"><a href=\"#标记图上的点\" class=\"headerlink\" title=\"标记图上的点\"></a>标记图上的点</h2><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">e8_2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  fig<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  t <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span>\n  s <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>cos<span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>pi <span class=\"token operator\">*</span> t<span class=\"token punctuation\">)</span>\n  line<span class=\"token punctuation\">,</span> <span class=\"token operator\">=</span> ax<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> lw<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 使用点位、文本位、箭头设置来标记点</span>\n  ax<span class=\"token punctuation\">.</span>annotate<span class=\"token punctuation\">(</span><span class=\"token string\">'local max'</span><span class=\"token punctuation\">,</span> xy<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> xytext<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            arrowprops<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>facecolor<span class=\"token operator\">=</span><span class=\"token string\">'black'</span><span class=\"token punctuation\">,</span> shrink<span class=\"token operator\">=</span><span class=\"token number\">0.05</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># y轴limit</span>\n  ax<span class=\"token punctuation\">.</span>set_ylim<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne8_2<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h2 id=\"添加-Legend用以区分数据\"><a href=\"#添加-Legend用以区分数据\" class=\"headerlink\" title=\"添加 Legend用以区分数据\"></a>添加 Legend用以区分数据</h2><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">e8_3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  data1<span class=\"token punctuation\">,</span> data2<span class=\"token punctuation\">,</span> data3 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n  fig<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  ax<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> data1<span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">'data1'</span><span class=\"token punctuation\">)</span>\n  ax<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> data2<span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">'data2'</span><span class=\"token punctuation\">)</span>\n  ax<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> data3<span class=\"token punctuation\">,</span> <span class=\"token string\">'d'</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">'data3'</span><span class=\"token punctuation\">)</span>\n  ax<span class=\"token punctuation\">.</span>legend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne8_3<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"9-轴的比例和刻度\"><a href=\"#9-轴的比例和刻度\" class=\"headerlink\" title=\"9. 轴的比例和刻度\"></a>9. 轴的比例和刻度</h1><h2 id=\"轴的比例定义\"><a href=\"#轴的比例定义\" class=\"headerlink\" title=\"轴的比例定义\"></a>轴的比例定义</h2><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">e9_1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># 100 个随机数</span>\n  data1 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 两个 axes</span>\n  fig<span class=\"token punctuation\">,</span> axs <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> layout<span class=\"token operator\">=</span><span class=\"token string\">'constrained'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># x轴为随机数的数量</span>\n  xdata <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># y数据为 10 ** data1</span>\n  data <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token operator\">**</span>data1\n  <span class=\"token comment\"># axes 使用折线图</span>\n  axs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>xdata<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># axes 使用对数坐标 图像内容接近 data1 的原始值</span>\n  axs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_yscale<span class=\"token punctuation\">(</span><span class=\"token string\">'log'</span><span class=\"token punctuation\">)</span>\n  axs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>xdata<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne9_1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h2 id=\"手动操作-axis-上的-ticks\"><a href=\"#手动操作-axis-上的-ticks\" class=\"headerlink\" title=\"手动操作 axis 上的 ticks\"></a>手动操作 axis 上的 ticks</h2><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">e9_2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  data1 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n  xdata <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  fig<span class=\"token punctuation\">,</span> axs <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> layout<span class=\"token operator\">=</span><span class=\"token string\">'constrained'</span><span class=\"token punctuation\">)</span>\n  axs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>xdata<span class=\"token punctuation\">,</span> data1<span class=\"token punctuation\">)</span>\n  axs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_title<span class=\"token punctuation\">(</span><span class=\"token string\">'Automatic ticks'</span><span class=\"token punctuation\">)</span>\n\n  axs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>xdata<span class=\"token punctuation\">,</span> data1<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 设置x 轴和显示内容</span>\n  axs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_xticks<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'zero'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'30'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sixty'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'90'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 设置 y 轴</span>\n  axs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_yticks<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  axs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_title<span class=\"token punctuation\">(</span><span class=\"token string\">'Manual ticks'</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne9_2<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h2 id=\"使用时间做轴\"><a href=\"#使用时间做轴\" class=\"headerlink\" title=\"使用时间做轴\"></a>使用时间做轴</h2><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">e9_3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  fig<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> layout<span class=\"token operator\">=</span><span class=\"token string\">'constrained'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 通过时间范围和间隔构建时间戳数组</span>\n  dates <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>datetime64<span class=\"token punctuation\">(</span><span class=\"token string\">'2021-11-15'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>datetime64<span class=\"token punctuation\">(</span><span class=\"token string\">'2021-12-25'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    np<span class=\"token punctuation\">.</span>timedelta64<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'h'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 随机数的数据</span>\n  data <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>cumsum<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>dates<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># x 和 y 数据正常放入图像</span>\n  ax<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>dates<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 设置日期格式化方式并添加到轴</span>\n  cdf <span class=\"token operator\">=</span> mpl<span class=\"token punctuation\">.</span>dates<span class=\"token punctuation\">.</span>ConciseDateFormatter<span class=\"token punctuation\">(</span>ax<span class=\"token punctuation\">.</span>xaxis<span class=\"token punctuation\">.</span>get_major_locator<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  ax<span class=\"token punctuation\">.</span>xaxis<span class=\"token punctuation\">.</span>set_major_formatter<span class=\"token punctuation\">(</span>cdf<span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne9_3<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h2 id=\"使用字符串做轴\"><a href=\"#使用字符串做轴\" class=\"headerlink\" title=\"使用字符串做轴\"></a>使用字符串做轴</h2><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">e9_4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  fig<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> layout<span class=\"token operator\">=</span><span class=\"token string\">'constrained'</span><span class=\"token punctuation\">)</span>\n  categories <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'turnips'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rutabaga'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cucumber'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pumpkins'</span><span class=\"token punctuation\">]</span>\n\n  ax<span class=\"token punctuation\">.</span>bar<span class=\"token punctuation\">(</span>categories<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>categories<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne9_4<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h2 id=\"添加更多的轴\"><a href=\"#添加更多的轴\" class=\"headerlink\" title=\"添加更多的轴\"></a>添加更多的轴</h2><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">e9_5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  t <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span>\n  s <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>cos<span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>pi <span class=\"token operator\">*</span> t<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># fig上的图像为 ax1 和 ax3</span>\n  fig<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>ax1<span class=\"token punctuation\">,</span> ax3<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> layout<span class=\"token operator\">=</span><span class=\"token string\">'constrained'</span><span class=\"token punctuation\">)</span>\n  l1<span class=\"token punctuation\">,</span> <span class=\"token operator\">=</span> ax1<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># ax2 和 ax1 绘制在一起, 共享x轴</span>\n  ax2 <span class=\"token operator\">=</span> ax1<span class=\"token punctuation\">.</span>twinx<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  l2<span class=\"token punctuation\">,</span> <span class=\"token operator\">=</span> ax2<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C1'</span><span class=\"token punctuation\">)</span>\n  ax2<span class=\"token punctuation\">.</span>legend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>l1<span class=\"token punctuation\">,</span> l2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Sine (left)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Straight (right)'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  ax3<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span>\n  ax3<span class=\"token punctuation\">.</span>set_xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'Angle [rad]'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># secondary_xaxis 用于创建一个新的x轴 传入了和原x轴的互相转换函数</span>\n  ax4 <span class=\"token operator\">=</span> ax3<span class=\"token punctuation\">.</span>secondary_xaxis<span class=\"token punctuation\">(</span><span class=\"token string\">'top'</span><span class=\"token punctuation\">,</span> functions<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>rad2deg<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>deg2rad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  ax4<span class=\"token punctuation\">.</span>set_xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'Angle [°]'</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne9_5<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"10-色块图\"><a href=\"#10-色块图\" class=\"headerlink\" title=\"10. 色块图\"></a>10. 色块图</h1><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">e10</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  data1<span class=\"token punctuation\">,</span> data2<span class=\"token punctuation\">,</span> data3 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n  X<span class=\"token punctuation\">,</span> Y <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>meshgrid<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>linspace<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>linspace<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  Z <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> X<span class=\"token operator\">/</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> X<span class=\"token operator\">**</span><span class=\"token number\">5</span> <span class=\"token operator\">+</span> Y<span class=\"token operator\">**</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>exp<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>X<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> Y<span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n  fig<span class=\"token punctuation\">,</span> axs <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> layout<span class=\"token operator\">=</span><span class=\"token string\">'constrained'</span><span class=\"token punctuation\">)</span>\n  pc <span class=\"token operator\">=</span> axs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pcolormesh<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> Y<span class=\"token punctuation\">,</span> Z<span class=\"token punctuation\">,</span> vmin<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> vmax<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> cmap<span class=\"token operator\">=</span><span class=\"token string\">'RdBu_r'</span><span class=\"token punctuation\">)</span>\n  fig<span class=\"token punctuation\">.</span>colorbar<span class=\"token punctuation\">(</span>pc<span class=\"token punctuation\">,</span> ax<span class=\"token operator\">=</span>axs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  axs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_title<span class=\"token punctuation\">(</span><span class=\"token string\">'pcolormesh()'</span><span class=\"token punctuation\">)</span>\n\n  co <span class=\"token operator\">=</span> axs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>contourf<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> Y<span class=\"token punctuation\">,</span> Z<span class=\"token punctuation\">,</span> levels<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>linspace<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  fig<span class=\"token punctuation\">.</span>colorbar<span class=\"token punctuation\">(</span>co<span class=\"token punctuation\">,</span> ax<span class=\"token operator\">=</span>axs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  axs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_title<span class=\"token punctuation\">(</span><span class=\"token string\">'contourf()'</span><span class=\"token punctuation\">)</span>\n\n  pc <span class=\"token operator\">=</span> axs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>Z<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> cmap<span class=\"token operator\">=</span><span class=\"token string\">'plasma'</span><span class=\"token punctuation\">,</span>\n                            norm<span class=\"token operator\">=</span>mpl<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">.</span>LogNorm<span class=\"token punctuation\">(</span>vmin<span class=\"token operator\">=</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">,</span> vmax<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  fig<span class=\"token punctuation\">.</span>colorbar<span class=\"token punctuation\">(</span>pc<span class=\"token punctuation\">,</span> ax<span class=\"token operator\">=</span>axs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> extend<span class=\"token operator\">=</span><span class=\"token string\">'both'</span><span class=\"token punctuation\">)</span>\n  axs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_title<span class=\"token punctuation\">(</span><span class=\"token string\">'imshow() with LogNorm()'</span><span class=\"token punctuation\">)</span>\n\n  pc <span class=\"token operator\">=</span> axs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">,</span> data2<span class=\"token punctuation\">,</span> c<span class=\"token operator\">=</span>data3<span class=\"token punctuation\">,</span> cmap<span class=\"token operator\">=</span><span class=\"token string\">'RdBu_r'</span><span class=\"token punctuation\">)</span>\n  fig<span class=\"token punctuation\">.</span>colorbar<span class=\"token punctuation\">(</span>pc<span class=\"token punctuation\">,</span> ax<span class=\"token operator\">=</span>axs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> extend<span class=\"token operator\">=</span><span class=\"token string\">'both'</span><span class=\"token punctuation\">)</span>\n  axs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_title<span class=\"token punctuation\">(</span><span class=\"token string\">'scatter()'</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne10<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"11-多-axes-使用-dict-操作\"><a href=\"#11-多-axes-使用-dict-操作\" class=\"headerlink\" title=\"11. 多 axes 使用 dict 操作\"></a>11. 多 axes 使用 dict 操作</h1><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">e11</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  fig<span class=\"token punctuation\">,</span> axd <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplot_mosaic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'upleft'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'right'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                               <span class=\"token punctuation\">[</span><span class=\"token string\">'lowleft'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'right'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> layout<span class=\"token operator\">=</span><span class=\"token string\">'constrained'</span><span class=\"token punctuation\">)</span>\n  axd<span class=\"token punctuation\">[</span><span class=\"token string\">'upleft'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_title<span class=\"token punctuation\">(</span><span class=\"token string\">'upleft'</span><span class=\"token punctuation\">)</span>\n  axd<span class=\"token punctuation\">[</span><span class=\"token string\">'lowleft'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_title<span class=\"token punctuation\">(</span><span class=\"token string\">'lowleft'</span><span class=\"token punctuation\">)</span>\n  axd<span class=\"token punctuation\">[</span><span class=\"token string\">'right'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_title<span class=\"token punctuation\">(</span><span class=\"token string\">'right'</span><span class=\"token punctuation\">)</span>\n\ne11<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>","site":{"data":{}},"excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>网站 <a href=\"https://matplotlib.org/stable/\">https://matplotlib.org/stable/</a></p>\n<p>Matplotlib 是一个用于创建静态、动画和交互式可视化的综合库。</p>\n<p>本文是学习 Matplotlib 过程中的笔记，所有内容都来自官方文档：<a href=\"https://matplotlib.org/stable/users/explain/quick_start.html\">https://matplotlib.org/stable/users/explain/quick_start.html</a></p>","more":"<h1 id=\"1-入门示例\"><a href=\"#1-入门示例\" class=\"headerlink\" title=\"1. 入门示例\"></a>1. 入门示例</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n<span class=\"token keyword\">import</span> matplotlib <span class=\"token keyword\">as</span> mpl\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">e1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>linspace<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>pi<span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span>\n  y <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>sin<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n\n  fig<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  ax<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"2-窗口、图像和绘制\"><a href=\"#2-窗口、图像和绘制\" class=\"headerlink\" title=\"2. 窗口、图像和绘制\"></a>2. 窗口、图像和绘制</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">e2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># 创建一个只有一个 axes 的 figure</span>\n  fig<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 在 axes 上 plot 一些数据</span>\n  ax<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne2<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"3-figure-的构成部分\"><a href=\"#3-figure-的构成部分\" class=\"headerlink\" title=\"3. figure 的构成部分\"></a>3. figure 的构成部分</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token comment\"># figure 是一个绘图窗口</span>\n<span class=\"token comment\"># axes 是一副数据图像</span>\n<span class=\"token comment\"># axis 是坐标轴</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">e3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># 一个没有 axes 的 figure</span>\n  fig <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 只有一个 axes 的图像</span>\n  fig<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 2 * 2 布局的图像</span>\n  fig<span class=\"token punctuation\">,</span> axs <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 左一右二布局</span>\n  fig<span class=\"token punctuation\">,</span> axs <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplot_mosaic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'left'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'right_top'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'left'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'right_bottom'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne3<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"4-输入数据类型\"><a href=\"#4-输入数据类型\" class=\"headerlink\" title=\"4. 输入数据类型\"></a>4. 输入数据类型</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">e4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># plot 接受 np.array np.ma.masked_array np.asarray 三种类型的输入</span>\n  <span class=\"token comment\"># 如果不是此类数据，需要先进行处理</span>\n  b <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>matrix<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  b_asarray <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>asarray<span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 对于一些已经准备好的对象(字典)数据, 也可以用下面的方式输入</span>\n  np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>seed<span class=\"token punctuation\">(</span><span class=\"token number\">19680801</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># seed the random number generator.</span>\n  <span class=\"token comment\"># a 是 0-50 的整数 用于每个数据的 x 坐标</span>\n  <span class=\"token comment\"># b 是 50个随机数 用于每个数据的 y 坐标 (50个0-1的随机数 * 10 再加 x坐标)</span>\n  <span class=\"token comment\"># c 随机颜色 50个50以下的整数</span>\n  <span class=\"token comment\"># d 是随机尺寸</span>\n  data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">:</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">'c'</span><span class=\"token punctuation\">:</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">'d'</span><span class=\"token punctuation\">:</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span>\n  data<span class=\"token punctuation\">[</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span>\n  data<span class=\"token punctuation\">[</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span>\n\n  fig<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> layout<span class=\"token operator\">=</span><span class=\"token string\">'constrained'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 离散数据 使用字典中的内容赋值</span>\n  ax<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> c<span class=\"token operator\">=</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span> s<span class=\"token operator\">=</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span>\n  ax<span class=\"token punctuation\">.</span>set_xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'entry a'</span><span class=\"token punctuation\">)</span>\n  ax<span class=\"token punctuation\">.</span>set_ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">'entry b'</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne4<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"5-接口风格\"><a href=\"#5-接口风格\" class=\"headerlink\" title=\"5. 接口风格\"></a>5. 接口风格</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token comment\"># mplib提供了两种接口风格 一是显示的获取各层对象并调用 二是直接使用plt搞定一切</span>\n<span class=\"token comment\"># 显示风格的例子</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">e5_1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>linspace<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 示意数据</span>\n  <span class=\"token comment\"># 获得 figure 和 axes</span>\n  fig<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> layout<span class=\"token operator\">=</span><span class=\"token string\">'constrained'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 一次二次和三次函数</span>\n  ax<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">'linear'</span><span class=\"token punctuation\">)</span>\n  ax<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> x<span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">'quadratic'</span><span class=\"token punctuation\">)</span>\n  ax<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> x<span class=\"token operator\">**</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">'cubic'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 指定xy的label</span>\n  ax<span class=\"token punctuation\">.</span>set_xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'x label'</span><span class=\"token punctuation\">)</span>\n  ax<span class=\"token punctuation\">.</span>set_ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">'y label'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># axes 的title</span>\n  ax<span class=\"token punctuation\">.</span>set_title<span class=\"token punctuation\">(</span><span class=\"token string\">\"Simple Plot\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 添加一个图例 用来显示各plot的label</span>\n  ax<span class=\"token punctuation\">.</span>legend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 隐式风格的例子 效果和显示风格完全相同</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">e5_2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>linspace<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> layout<span class=\"token operator\">=</span><span class=\"token string\">'constrained'</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">'linear'</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> x<span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">'quadratic'</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> x<span class=\"token operator\">**</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">'cubic'</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'x label'</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">'y label'</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">\"Simple Plot\"</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>legend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne5_1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ne5_2<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"6-制作辅助函数\"><a href=\"#6-制作辅助函数\" class=\"headerlink\" title=\"6. 制作辅助函数\"></a>6. 制作辅助函数</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token comment\"># 制作工具函数, 避免代码重复</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">e6_plotter</span><span class=\"token punctuation\">(</span>ax<span class=\"token punctuation\">,</span> data1<span class=\"token punctuation\">,</span> data2<span class=\"token punctuation\">,</span> param_dict<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    A helper function to make a graph.\n    \"\"\"</span>\n    out <span class=\"token operator\">=</span> ax<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">,</span> data2<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>param_dict<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> out\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">e6</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  data1<span class=\"token punctuation\">,</span> data2<span class=\"token punctuation\">,</span> data3<span class=\"token punctuation\">,</span> data4 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># make 4 random data sets</span>\n  fig<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>ax1<span class=\"token punctuation\">,</span> ax2<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  e6_plotter<span class=\"token punctuation\">(</span>ax1<span class=\"token punctuation\">,</span> data1<span class=\"token punctuation\">,</span> data2<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'marker'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'x'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  e6_plotter<span class=\"token punctuation\">(</span>ax2<span class=\"token punctuation\">,</span> data3<span class=\"token punctuation\">,</span> data4<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">'marker'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'o'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne6<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"7-样式\"><a href=\"#7-样式\" class=\"headerlink\" title=\"7. 样式\"></a>7. 样式</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">e7</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  data1<span class=\"token punctuation\">,</span> data2 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n  fig<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  x <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># plot 直接跟样式参数</span>\n  ax<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>cumsum<span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token string\">'blue'</span><span class=\"token punctuation\">,</span> linewidth<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> linestyle<span class=\"token operator\">=</span><span class=\"token string\">'--'</span><span class=\"token punctuation\">)</span>\n  l<span class=\"token punctuation\">,</span> <span class=\"token operator\">=</span> ax<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>cumsum<span class=\"token punctuation\">(</span>data2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span><span class=\"token string\">'orange'</span><span class=\"token punctuation\">,</span> linewidth<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># plot 后对返回内容进行样式赋值</span>\n  l<span class=\"token punctuation\">.</span>set_linestyle<span class=\"token punctuation\">(</span><span class=\"token string\">':'</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne7<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"8-标记\"><a href=\"#8-标记\" class=\"headerlink\" title=\"8. 标记\"></a>8. 标记</h1><h2 id=\"基础标记\"><a href=\"#基础标记\" class=\"headerlink\" title=\"基础标记\"></a>基础标记</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">e8_1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  mu<span class=\"token punctuation\">,</span> sigma <span class=\"token operator\">=</span> <span class=\"token number\">115</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span>\n  <span class=\"token comment\"># x 是一万个值的列表 randn 会给出一组正态分布的随机数结果</span>\n  x <span class=\"token operator\">=</span> mu <span class=\"token operator\">+</span> sigma <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">10000</span><span class=\"token punctuation\">)</span>\n  fig<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> layout<span class=\"token operator\">=</span><span class=\"token string\">'constrained'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># the histogram of the data</span>\n  <span class=\"token comment\"># 直方图参数: x-数据内容 50-柱数量 density-返回概率密度 </span>\n  n<span class=\"token punctuation\">,</span> bins<span class=\"token punctuation\">,</span> patches <span class=\"token operator\">=</span> ax<span class=\"token punctuation\">.</span>hist<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> density<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> facecolor<span class=\"token operator\">=</span><span class=\"token string\">'C0'</span><span class=\"token punctuation\">,</span> alpha<span class=\"token operator\">=</span><span class=\"token number\">0.75</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\"># 轴和图的标题</span>\n  ax<span class=\"token punctuation\">.</span>set_xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'Length [cm]'</span><span class=\"token punctuation\">)</span>\n  ax<span class=\"token punctuation\">.</span>set_ylabel<span class=\"token punctuation\">(</span><span class=\"token string\">'Probability'</span><span class=\"token punctuation\">)</span>\n  ax<span class=\"token punctuation\">.</span>set_title<span class=\"token punctuation\">(</span><span class=\"token string\">'Aardvark lengths\\n (not really)'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 文本 (使用了数学符号)</span>\n  ax<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">(</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">.025</span><span class=\"token punctuation\">,</span> <span class=\"token string\">r'$\\mu=115,\\ \\sigma=15$'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 轴定义</span>\n  ax<span class=\"token punctuation\">.</span>axis<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">55</span><span class=\"token punctuation\">,</span> <span class=\"token number\">175</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.03</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 网线</span>\n  ax<span class=\"token punctuation\">.</span>grid<span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne8_1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"标记图上的点\"><a href=\"#标记图上的点\" class=\"headerlink\" title=\"标记图上的点\"></a>标记图上的点</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">e8_2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  fig<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  t <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span>\n  s <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>cos<span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>pi <span class=\"token operator\">*</span> t<span class=\"token punctuation\">)</span>\n  line<span class=\"token punctuation\">,</span> <span class=\"token operator\">=</span> ax<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> lw<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 使用点位、文本位、箭头设置来标记点</span>\n  ax<span class=\"token punctuation\">.</span>annotate<span class=\"token punctuation\">(</span><span class=\"token string\">'local max'</span><span class=\"token punctuation\">,</span> xy<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> xytext<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            arrowprops<span class=\"token operator\">=</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>facecolor<span class=\"token operator\">=</span><span class=\"token string\">'black'</span><span class=\"token punctuation\">,</span> shrink<span class=\"token operator\">=</span><span class=\"token number\">0.05</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># y轴limit</span>\n  ax<span class=\"token punctuation\">.</span>set_ylim<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne8_2<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"添加-Legend用以区分数据\"><a href=\"#添加-Legend用以区分数据\" class=\"headerlink\" title=\"添加 Legend用以区分数据\"></a>添加 Legend用以区分数据</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">e8_3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  data1<span class=\"token punctuation\">,</span> data2<span class=\"token punctuation\">,</span> data3 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n  fig<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  ax<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> data1<span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">'data1'</span><span class=\"token punctuation\">)</span>\n  ax<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> data2<span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">'data2'</span><span class=\"token punctuation\">)</span>\n  ax<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> data3<span class=\"token punctuation\">,</span> <span class=\"token string\">'d'</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">'data3'</span><span class=\"token punctuation\">)</span>\n  ax<span class=\"token punctuation\">.</span>legend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne8_3<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"9-轴的比例和刻度\"><a href=\"#9-轴的比例和刻度\" class=\"headerlink\" title=\"9. 轴的比例和刻度\"></a>9. 轴的比例和刻度</h1><h2 id=\"轴的比例定义\"><a href=\"#轴的比例定义\" class=\"headerlink\" title=\"轴的比例定义\"></a>轴的比例定义</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">e9_1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token comment\"># 100 个随机数</span>\n  data1 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 两个 axes</span>\n  fig<span class=\"token punctuation\">,</span> axs <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> layout<span class=\"token operator\">=</span><span class=\"token string\">'constrained'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># x轴为随机数的数量</span>\n  xdata <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># y数据为 10 ** data1</span>\n  data <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token operator\">**</span>data1\n  <span class=\"token comment\"># axes 使用折线图</span>\n  axs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>xdata<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># axes 使用对数坐标 图像内容接近 data1 的原始值</span>\n  axs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_yscale<span class=\"token punctuation\">(</span><span class=\"token string\">'log'</span><span class=\"token punctuation\">)</span>\n  axs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>xdata<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne9_1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"手动操作-axis-上的-ticks\"><a href=\"#手动操作-axis-上的-ticks\" class=\"headerlink\" title=\"手动操作 axis 上的 ticks\"></a>手动操作 axis 上的 ticks</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">e9_2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  data1 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n  xdata <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  fig<span class=\"token punctuation\">,</span> axs <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> layout<span class=\"token operator\">=</span><span class=\"token string\">'constrained'</span><span class=\"token punctuation\">)</span>\n  axs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>xdata<span class=\"token punctuation\">,</span> data1<span class=\"token punctuation\">)</span>\n  axs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_title<span class=\"token punctuation\">(</span><span class=\"token string\">'Automatic ticks'</span><span class=\"token punctuation\">)</span>\n\n  axs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>xdata<span class=\"token punctuation\">,</span> data1<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 设置x 轴和显示内容</span>\n  axs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_xticks<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'zero'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'30'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sixty'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'90'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 设置 y 轴</span>\n  axs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_yticks<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  axs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_title<span class=\"token punctuation\">(</span><span class=\"token string\">'Manual ticks'</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne9_2<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"使用时间做轴\"><a href=\"#使用时间做轴\" class=\"headerlink\" title=\"使用时间做轴\"></a>使用时间做轴</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">e9_3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  fig<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> layout<span class=\"token operator\">=</span><span class=\"token string\">'constrained'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 通过时间范围和间隔构建时间戳数组</span>\n  dates <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>datetime64<span class=\"token punctuation\">(</span><span class=\"token string\">'2021-11-15'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>datetime64<span class=\"token punctuation\">(</span><span class=\"token string\">'2021-12-25'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    np<span class=\"token punctuation\">.</span>timedelta64<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'h'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 随机数的数据</span>\n  data <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>cumsum<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>dates<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># x 和 y 数据正常放入图像</span>\n  ax<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>dates<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># 设置日期格式化方式并添加到轴</span>\n  cdf <span class=\"token operator\">=</span> mpl<span class=\"token punctuation\">.</span>dates<span class=\"token punctuation\">.</span>ConciseDateFormatter<span class=\"token punctuation\">(</span>ax<span class=\"token punctuation\">.</span>xaxis<span class=\"token punctuation\">.</span>get_major_locator<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  ax<span class=\"token punctuation\">.</span>xaxis<span class=\"token punctuation\">.</span>set_major_formatter<span class=\"token punctuation\">(</span>cdf<span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne9_3<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"使用字符串做轴\"><a href=\"#使用字符串做轴\" class=\"headerlink\" title=\"使用字符串做轴\"></a>使用字符串做轴</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">e9_4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  fig<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> layout<span class=\"token operator\">=</span><span class=\"token string\">'constrained'</span><span class=\"token punctuation\">)</span>\n  categories <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'turnips'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rutabaga'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cucumber'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'pumpkins'</span><span class=\"token punctuation\">]</span>\n\n  ax<span class=\"token punctuation\">.</span>bar<span class=\"token punctuation\">(</span>categories<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>categories<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne9_4<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"添加更多的轴\"><a href=\"#添加更多的轴\" class=\"headerlink\" title=\"添加更多的轴\"></a>添加更多的轴</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">e9_5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  t <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span>\n  s <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>cos<span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>pi <span class=\"token operator\">*</span> t<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># fig上的图像为 ax1 和 ax3</span>\n  fig<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>ax1<span class=\"token punctuation\">,</span> ax3<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> layout<span class=\"token operator\">=</span><span class=\"token string\">'constrained'</span><span class=\"token punctuation\">)</span>\n  l1<span class=\"token punctuation\">,</span> <span class=\"token operator\">=</span> ax1<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># ax2 和 ax1 绘制在一起, 共享x轴</span>\n  ax2 <span class=\"token operator\">=</span> ax1<span class=\"token punctuation\">.</span>twinx<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  l2<span class=\"token punctuation\">,</span> <span class=\"token operator\">=</span> ax2<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'C1'</span><span class=\"token punctuation\">)</span>\n  ax2<span class=\"token punctuation\">.</span>legend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>l1<span class=\"token punctuation\">,</span> l2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Sine (left)'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Straight (right)'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  ax3<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span>\n  ax3<span class=\"token punctuation\">.</span>set_xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'Angle [rad]'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\"># secondary_xaxis 用于创建一个新的x轴 传入了和原x轴的互相转换函数</span>\n  ax4 <span class=\"token operator\">=</span> ax3<span class=\"token punctuation\">.</span>secondary_xaxis<span class=\"token punctuation\">(</span><span class=\"token string\">'top'</span><span class=\"token punctuation\">,</span> functions<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>rad2deg<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>deg2rad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  ax4<span class=\"token punctuation\">.</span>set_xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">'Angle [°]'</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne9_5<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"10-色块图\"><a href=\"#10-色块图\" class=\"headerlink\" title=\"10. 色块图\"></a>10. 色块图</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">e10</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  data1<span class=\"token punctuation\">,</span> data2<span class=\"token punctuation\">,</span> data3 <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randn<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n  X<span class=\"token punctuation\">,</span> Y <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>meshgrid<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>linspace<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>linspace<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  Z <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> X<span class=\"token operator\">/</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> X<span class=\"token operator\">**</span><span class=\"token number\">5</span> <span class=\"token operator\">+</span> Y<span class=\"token operator\">**</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> np<span class=\"token punctuation\">.</span>exp<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>X<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> Y<span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\n  fig<span class=\"token punctuation\">,</span> axs <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> layout<span class=\"token operator\">=</span><span class=\"token string\">'constrained'</span><span class=\"token punctuation\">)</span>\n  pc <span class=\"token operator\">=</span> axs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pcolormesh<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> Y<span class=\"token punctuation\">,</span> Z<span class=\"token punctuation\">,</span> vmin<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> vmax<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> cmap<span class=\"token operator\">=</span><span class=\"token string\">'RdBu_r'</span><span class=\"token punctuation\">)</span>\n  fig<span class=\"token punctuation\">.</span>colorbar<span class=\"token punctuation\">(</span>pc<span class=\"token punctuation\">,</span> ax<span class=\"token operator\">=</span>axs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  axs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_title<span class=\"token punctuation\">(</span><span class=\"token string\">'pcolormesh()'</span><span class=\"token punctuation\">)</span>\n\n  co <span class=\"token operator\">=</span> axs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>contourf<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> Y<span class=\"token punctuation\">,</span> Z<span class=\"token punctuation\">,</span> levels<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>linspace<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  fig<span class=\"token punctuation\">.</span>colorbar<span class=\"token punctuation\">(</span>co<span class=\"token punctuation\">,</span> ax<span class=\"token operator\">=</span>axs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  axs<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_title<span class=\"token punctuation\">(</span><span class=\"token string\">'contourf()'</span><span class=\"token punctuation\">)</span>\n\n  pc <span class=\"token operator\">=</span> axs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>Z<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> cmap<span class=\"token operator\">=</span><span class=\"token string\">'plasma'</span><span class=\"token punctuation\">,</span>\n                            norm<span class=\"token operator\">=</span>mpl<span class=\"token punctuation\">.</span>colors<span class=\"token punctuation\">.</span>LogNorm<span class=\"token punctuation\">(</span>vmin<span class=\"token operator\">=</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">,</span> vmax<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  fig<span class=\"token punctuation\">.</span>colorbar<span class=\"token punctuation\">(</span>pc<span class=\"token punctuation\">,</span> ax<span class=\"token operator\">=</span>axs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> extend<span class=\"token operator\">=</span><span class=\"token string\">'both'</span><span class=\"token punctuation\">)</span>\n  axs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_title<span class=\"token punctuation\">(</span><span class=\"token string\">'imshow() with LogNorm()'</span><span class=\"token punctuation\">)</span>\n\n  pc <span class=\"token operator\">=</span> axs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">,</span> data2<span class=\"token punctuation\">,</span> c<span class=\"token operator\">=</span>data3<span class=\"token punctuation\">,</span> cmap<span class=\"token operator\">=</span><span class=\"token string\">'RdBu_r'</span><span class=\"token punctuation\">)</span>\n  fig<span class=\"token punctuation\">.</span>colorbar<span class=\"token punctuation\">(</span>pc<span class=\"token punctuation\">,</span> ax<span class=\"token operator\">=</span>axs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> extend<span class=\"token operator\">=</span><span class=\"token string\">'both'</span><span class=\"token punctuation\">)</span>\n  axs<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_title<span class=\"token punctuation\">(</span><span class=\"token string\">'scatter()'</span><span class=\"token punctuation\">)</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ne10<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"11-多-axes-使用-dict-操作\"><a href=\"#11-多-axes-使用-dict-操作\" class=\"headerlink\" title=\"11. 多 axes 使用 dict 操作\"></a>11. 多 axes 使用 dict 操作</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><div class=\"caption\"><span>python</span></div><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">e11</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  fig<span class=\"token punctuation\">,</span> axd <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplot_mosaic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">'upleft'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'right'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                               <span class=\"token punctuation\">[</span><span class=\"token string\">'lowleft'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'right'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> layout<span class=\"token operator\">=</span><span class=\"token string\">'constrained'</span><span class=\"token punctuation\">)</span>\n  axd<span class=\"token punctuation\">[</span><span class=\"token string\">'upleft'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_title<span class=\"token punctuation\">(</span><span class=\"token string\">'upleft'</span><span class=\"token punctuation\">)</span>\n  axd<span class=\"token punctuation\">[</span><span class=\"token string\">'lowleft'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_title<span class=\"token punctuation\">(</span><span class=\"token string\">'lowleft'</span><span class=\"token punctuation\">)</span>\n  axd<span class=\"token punctuation\">[</span><span class=\"token string\">'right'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>set_title<span class=\"token punctuation\">(</span><span class=\"token string\">'right'</span><span class=\"token punctuation\">)</span>\n\ne11<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"title":"Jupyter入门笔记","date":"2023-11-30T06:29:43.000Z","_content":"\n# 前言\n\n网站 https://jupyter.org/\n\njupyter 项目提供了可供计算的记事本，将代码、资源、交互式计算与文档结合。\n\n<!-- more -->\n\n# 试用\n\n可以通过试用界面 https://jupyter.org/try 直接体验jupyter，建立大致的了解。\n\n# 打开\n\n```jupyter lab``` 在指定路径打开jupyter lab，程序会占用8888端口，可通过```http://localhost:8888/```访问图形化界面。\n\n# 文件\n\njupyter会将执行程序的目录作为文件系统的根目录。\n\njupyter的文件后缀为 ```.ipynb``` 其中可以混合代码、文档、输出。\n\n可以直接在 ```jupyter lab``` 提供的浏览器界面中新建、编辑、删除文件。\n\n# 内容编辑\n\n以下是一个混合了 文档、代码、输出、图像、组件的文件截图，因为导出的PDF不支持组件，所以组件输出为文本。\n\n![](JupyterLab-1.png)\n\n![](JupyterLab-2.png)\n\n![](JupyterLab-3.png)\n\ngithub也支持 ```.ipynb``` 格式，但同样不支持组件，这是上方图片文件的原始内容：\n\nhttps://github.com/vitsumoc/exercise-AI-Beginner/blob/main/PyBeginner/jupyter.ipynb","source":"_posts/pythonJupyter.md","raw":"---\ntitle: Jupyter入门笔记\ndate: 2023-11-30 14:29:43\ncategories:\n- python\ntags:\n- python\n- 库\n- 笔记\n- 豆知识\n---\n\n# 前言\n\n网站 https://jupyter.org/\n\njupyter 项目提供了可供计算的记事本，将代码、资源、交互式计算与文档结合。\n\n<!-- more -->\n\n# 试用\n\n可以通过试用界面 https://jupyter.org/try 直接体验jupyter，建立大致的了解。\n\n# 打开\n\n```jupyter lab``` 在指定路径打开jupyter lab，程序会占用8888端口，可通过```http://localhost:8888/```访问图形化界面。\n\n# 文件\n\njupyter会将执行程序的目录作为文件系统的根目录。\n\njupyter的文件后缀为 ```.ipynb``` 其中可以混合代码、文档、输出。\n\n可以直接在 ```jupyter lab``` 提供的浏览器界面中新建、编辑、删除文件。\n\n# 内容编辑\n\n以下是一个混合了 文档、代码、输出、图像、组件的文件截图，因为导出的PDF不支持组件，所以组件输出为文本。\n\n![](JupyterLab-1.png)\n\n![](JupyterLab-2.png)\n\n![](JupyterLab-3.png)\n\ngithub也支持 ```.ipynb``` 格式，但同样不支持组件，这是上方图片文件的原始内容：\n\nhttps://github.com/vitsumoc/exercise-AI-Beginner/blob/main/PyBeginner/jupyter.ipynb","slug":"pythonJupyter","published":1,"updated":"2023-11-30T07:49:26.372Z","_id":"clpkvx8tw000cy0ti7d7x5ia4","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>网站 <a href=\"https://jupyter.org/\">https://jupyter.org/</a></p>\n<p>jupyter 项目提供了可供计算的记事本，将代码、资源、交互式计算与文档结合。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"试用\"><a href=\"#试用\" class=\"headerlink\" title=\"试用\"></a>试用</h1><p>可以通过试用界面 <a href=\"https://jupyter.org/try\">https://jupyter.org/try</a> 直接体验jupyter，建立大致的了解。</p>\n<h1 id=\"打开\"><a href=\"#打开\" class=\"headerlink\" title=\"打开\"></a>打开</h1><p><code>jupyter lab</code> 在指定路径打开jupyter lab，程序会占用8888端口，可通过<code>http://localhost:8888/</code>访问图形化界面。</p>\n<h1 id=\"文件\"><a href=\"#文件\" class=\"headerlink\" title=\"文件\"></a>文件</h1><p>jupyter会将执行程序的目录作为文件系统的根目录。</p>\n<p>jupyter的文件后缀为 <code>.ipynb</code> 其中可以混合代码、文档、输出。</p>\n<p>可以直接在 <code>jupyter lab</code> 提供的浏览器界面中新建、编辑、删除文件。</p>\n<h1 id=\"内容编辑\"><a href=\"#内容编辑\" class=\"headerlink\" title=\"内容编辑\"></a>内容编辑</h1><p>以下是一个混合了 文档、代码、输出、图像、组件的文件截图，因为导出的PDF不支持组件，所以组件输出为文本。</p>\n<p><img src=\"/2023/11/30/pythonJupyter/JupyterLab-1.png\"></p>\n<p><img src=\"/2023/11/30/pythonJupyter/JupyterLab-2.png\"></p>\n<p><img src=\"/2023/11/30/pythonJupyter/JupyterLab-3.png\"></p>\n<p>github也支持 <code>.ipynb</code> 格式，但同样不支持组件，这是上方图片文件的原始内容：</p>\n<p><a href=\"https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/PyBeginner/jupyter.ipynb\">https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/PyBeginner/jupyter.ipynb</a></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>网站 <a href=\"https://jupyter.org/\">https://jupyter.org/</a></p>\n<p>jupyter 项目提供了可供计算的记事本，将代码、资源、交互式计算与文档结合。</p>","more":"<h1 id=\"试用\"><a href=\"#试用\" class=\"headerlink\" title=\"试用\"></a>试用</h1><p>可以通过试用界面 <a href=\"https://jupyter.org/try\">https://jupyter.org/try</a> 直接体验jupyter，建立大致的了解。</p>\n<h1 id=\"打开\"><a href=\"#打开\" class=\"headerlink\" title=\"打开\"></a>打开</h1><p><code>jupyter lab</code> 在指定路径打开jupyter lab，程序会占用8888端口，可通过<code>http://localhost:8888/</code>访问图形化界面。</p>\n<h1 id=\"文件\"><a href=\"#文件\" class=\"headerlink\" title=\"文件\"></a>文件</h1><p>jupyter会将执行程序的目录作为文件系统的根目录。</p>\n<p>jupyter的文件后缀为 <code>.ipynb</code> 其中可以混合代码、文档、输出。</p>\n<p>可以直接在 <code>jupyter lab</code> 提供的浏览器界面中新建、编辑、删除文件。</p>\n<h1 id=\"内容编辑\"><a href=\"#内容编辑\" class=\"headerlink\" title=\"内容编辑\"></a>内容编辑</h1><p>以下是一个混合了 文档、代码、输出、图像、组件的文件截图，因为导出的PDF不支持组件，所以组件输出为文本。</p>\n<p><img src=\"/2023/11/30/pythonJupyter/JupyterLab-1.png\"></p>\n<p><img src=\"/2023/11/30/pythonJupyter/JupyterLab-2.png\"></p>\n<p><img src=\"/2023/11/30/pythonJupyter/JupyterLab-3.png\"></p>\n<p>github也支持 <code>.ipynb</code> 格式，但同样不支持组件，这是上方图片文件的原始内容：</p>\n<p><a href=\"https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/PyBeginner/jupyter.ipynb\">https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/PyBeginner/jupyter.ipynb</a></p>"},{"title":"AI入门笔记（3）——感知器","date":"2023-12-01T01:32:11.000Z","_content":"\n# 课程\n\nhttps://github.com/microsoft/AI-For-Beginners/blob/main/lessons/3-NeuralNetworks/03-Perceptron/README.md\n\n这是微软提供的AI-For-Beginners课程第三课，介绍了什么是感知器（Perceptron）\n\n<!-- more -->\n\n# 内容\n\n感知器```Perceptron```是一种二元分类模型，总是能根据输入产生一个+1或-1的输出。\n\n感知器进行计算时需要权重```weight```的参与，权重会导致感知器产生正确或错误的结果，训练的过程既是修改权重不断增加结果的正确率。\n\n感知器只能解决线性分类的问题，如果一个问题无法被线性分类，感知器就不会收敛，例如异或问题。\n\n\n# 随堂作业\n\n在本课的作业中，需要使用 ```Jupyter``` 构建代码+文档的环境，使用 ```sklearn``` 创造测试数据，使用 ```numPy``` 表示和处理数据，使用 ```matpoltlib``` 绘制数据图像，使用 ```ipywidgets``` 交互式的查看训练过程。\n\n## 训练感知器分类数据\n\nhttps://github.com/vitsumoc/exercise-AI-Beginner/blob/main/3-Perceptron/perceptron.py\n\n作业中使用代码实现了训练感知器的过程：\n\n1. 创建数据集合，分类为训练数据和测试数据\n2. 将训练数据分类为pos和neg\n3. 初始化权重值\n4. 设置训练次数并开始训练，每次选择随机的数据进行训练\n5. 在每次训练错误时，使用本次选择的数据对权重进行调整\n6. 使用测试数据验证训练后的权重值\n\n## 感知器的局限性\n\nhttps://github.com/vitsumoc/exercise-AI-Beginner/blob/main/3-Perceptron/xor.ipynb\n\n感知器只能解决线性分类问题，对于无法使用一条直线分类的问题，往往就无法很好的收敛。\n\n作业中的异或问题就是一个完全无法收敛的例子。\n\n## 使用感知器 + MNIST 数据识别手写数字\n\nhttps://github.com/vitsumoc/exercise-AI-Beginner/blob/main/3-Perceptron/mnist.ipynb\n\n在这个作业中使用感知器区分手写数字图像。\n\n使用PCA降低特征的维度，分析感知器训练结果差异的原因。\n\n## 训练感知器识别任何手写数字\n\n这个作业中需要拓展上一个作业的功能，训练10个不同的感知器，用来识别0-9全部的数字。\n\nhttps://github.com/vitsumoc/exercise-AI-Beginner/blob/main/3-Perceptron/anyNum.ipynb\n\n参考上一个作业的方式，训练了10组weights，来判断一个数字是或不是特定的数字。\n\n每个感知器训练10000次，最终正确率 74.7%。","source":"_posts/AiForBeginners-3.md","raw":"---\ntitle: AI入门笔记（3）——感知器\ndate: 2023-12-01 09:32:11\ncategories: \n- AI学习\ntags:\n- AI\n- 笔记\n---\n\n# 课程\n\nhttps://github.com/microsoft/AI-For-Beginners/blob/main/lessons/3-NeuralNetworks/03-Perceptron/README.md\n\n这是微软提供的AI-For-Beginners课程第三课，介绍了什么是感知器（Perceptron）\n\n<!-- more -->\n\n# 内容\n\n感知器```Perceptron```是一种二元分类模型，总是能根据输入产生一个+1或-1的输出。\n\n感知器进行计算时需要权重```weight```的参与，权重会导致感知器产生正确或错误的结果，训练的过程既是修改权重不断增加结果的正确率。\n\n感知器只能解决线性分类的问题，如果一个问题无法被线性分类，感知器就不会收敛，例如异或问题。\n\n\n# 随堂作业\n\n在本课的作业中，需要使用 ```Jupyter``` 构建代码+文档的环境，使用 ```sklearn``` 创造测试数据，使用 ```numPy``` 表示和处理数据，使用 ```matpoltlib``` 绘制数据图像，使用 ```ipywidgets``` 交互式的查看训练过程。\n\n## 训练感知器分类数据\n\nhttps://github.com/vitsumoc/exercise-AI-Beginner/blob/main/3-Perceptron/perceptron.py\n\n作业中使用代码实现了训练感知器的过程：\n\n1. 创建数据集合，分类为训练数据和测试数据\n2. 将训练数据分类为pos和neg\n3. 初始化权重值\n4. 设置训练次数并开始训练，每次选择随机的数据进行训练\n5. 在每次训练错误时，使用本次选择的数据对权重进行调整\n6. 使用测试数据验证训练后的权重值\n\n## 感知器的局限性\n\nhttps://github.com/vitsumoc/exercise-AI-Beginner/blob/main/3-Perceptron/xor.ipynb\n\n感知器只能解决线性分类问题，对于无法使用一条直线分类的问题，往往就无法很好的收敛。\n\n作业中的异或问题就是一个完全无法收敛的例子。\n\n## 使用感知器 + MNIST 数据识别手写数字\n\nhttps://github.com/vitsumoc/exercise-AI-Beginner/blob/main/3-Perceptron/mnist.ipynb\n\n在这个作业中使用感知器区分手写数字图像。\n\n使用PCA降低特征的维度，分析感知器训练结果差异的原因。\n\n## 训练感知器识别任何手写数字\n\n这个作业中需要拓展上一个作业的功能，训练10个不同的感知器，用来识别0-9全部的数字。\n\nhttps://github.com/vitsumoc/exercise-AI-Beginner/blob/main/3-Perceptron/anyNum.ipynb\n\n参考上一个作业的方式，训练了10组weights，来判断一个数字是或不是特定的数字。\n\n每个感知器训练10000次，最终正确率 74.7%。","slug":"AiForBeginners-3","published":1,"updated":"2023-12-01T02:47:52.281Z","_id":"clplyeyyt0000a0tib2svg07l","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"课程\"><a href=\"#课程\" class=\"headerlink\" title=\"课程\"></a>课程</h1><p><a href=\"https://github.com/microsoft/AI-For-Beginners/blob/main/lessons/3-NeuralNetworks/03-Perceptron/README.md\">https://github.com/microsoft/AI-For-Beginners/blob/main/lessons/3-NeuralNetworks/03-Perceptron/README.md</a></p>\n<p>这是微软提供的AI-For-Beginners课程第三课，介绍了什么是感知器（Perceptron）</p>\n<span id=\"more\"></span>\n\n<h1 id=\"内容\"><a href=\"#内容\" class=\"headerlink\" title=\"内容\"></a>内容</h1><p>感知器<code>Perceptron</code>是一种二元分类模型，总是能根据输入产生一个+1或-1的输出。</p>\n<p>感知器进行计算时需要权重<code>weight</code>的参与，权重会导致感知器产生正确或错误的结果，训练的过程既是修改权重不断增加结果的正确率。</p>\n<p>感知器只能解决线性分类的问题，如果一个问题无法被线性分类，感知器就不会收敛，例如异或问题。</p>\n<h1 id=\"随堂作业\"><a href=\"#随堂作业\" class=\"headerlink\" title=\"随堂作业\"></a>随堂作业</h1><p>在本课的作业中，需要使用 <code>Jupyter</code> 构建代码+文档的环境，使用 <code>sklearn</code> 创造测试数据，使用 <code>numPy</code> 表示和处理数据，使用 <code>matpoltlib</code> 绘制数据图像，使用 <code>ipywidgets</code> 交互式的查看训练过程。</p>\n<h2 id=\"训练感知器分类数据\"><a href=\"#训练感知器分类数据\" class=\"headerlink\" title=\"训练感知器分类数据\"></a>训练感知器分类数据</h2><p><a href=\"https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/3-Perceptron/perceptron.py\">https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/3-Perceptron/perceptron.py</a></p>\n<p>作业中使用代码实现了训练感知器的过程：</p>\n<ol>\n<li>创建数据集合，分类为训练数据和测试数据</li>\n<li>将训练数据分类为pos和neg</li>\n<li>初始化权重值</li>\n<li>设置训练次数并开始训练，每次选择随机的数据进行训练</li>\n<li>在每次训练错误时，使用本次选择的数据对权重进行调整</li>\n<li>使用测试数据验证训练后的权重值</li>\n</ol>\n<h2 id=\"感知器的局限性\"><a href=\"#感知器的局限性\" class=\"headerlink\" title=\"感知器的局限性\"></a>感知器的局限性</h2><p><a href=\"https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/3-Perceptron/xor.ipynb\">https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/3-Perceptron/xor.ipynb</a></p>\n<p>感知器只能解决线性分类问题，对于无法使用一条直线分类的问题，往往就无法很好的收敛。</p>\n<p>作业中的异或问题就是一个完全无法收敛的例子。</p>\n<h2 id=\"使用感知器-MNIST-数据识别手写数字\"><a href=\"#使用感知器-MNIST-数据识别手写数字\" class=\"headerlink\" title=\"使用感知器 + MNIST 数据识别手写数字\"></a>使用感知器 + MNIST 数据识别手写数字</h2><p><a href=\"https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/3-Perceptron/mnist.ipynb\">https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/3-Perceptron/mnist.ipynb</a></p>\n<p>在这个作业中使用感知器区分手写数字图像。</p>\n<p>使用PCA降低特征的维度，分析感知器训练结果差异的原因。</p>\n<h2 id=\"训练感知器识别任何手写数字\"><a href=\"#训练感知器识别任何手写数字\" class=\"headerlink\" title=\"训练感知器识别任何手写数字\"></a>训练感知器识别任何手写数字</h2><p>这个作业中需要拓展上一个作业的功能，训练10个不同的感知器，用来识别0-9全部的数字。</p>\n<p><a href=\"https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/3-Perceptron/anyNum.ipynb\">https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/3-Perceptron/anyNum.ipynb</a></p>\n<p>参考上一个作业的方式，训练了10组weights，来判断一个数字是或不是特定的数字。</p>\n<p>每个感知器训练10000次，最终正确率 74.7%。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"课程\"><a href=\"#课程\" class=\"headerlink\" title=\"课程\"></a>课程</h1><p><a href=\"https://github.com/microsoft/AI-For-Beginners/blob/main/lessons/3-NeuralNetworks/03-Perceptron/README.md\">https://github.com/microsoft/AI-For-Beginners/blob/main/lessons/3-NeuralNetworks/03-Perceptron/README.md</a></p>\n<p>这是微软提供的AI-For-Beginners课程第三课，介绍了什么是感知器（Perceptron）</p>","more":"<h1 id=\"内容\"><a href=\"#内容\" class=\"headerlink\" title=\"内容\"></a>内容</h1><p>感知器<code>Perceptron</code>是一种二元分类模型，总是能根据输入产生一个+1或-1的输出。</p>\n<p>感知器进行计算时需要权重<code>weight</code>的参与，权重会导致感知器产生正确或错误的结果，训练的过程既是修改权重不断增加结果的正确率。</p>\n<p>感知器只能解决线性分类的问题，如果一个问题无法被线性分类，感知器就不会收敛，例如异或问题。</p>\n<h1 id=\"随堂作业\"><a href=\"#随堂作业\" class=\"headerlink\" title=\"随堂作业\"></a>随堂作业</h1><p>在本课的作业中，需要使用 <code>Jupyter</code> 构建代码+文档的环境，使用 <code>sklearn</code> 创造测试数据，使用 <code>numPy</code> 表示和处理数据，使用 <code>matpoltlib</code> 绘制数据图像，使用 <code>ipywidgets</code> 交互式的查看训练过程。</p>\n<h2 id=\"训练感知器分类数据\"><a href=\"#训练感知器分类数据\" class=\"headerlink\" title=\"训练感知器分类数据\"></a>训练感知器分类数据</h2><p><a href=\"https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/3-Perceptron/perceptron.py\">https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/3-Perceptron/perceptron.py</a></p>\n<p>作业中使用代码实现了训练感知器的过程：</p>\n<ol>\n<li>创建数据集合，分类为训练数据和测试数据</li>\n<li>将训练数据分类为pos和neg</li>\n<li>初始化权重值</li>\n<li>设置训练次数并开始训练，每次选择随机的数据进行训练</li>\n<li>在每次训练错误时，使用本次选择的数据对权重进行调整</li>\n<li>使用测试数据验证训练后的权重值</li>\n</ol>\n<h2 id=\"感知器的局限性\"><a href=\"#感知器的局限性\" class=\"headerlink\" title=\"感知器的局限性\"></a>感知器的局限性</h2><p><a href=\"https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/3-Perceptron/xor.ipynb\">https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/3-Perceptron/xor.ipynb</a></p>\n<p>感知器只能解决线性分类问题，对于无法使用一条直线分类的问题，往往就无法很好的收敛。</p>\n<p>作业中的异或问题就是一个完全无法收敛的例子。</p>\n<h2 id=\"使用感知器-MNIST-数据识别手写数字\"><a href=\"#使用感知器-MNIST-数据识别手写数字\" class=\"headerlink\" title=\"使用感知器 + MNIST 数据识别手写数字\"></a>使用感知器 + MNIST 数据识别手写数字</h2><p><a href=\"https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/3-Perceptron/mnist.ipynb\">https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/3-Perceptron/mnist.ipynb</a></p>\n<p>在这个作业中使用感知器区分手写数字图像。</p>\n<p>使用PCA降低特征的维度，分析感知器训练结果差异的原因。</p>\n<h2 id=\"训练感知器识别任何手写数字\"><a href=\"#训练感知器识别任何手写数字\" class=\"headerlink\" title=\"训练感知器识别任何手写数字\"></a>训练感知器识别任何手写数字</h2><p>这个作业中需要拓展上一个作业的功能，训练10个不同的感知器，用来识别0-9全部的数字。</p>\n<p><a href=\"https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/3-Perceptron/anyNum.ipynb\">https://github.com/vitsumoc/exercise-AI-Beginner/blob/main/3-Perceptron/anyNum.ipynb</a></p>\n<p>参考上一个作业的方式，训练了10组weights，来判断一个数字是或不是特定的数字。</p>\n<p>每个感知器训练10000次，最终正确率 74.7%。</p>"},{"title":"使用Systemd管理自启动","date":"2023-12-01T06:19:42.000Z","_content":"\n# 常用命令\n\n启动服务\n\n```shell shell\nsystemctl start service-name\n```\n\n<!-- more -->\n\n停止服务\n\n```shell shell\nsystemctl stop service-name\n```\n\n查看服务状态\n\n```shell shell\nsystemctl status service-name\n```\n\n设置开机自启动\n\n```shell shell\nsystemctl enable service-name\n```\n\n停止开机自启动\n\n```shell shell\nsystemctl disable service-name\n```\n\n# 服务注册\n\n在 ```/etc/systemd/system``` 路径下，创建 ```service-name.service``` 文件，格式如下：\n\n```ini service-name.service\n[Unit]\n# 服务名称\nDescription = xxxx server\nAfter = network.target syslog.target\nWants = network.target\n\n[Service]\nType = simple\n# 启动命令\nExecStart = /home/start.sh\n\n[Install]\nWantedBy = multi-user.target\n```","source":"_posts/linuxBoot.md","raw":"---\ntitle: 使用Systemd管理自启动\ndate: 2023-12-01 14:19:42\ncategories:\n- 豆知识\ntags:\n- 豆知识\n- 环境配置\n- Linux\n---\n\n# 常用命令\n\n启动服务\n\n```shell shell\nsystemctl start service-name\n```\n\n<!-- more -->\n\n停止服务\n\n```shell shell\nsystemctl stop service-name\n```\n\n查看服务状态\n\n```shell shell\nsystemctl status service-name\n```\n\n设置开机自启动\n\n```shell shell\nsystemctl enable service-name\n```\n\n停止开机自启动\n\n```shell shell\nsystemctl disable service-name\n```\n\n# 服务注册\n\n在 ```/etc/systemd/system``` 路径下，创建 ```service-name.service``` 文件，格式如下：\n\n```ini service-name.service\n[Unit]\n# 服务名称\nDescription = xxxx server\nAfter = network.target syslog.target\nWants = network.target\n\n[Service]\nType = simple\n# 启动命令\nExecStart = /home/start.sh\n\n[Install]\nWantedBy = multi-user.target\n```","slug":"linuxBoot","published":1,"updated":"2023-12-07T07:52:57.579Z","_id":"clpm95uc50000dgti24k88032","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h1><p>启动服务</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>shell</span></div><code class=\"language-bash\">systemctl start service-name<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure>\n\n<span id=\"more\"></span>\n\n<p>停止服务</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>shell</span></div><code class=\"language-bash\">systemctl stop service-name<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure>\n\n<p>查看服务状态</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>shell</span></div><code class=\"language-bash\">systemctl status service-name<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure>\n\n<p>设置开机自启动</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>shell</span></div><code class=\"language-bash\">systemctl <span class=\"token builtin class-name\">enable</span> service-name<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure>\n\n<p>停止开机自启动</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>shell</span></div><code class=\"language-bash\">systemctl disable service-name<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure>\n\n<h1 id=\"服务注册\"><a href=\"#服务注册\" class=\"headerlink\" title=\"服务注册\"></a>服务注册</h1><p>在 <code>/etc/systemd/system</code> 路径下，创建 <code>service-name.service</code> 文件，格式如下：</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-ini\" data-language=\"ini\"><div class=\"caption\"><span>service-name.service</span></div><code class=\"language-ini\"><span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">Unit</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token comment\"># 服务名称</span>\n<span class=\"token key attr-name\">Description</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">xxxx server</span>\n<span class=\"token key attr-name\">After</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">network.target syslog.target</span>\n<span class=\"token key attr-name\">Wants</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">network.target</span>\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">Service</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">Type</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">simple</span>\n<span class=\"token comment\"># 启动命令</span>\n<span class=\"token key attr-name\">ExecStart</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">/home/start.sh</span>\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">Install</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">WantedBy</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">multi-user.target</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>","site":{"data":{}},"excerpt":"<h1 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h1><p>启动服务</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>shell</span></div><code class=\"language-bash\">systemctl start service-name<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>","more":"<p>停止服务</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>shell</span></div><code class=\"language-bash\">systemctl stop service-name<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>查看服务状态</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>shell</span></div><code class=\"language-bash\">systemctl status service-name<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>设置开机自启动</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>shell</span></div><code class=\"language-bash\">systemctl <span class=\"token builtin class-name\">enable</span> service-name<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>停止开机自启动</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>shell</span></div><code class=\"language-bash\">systemctl disable service-name<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h1 id=\"服务注册\"><a href=\"#服务注册\" class=\"headerlink\" title=\"服务注册\"></a>服务注册</h1><p>在 <code>/etc/systemd/system</code> 路径下，创建 <code>service-name.service</code> 文件，格式如下：</p>\n<pre class=\"line-numbers language-ini\" data-language=\"ini\"><div class=\"caption\"><span>service-name.service</span></div><code class=\"language-ini\"><span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">Unit</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token comment\"># 服务名称</span>\n<span class=\"token key attr-name\">Description</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">xxxx server</span>\n<span class=\"token key attr-name\">After</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">network.target syslog.target</span>\n<span class=\"token key attr-name\">Wants</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">network.target</span>\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">Service</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">Type</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">simple</span>\n<span class=\"token comment\"># 启动命令</span>\n<span class=\"token key attr-name\">ExecStart</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">/home/start.sh</span>\n\n<span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">Install</span><span class=\"token punctuation\">]</span></span>\n<span class=\"token key attr-name\">WantedBy</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">multi-user.target</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"title":"在golang中使用lua","date":"2023-12-05T03:25:15.000Z","_content":"\n使用```gopher-lua```，在golang中使用lua。```gopher-lua``` 项目地址：\n\nhttps://github.com/yuin/gopher-lua\n\n<!-- more -->\n\n使用示例仓库地址：\n\nhttps://github.com/vitsumoc/my-golua\n\n示例列表：\n\n+ 最基础的用法\n+ 基础数据类型\n+ 在lua中调用go方法\n+ 在go中使用lua协程\n+ 示范如何手动开启模块\n+ 在lua中使用go模块\n+ 在golang中调用lua方法\n+ 在lua中使用golang数据\n+ 通过context控制停止\n+ 在有协程的情况下使用context控制\n+ 共享lua文件字节码, 减少开销\n+ 通过go协程跑lua的示例 可以把ch带到lua中 和相关限制\n+ 在lua中使用ch的例子\n+ lua虚拟机池\n+ 在golang中提供钩子, 使lua可以注册脚本, 在脚本中获得并修改用户数据","source":"_posts/golua.md","raw":"---\ntitle: 在golang中使用lua\ndate: 2023-12-05 11:25:15\ncategories:\n- 小玩具\ntags:\n- 小玩具\n- golang\n- 库\n---\n\n使用```gopher-lua```，在golang中使用lua。```gopher-lua``` 项目地址：\n\nhttps://github.com/yuin/gopher-lua\n\n<!-- more -->\n\n使用示例仓库地址：\n\nhttps://github.com/vitsumoc/my-golua\n\n示例列表：\n\n+ 最基础的用法\n+ 基础数据类型\n+ 在lua中调用go方法\n+ 在go中使用lua协程\n+ 示范如何手动开启模块\n+ 在lua中使用go模块\n+ 在golang中调用lua方法\n+ 在lua中使用golang数据\n+ 通过context控制停止\n+ 在有协程的情况下使用context控制\n+ 共享lua文件字节码, 减少开销\n+ 通过go协程跑lua的示例 可以把ch带到lua中 和相关限制\n+ 在lua中使用ch的例子\n+ lua虚拟机池\n+ 在golang中提供钩子, 使lua可以注册脚本, 在脚本中获得并修改用户数据","slug":"golua","published":1,"updated":"2023-12-05T03:29:24.650Z","_id":"clprs493q00007cti957a63r0","comments":1,"layout":"post","photos":[],"link":"","content":"<p>使用<code>gopher-lua</code>，在golang中使用lua。<code>gopher-lua</code> 项目地址：</p>\n<p><a href=\"https://github.com/yuin/gopher-lua\">https://github.com/yuin/gopher-lua</a></p>\n<span id=\"more\"></span>\n\n<p>使用示例仓库地址：</p>\n<p><a href=\"https://github.com/vitsumoc/my-golua\">https://github.com/vitsumoc/my-golua</a></p>\n<p>示例列表：</p>\n<ul>\n<li>最基础的用法</li>\n<li>基础数据类型</li>\n<li>在lua中调用go方法</li>\n<li>在go中使用lua协程</li>\n<li>示范如何手动开启模块</li>\n<li>在lua中使用go模块</li>\n<li>在golang中调用lua方法</li>\n<li>在lua中使用golang数据</li>\n<li>通过context控制停止</li>\n<li>在有协程的情况下使用context控制</li>\n<li>共享lua文件字节码, 减少开销</li>\n<li>通过go协程跑lua的示例 可以把ch带到lua中 和相关限制</li>\n<li>在lua中使用ch的例子</li>\n<li>lua虚拟机池</li>\n<li>在golang中提供钩子, 使lua可以注册脚本, 在脚本中获得并修改用户数据</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>使用<code>gopher-lua</code>，在golang中使用lua。<code>gopher-lua</code> 项目地址：</p>\n<p><a href=\"https://github.com/yuin/gopher-lua\">https://github.com/yuin/gopher-lua</a></p>","more":"<p>使用示例仓库地址：</p>\n<p><a href=\"https://github.com/vitsumoc/my-golua\">https://github.com/vitsumoc/my-golua</a></p>\n<p>示例列表：</p>\n<ul>\n<li>最基础的用法</li>\n<li>基础数据类型</li>\n<li>在lua中调用go方法</li>\n<li>在go中使用lua协程</li>\n<li>示范如何手动开启模块</li>\n<li>在lua中使用go模块</li>\n<li>在golang中调用lua方法</li>\n<li>在lua中使用golang数据</li>\n<li>通过context控制停止</li>\n<li>在有协程的情况下使用context控制</li>\n<li>共享lua文件字节码, 减少开销</li>\n<li>通过go协程跑lua的示例 可以把ch带到lua中 和相关限制</li>\n<li>在lua中使用ch的例子</li>\n<li>lua虚拟机池</li>\n<li>在golang中提供钩子, 使lua可以注册脚本, 在脚本中获得并修改用户数据</li>\n</ul>"},{"title":"工作周报可视化","date":"2023-12-05T03:31:51.000Z","_content":"\n# 起因\n\n这个项目是一个纯粹的小玩具，起因是我公司的工作周报都是 ```.doc``` 格式存储的，现在到年底了，我又比较想知道我一年都干了哪些工作。显而易见的一个方式就是提取所有周报文字内容做词频分析。\n\n<!-- more -->\n\n# 效果\n\n完成之后的效果还算不错，源码也放在了github上：\n\nhttps://github.com/vitsumoc/weekreport2chart\n\n提取一段时间的工作周报内容，生成词云和河流图\n\n![](wordcloud.png)\n\n![](river.png)\n\n可以直接过滤低频词汇，或手动操作删除某些虚词、连词等\n\n![](disable.png)\n\n# 相关库\n\n使用libreoffice将doc转为docx\n\n使用结巴分词分词：https://github.com/fxsjy/jieba\n\n使用wordcloudjs词云：https://wordcloud2-js.timdream.org/#love\n\n使用echarts河流图","source":"_posts/weekreport2chart.md","raw":"---\ntitle: 工作周报可视化\ndate: 2023-12-05 11:31:51\ncategories:\n- 小玩具\ntags:\n- 小玩具\n- python\n- js\n---\n\n# 起因\n\n这个项目是一个纯粹的小玩具，起因是我公司的工作周报都是 ```.doc``` 格式存储的，现在到年底了，我又比较想知道我一年都干了哪些工作。显而易见的一个方式就是提取所有周报文字内容做词频分析。\n\n<!-- more -->\n\n# 效果\n\n完成之后的效果还算不错，源码也放在了github上：\n\nhttps://github.com/vitsumoc/weekreport2chart\n\n提取一段时间的工作周报内容，生成词云和河流图\n\n![](wordcloud.png)\n\n![](river.png)\n\n可以直接过滤低频词汇，或手动操作删除某些虚词、连词等\n\n![](disable.png)\n\n# 相关库\n\n使用libreoffice将doc转为docx\n\n使用结巴分词分词：https://github.com/fxsjy/jieba\n\n使用wordcloudjs词云：https://wordcloud2-js.timdream.org/#love\n\n使用echarts河流图","slug":"weekreport2chart","published":1,"updated":"2023-12-05T07:04:14.924Z","_id":"clprsal5p0000p4ti8ye19bae","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h1><p>这个项目是一个纯粹的小玩具，起因是我公司的工作周报都是 <code>.doc</code> 格式存储的，现在到年底了，我又比较想知道我一年都干了哪些工作。显而易见的一个方式就是提取所有周报文字内容做词频分析。</p>\n<span id=\"more\"></span>\n\n<h1 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h1><p>完成之后的效果还算不错，源码也放在了github上：</p>\n<p><a href=\"https://github.com/vitsumoc/weekreport2chart\">https://github.com/vitsumoc/weekreport2chart</a></p>\n<p>提取一段时间的工作周报内容，生成词云和河流图</p>\n<p><img src=\"/2023/12/05/weekreport2chart/wordcloud.png\"></p>\n<p><img src=\"/2023/12/05/weekreport2chart/river.png\"></p>\n<p>可以直接过滤低频词汇，或手动操作删除某些虚词、连词等</p>\n<p><img src=\"/2023/12/05/weekreport2chart/disable.png\"></p>\n<h1 id=\"相关库\"><a href=\"#相关库\" class=\"headerlink\" title=\"相关库\"></a>相关库</h1><p>使用libreoffice将doc转为docx</p>\n<p>使用结巴分词分词：<a href=\"https://github.com/fxsjy/jieba\">https://github.com/fxsjy/jieba</a></p>\n<p>使用wordcloudjs词云：<a href=\"https://wordcloud2-js.timdream.org/#love\">https://wordcloud2-js.timdream.org/#love</a></p>\n<p>使用echarts河流图</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h1><p>这个项目是一个纯粹的小玩具，起因是我公司的工作周报都是 <code>.doc</code> 格式存储的，现在到年底了，我又比较想知道我一年都干了哪些工作。显而易见的一个方式就是提取所有周报文字内容做词频分析。</p>","more":"<h1 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h1><p>完成之后的效果还算不错，源码也放在了github上：</p>\n<p><a href=\"https://github.com/vitsumoc/weekreport2chart\">https://github.com/vitsumoc/weekreport2chart</a></p>\n<p>提取一段时间的工作周报内容，生成词云和河流图</p>\n<p><img src=\"/2023/12/05/weekreport2chart/wordcloud.png\"></p>\n<p><img src=\"/2023/12/05/weekreport2chart/river.png\"></p>\n<p>可以直接过滤低频词汇，或手动操作删除某些虚词、连词等</p>\n<p><img src=\"/2023/12/05/weekreport2chart/disable.png\"></p>\n<h1 id=\"相关库\"><a href=\"#相关库\" class=\"headerlink\" title=\"相关库\"></a>相关库</h1><p>使用libreoffice将doc转为docx</p>\n<p>使用结巴分词分词：<a href=\"https://github.com/fxsjy/jieba\">https://github.com/fxsjy/jieba</a></p>\n<p>使用wordcloudjs词云：<a href=\"https://wordcloud2-js.timdream.org/#love\">https://wordcloud2-js.timdream.org/#love</a></p>\n<p>使用echarts河流图</p>"},{"title":"使用n2n连接不同局域网设备","date":"2023-12-06T06:37:00.000Z","_content":"\n# 前言\n\n目的是想在办公室使用家里的服务器\n\n家里有不固定的公网IP，办公室有固定的公网IP，因此打算使用办公室服务器做Server\n\n为什么不用frp？：因为想获得一个完整的网络服务，而frp只能做端口映射，如果开发过程中新增端口，需要修改frp就很麻烦\n\n<!-- more -->\n\n# n2n简介\n\nn2n 是一个开源项目，地址在这里：\n\nhttps://github.com/ntop/n2n\n\nn2n 是一个二层VPN技术，他能在家里的服务器和办公室的服务器之间创建一个局域网链接\n\nn2n 网络由 ```supernode``` 和 ```edge``` 组成，可以简单理解为同一 ```supernode``` 下的所有 ```edge``` 都处在同一个局域网中。\n\n# 网络环境\n\n## 办公室网络：\n\n+ 网段：192.168.34.0/24\n+ 网关：192.168.34.1\n+ 网关公网地址：88.88.88.88\n+ 服务器地址：192.168.34.194\n\n## 家庭网络\n\n+ 网段：192.168.0.0/24\n+ 网关：192.168.0.1\n+ 网关公网地址：不固定\n+ 服务器地址：192.168.0.12\n\n## 规划n2n网络\n\n由于办公室有固定的公网地址，就由办公室服务器充当 ```supernode```，同时家庭服务器和办公室服务器都是此 ```supernode``` 下的 ```edge```\nn2n 会形成一个新的局域网，规划如下：\n\n+ 网段：10.0.34.0/24\n+ 网关：无\n+ 办公室服务器：10.0.34.21\n+ 家庭服务器：10.0.34.41\n  \n# 实施\n\n## 下载安装n2n\n\n在办公室服务器和家庭服务器都下载并安装 ```n2n```：\n\nhttps://github.com/ntop/n2n/releases\n\n安装完成后，服务器中会自动生成两个服务 ```supernode``` 和 ```edge```\n\n配置文件位于 ```/etc/n2n/```\n\n![](installVerify.png)\n\n## 配置办公室服务器\n\n办公室服务器需要承担三个职能：充当 ```supernode```，充当 ```edge```，转发其他办公室设备到家庭服务器的网络包\n\n### 配置supernode\n\n配置 ```/etc/n2n/community.list``` 文件，指定community名称\n\n``` shell community.list\nmsj2701 # community名称\n```\n\n复制 ```supernode.conf.sample``` 文件，并修改配置内容\n\n```shell shell\ncp /etc/n2n/supernode.conf.sample /etc/n2n/supernode.conf\n```\n\n```shell shell\nvi /etc/n2n/supernode.conf  \n```\n\n``` shell supernode.conf\n-p=7777 # 指定supernode服务端口\n-c=/etc/n2n/community.list # 指定引用的community文件\n```\n\n启动supernode\n\n```shell shell\nsystemctl enable supernode\nsystemctl start supernode\n```\n\n之后可以看到 ```supernode``` 已经启动，并且在7777端口提供服务：\n\n![](supernodeVerify.png)\n\n### 配置edge\n\n配置 ```edge``` 使办公室服务器成为 ```n2n``` 网络的成员\n\n复制 ```edge.conf.sample``` 文件，并修改配置内容\n\n```shell shell\ncp /etc/n2n/edge.conf.sample /etc/n2n/edge.conf\n```\n\n```shell shell\nvi /etc/n2n/edge.conf  \n```\n\n``` shell edge.conf\n-d=n2n0 # 指定虚拟网卡名称\n-c=msj2701 # community名称\n-k=888888 # 通讯加密密钥\n-a=10.0.34.21 # 在n2n网络中的地址\n-l=127.0.0.1:7777 # supernode服务地址\n-r # 允许通过n2n转发数据包\n```\n\n启动edge\n\n```shell shell\nsystemctl enable edge\nsystemctl start edge\n```\n\n启动后，可以看到 ```n2n``` 已经添加了虚拟网卡：\n\n![](edgeVerify.png)\n\n### 开启数据包转发功能\n\n需要通过办公室服务器转发办公室其他电脑到家庭服务器的流量，因此需要在办公室服务器上开启数据包转发功能\n\n需要将 ```/etc/sysctl.conf``` 文件中的 ```net.ipv4.ip_forward``` 修改为 1\n\n```shell shell\nvi /etc/sysctl.conf\n```\n\n``` conf sysctl.conf\n...\nnet.ipv4.ip_forward=1\n...\n```\n\n## 配置办公室网关\n\n### 添加静态路由\n\n其他办公室电脑没有到 ```n2n``` 网络的路由，因此数据包会发送到办公室网关\n\n此时需要配置办公室网关，添加一条指向 ```n2n``` 网络的静态路由，下一条为办公室服务器的办公网地址\n\n![](gwRoute.png)\n\n## 配置家庭服务器\n\n### 配置edge，设置自动添加路由\n\n家庭服务器的 ```edge``` 安装配置过程与办公室服务器的 ```edge``` 大致相同，但有两点需要注意：\n\n1. 无需添加```-r```参数，因为家庭服务器不需要将来自其他设备的包转发到```n2n```网络\n2. 需要添加```-n```参数，这样```edge```启动时会自动产生一条通过```n2n```网络到达办公室网络的路由\n\n``` shell edge.conf\n-d=n2n0 # 指定虚拟网卡名称\n-c=msj2701 # community名称\n-k=888888 # 通讯加密密钥\n-a=10.0.34.41 # 在n2n网络中的地址\n-l=88.88.88.88:17777 # supernode公网地址\n-n=192.168.34.0/24:10.0.34.21\n```\n\n# 验证\n\n## n2n网络验证\n\n使用 ```n2n``` 网络地址从办公室服务器ping家庭服务器，或从家庭服务器ping办公室服务器，成功\n\n此时数据包的实际流向是 办公室服务器->办公室网关->运营商网络->家庭网关->家庭服务器\n\n由于 ```n2n``` vpn的配置，此时可以认为办公室服务器和家庭服务器处在同一局域网下，tracert也仅一跳可达\n\n![](trace.png)\n\n## 办公室电脑到家庭服务器网络验证\n\n办公室电脑ping家庭服务器，成功\n\n此时数据包流向是 办公室电脑->办公室网关->办公室服务器->家庭服务器，其中办公室服务器到家庭服务器是 ```n2n``` 虚拟链路\n\ntracert三跳可达\n\n![](trace2.png)\n\n## 家庭服务器到办公室电脑\n\n家庭服务器ping办公室电脑，成功\n\n此时数据包流向是 家庭服务器->办公室服务器->办公室电脑，其中家庭服务器到办公室服务器是 ```n2n``` 虚拟链路\n\ntracert两跳可达\n\n![](trace3.png)\n","source":"_posts/n2nBeginner.md","raw":"---\ntitle: 使用n2n连接不同局域网设备\ndate: 2023-12-06 14:37:00\ncategories:\n- 网络工具\ntags:\n- 网络工具\n- 网络编程\n---\n\n# 前言\n\n目的是想在办公室使用家里的服务器\n\n家里有不固定的公网IP，办公室有固定的公网IP，因此打算使用办公室服务器做Server\n\n为什么不用frp？：因为想获得一个完整的网络服务，而frp只能做端口映射，如果开发过程中新增端口，需要修改frp就很麻烦\n\n<!-- more -->\n\n# n2n简介\n\nn2n 是一个开源项目，地址在这里：\n\nhttps://github.com/ntop/n2n\n\nn2n 是一个二层VPN技术，他能在家里的服务器和办公室的服务器之间创建一个局域网链接\n\nn2n 网络由 ```supernode``` 和 ```edge``` 组成，可以简单理解为同一 ```supernode``` 下的所有 ```edge``` 都处在同一个局域网中。\n\n# 网络环境\n\n## 办公室网络：\n\n+ 网段：192.168.34.0/24\n+ 网关：192.168.34.1\n+ 网关公网地址：88.88.88.88\n+ 服务器地址：192.168.34.194\n\n## 家庭网络\n\n+ 网段：192.168.0.0/24\n+ 网关：192.168.0.1\n+ 网关公网地址：不固定\n+ 服务器地址：192.168.0.12\n\n## 规划n2n网络\n\n由于办公室有固定的公网地址，就由办公室服务器充当 ```supernode```，同时家庭服务器和办公室服务器都是此 ```supernode``` 下的 ```edge```\nn2n 会形成一个新的局域网，规划如下：\n\n+ 网段：10.0.34.0/24\n+ 网关：无\n+ 办公室服务器：10.0.34.21\n+ 家庭服务器：10.0.34.41\n  \n# 实施\n\n## 下载安装n2n\n\n在办公室服务器和家庭服务器都下载并安装 ```n2n```：\n\nhttps://github.com/ntop/n2n/releases\n\n安装完成后，服务器中会自动生成两个服务 ```supernode``` 和 ```edge```\n\n配置文件位于 ```/etc/n2n/```\n\n![](installVerify.png)\n\n## 配置办公室服务器\n\n办公室服务器需要承担三个职能：充当 ```supernode```，充当 ```edge```，转发其他办公室设备到家庭服务器的网络包\n\n### 配置supernode\n\n配置 ```/etc/n2n/community.list``` 文件，指定community名称\n\n``` shell community.list\nmsj2701 # community名称\n```\n\n复制 ```supernode.conf.sample``` 文件，并修改配置内容\n\n```shell shell\ncp /etc/n2n/supernode.conf.sample /etc/n2n/supernode.conf\n```\n\n```shell shell\nvi /etc/n2n/supernode.conf  \n```\n\n``` shell supernode.conf\n-p=7777 # 指定supernode服务端口\n-c=/etc/n2n/community.list # 指定引用的community文件\n```\n\n启动supernode\n\n```shell shell\nsystemctl enable supernode\nsystemctl start supernode\n```\n\n之后可以看到 ```supernode``` 已经启动，并且在7777端口提供服务：\n\n![](supernodeVerify.png)\n\n### 配置edge\n\n配置 ```edge``` 使办公室服务器成为 ```n2n``` 网络的成员\n\n复制 ```edge.conf.sample``` 文件，并修改配置内容\n\n```shell shell\ncp /etc/n2n/edge.conf.sample /etc/n2n/edge.conf\n```\n\n```shell shell\nvi /etc/n2n/edge.conf  \n```\n\n``` shell edge.conf\n-d=n2n0 # 指定虚拟网卡名称\n-c=msj2701 # community名称\n-k=888888 # 通讯加密密钥\n-a=10.0.34.21 # 在n2n网络中的地址\n-l=127.0.0.1:7777 # supernode服务地址\n-r # 允许通过n2n转发数据包\n```\n\n启动edge\n\n```shell shell\nsystemctl enable edge\nsystemctl start edge\n```\n\n启动后，可以看到 ```n2n``` 已经添加了虚拟网卡：\n\n![](edgeVerify.png)\n\n### 开启数据包转发功能\n\n需要通过办公室服务器转发办公室其他电脑到家庭服务器的流量，因此需要在办公室服务器上开启数据包转发功能\n\n需要将 ```/etc/sysctl.conf``` 文件中的 ```net.ipv4.ip_forward``` 修改为 1\n\n```shell shell\nvi /etc/sysctl.conf\n```\n\n``` conf sysctl.conf\n...\nnet.ipv4.ip_forward=1\n...\n```\n\n## 配置办公室网关\n\n### 添加静态路由\n\n其他办公室电脑没有到 ```n2n``` 网络的路由，因此数据包会发送到办公室网关\n\n此时需要配置办公室网关，添加一条指向 ```n2n``` 网络的静态路由，下一条为办公室服务器的办公网地址\n\n![](gwRoute.png)\n\n## 配置家庭服务器\n\n### 配置edge，设置自动添加路由\n\n家庭服务器的 ```edge``` 安装配置过程与办公室服务器的 ```edge``` 大致相同，但有两点需要注意：\n\n1. 无需添加```-r```参数，因为家庭服务器不需要将来自其他设备的包转发到```n2n```网络\n2. 需要添加```-n```参数，这样```edge```启动时会自动产生一条通过```n2n```网络到达办公室网络的路由\n\n``` shell edge.conf\n-d=n2n0 # 指定虚拟网卡名称\n-c=msj2701 # community名称\n-k=888888 # 通讯加密密钥\n-a=10.0.34.41 # 在n2n网络中的地址\n-l=88.88.88.88:17777 # supernode公网地址\n-n=192.168.34.0/24:10.0.34.21\n```\n\n# 验证\n\n## n2n网络验证\n\n使用 ```n2n``` 网络地址从办公室服务器ping家庭服务器，或从家庭服务器ping办公室服务器，成功\n\n此时数据包的实际流向是 办公室服务器->办公室网关->运营商网络->家庭网关->家庭服务器\n\n由于 ```n2n``` vpn的配置，此时可以认为办公室服务器和家庭服务器处在同一局域网下，tracert也仅一跳可达\n\n![](trace.png)\n\n## 办公室电脑到家庭服务器网络验证\n\n办公室电脑ping家庭服务器，成功\n\n此时数据包流向是 办公室电脑->办公室网关->办公室服务器->家庭服务器，其中办公室服务器到家庭服务器是 ```n2n``` 虚拟链路\n\ntracert三跳可达\n\n![](trace2.png)\n\n## 家庭服务器到办公室电脑\n\n家庭服务器ping办公室电脑，成功\n\n此时数据包流向是 家庭服务器->办公室服务器->办公室电脑，其中家庭服务器到办公室服务器是 ```n2n``` 虚拟链路\n\ntracert两跳可达\n\n![](trace3.png)\n","slug":"n2nBeginner","published":1,"updated":"2023-12-07T07:49:54.291Z","_id":"clptecjzv0000igti0e9dedsg","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>目的是想在办公室使用家里的服务器</p>\n<p>家里有不固定的公网IP，办公室有固定的公网IP，因此打算使用办公室服务器做Server</p>\n<p>为什么不用frp？：因为想获得一个完整的网络服务，而frp只能做端口映射，如果开发过程中新增端口，需要修改frp就很麻烦</p>\n<span id=\"more\"></span>\n\n<h1 id=\"n2n简介\"><a href=\"#n2n简介\" class=\"headerlink\" title=\"n2n简介\"></a>n2n简介</h1><p>n2n 是一个开源项目，地址在这里：</p>\n<p><a href=\"https://github.com/ntop/n2n\">https://github.com/ntop/n2n</a></p>\n<p>n2n 是一个二层VPN技术，他能在家里的服务器和办公室的服务器之间创建一个局域网链接</p>\n<p>n2n 网络由 <code>supernode</code> 和 <code>edge</code> 组成，可以简单理解为同一 <code>supernode</code> 下的所有 <code>edge</code> 都处在同一个局域网中。</p>\n<h1 id=\"网络环境\"><a href=\"#网络环境\" class=\"headerlink\" title=\"网络环境\"></a>网络环境</h1><h2 id=\"办公室网络：\"><a href=\"#办公室网络：\" class=\"headerlink\" title=\"办公室网络：\"></a>办公室网络：</h2><ul>\n<li>网段：192.168.34.0&#x2F;24</li>\n<li>网关：192.168.34.1</li>\n<li>网关公网地址：88.88.88.88</li>\n<li>服务器地址：192.168.34.194</li>\n</ul>\n<h2 id=\"家庭网络\"><a href=\"#家庭网络\" class=\"headerlink\" title=\"家庭网络\"></a>家庭网络</h2><ul>\n<li>网段：192.168.0.0&#x2F;24</li>\n<li>网关：192.168.0.1</li>\n<li>网关公网地址：不固定</li>\n<li>服务器地址：192.168.0.12</li>\n</ul>\n<h2 id=\"规划n2n网络\"><a href=\"#规划n2n网络\" class=\"headerlink\" title=\"规划n2n网络\"></a>规划n2n网络</h2><p>由于办公室有固定的公网地址，就由办公室服务器充当 <code>supernode</code>，同时家庭服务器和办公室服务器都是此 <code>supernode</code> 下的 <code>edge</code><br>n2n 会形成一个新的局域网，规划如下：</p>\n<ul>\n<li>网段：10.0.34.0&#x2F;24</li>\n<li>网关：无</li>\n<li>办公室服务器：10.0.34.21</li>\n<li>家庭服务器：10.0.34.41</li>\n</ul>\n<h1 id=\"实施\"><a href=\"#实施\" class=\"headerlink\" title=\"实施\"></a>实施</h1><h2 id=\"下载安装n2n\"><a href=\"#下载安装n2n\" class=\"headerlink\" title=\"下载安装n2n\"></a>下载安装n2n</h2><p>在办公室服务器和家庭服务器都下载并安装 <code>n2n</code>：</p>\n<p><a href=\"https://github.com/ntop/n2n/releases\">https://github.com/ntop/n2n/releases</a></p>\n<p>安装完成后，服务器中会自动生成两个服务 <code>supernode</code> 和 <code>edge</code></p>\n<p>配置文件位于 <code>/etc/n2n/</code></p>\n<p><img src=\"/2023/12/06/n2nBeginner/installVerify.png\"></p>\n<h2 id=\"配置办公室服务器\"><a href=\"#配置办公室服务器\" class=\"headerlink\" title=\"配置办公室服务器\"></a>配置办公室服务器</h2><p>办公室服务器需要承担三个职能：充当 <code>supernode</code>，充当 <code>edge</code>，转发其他办公室设备到家庭服务器的网络包</p>\n<h3 id=\"配置supernode\"><a href=\"#配置supernode\" class=\"headerlink\" title=\"配置supernode\"></a>配置supernode</h3><p>配置 <code>/etc/n2n/community.list</code> 文件，指定community名称</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>community.list</span></div><code class=\"language-bash\">msj2701 <span class=\"token comment\"># community名称</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure>\n\n<p>复制 <code>supernode.conf.sample</code> 文件，并修改配置内容</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>shell</span></div><code class=\"language-bash\"><span class=\"token function\">cp</span> /etc/n2n/supernode.conf.sample /etc/n2n/supernode.conf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure>\n\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>shell</span></div><code class=\"language-bash\"><span class=\"token function\">vi</span> /etc/n2n/supernode.conf  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure>\n\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>supernode.conf</span></div><code class=\"language-bash\"><span class=\"token parameter variable\">-p</span><span class=\"token operator\">=</span><span class=\"token number\">7777</span> <span class=\"token comment\"># 指定supernode服务端口</span>\n<span class=\"token parameter variable\">-c</span><span class=\"token operator\">=</span>/etc/n2n/community.list <span class=\"token comment\"># 指定引用的community文件</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></div></figure>\n\n<p>启动supernode</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>shell</span></div><code class=\"language-bash\">systemctl <span class=\"token builtin class-name\">enable</span> supernode\nsystemctl start supernode<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></div></figure>\n\n<p>之后可以看到 <code>supernode</code> 已经启动，并且在7777端口提供服务：</p>\n<p><img src=\"/2023/12/06/n2nBeginner/supernodeVerify.png\"></p>\n<h3 id=\"配置edge\"><a href=\"#配置edge\" class=\"headerlink\" title=\"配置edge\"></a>配置edge</h3><p>配置 <code>edge</code> 使办公室服务器成为 <code>n2n</code> 网络的成员</p>\n<p>复制 <code>edge.conf.sample</code> 文件，并修改配置内容</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>shell</span></div><code class=\"language-bash\"><span class=\"token function\">cp</span> /etc/n2n/edge.conf.sample /etc/n2n/edge.conf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure>\n\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>shell</span></div><code class=\"language-bash\"><span class=\"token function\">vi</span> /etc/n2n/edge.conf  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure>\n\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>edge.conf</span></div><code class=\"language-bash\"><span class=\"token parameter variable\">-d</span><span class=\"token operator\">=</span>n2n0 <span class=\"token comment\"># 指定虚拟网卡名称</span>\n<span class=\"token parameter variable\">-c</span><span class=\"token operator\">=</span>msj2701 <span class=\"token comment\"># community名称</span>\n<span class=\"token parameter variable\">-k</span><span class=\"token operator\">=</span><span class=\"token number\">888888</span> <span class=\"token comment\"># 通讯加密密钥</span>\n<span class=\"token parameter variable\">-a</span><span class=\"token operator\">=</span><span class=\"token number\">10.0</span>.34.21 <span class=\"token comment\"># 在n2n网络中的地址</span>\n<span class=\"token parameter variable\">-l</span><span class=\"token operator\">=</span><span class=\"token number\">127.0</span>.0.1:7777 <span class=\"token comment\"># supernode服务地址</span>\n<span class=\"token parameter variable\">-r</span> <span class=\"token comment\"># 允许通过n2n转发数据包</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<p>启动edge</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>shell</span></div><code class=\"language-bash\">systemctl <span class=\"token builtin class-name\">enable</span> edge\nsystemctl start edge<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></div></figure>\n\n<p>启动后，可以看到 <code>n2n</code> 已经添加了虚拟网卡：</p>\n<p><img src=\"/2023/12/06/n2nBeginner/edgeVerify.png\"></p>\n<h3 id=\"开启数据包转发功能\"><a href=\"#开启数据包转发功能\" class=\"headerlink\" title=\"开启数据包转发功能\"></a>开启数据包转发功能</h3><p>需要通过办公室服务器转发办公室其他电脑到家庭服务器的流量，因此需要在办公室服务器上开启数据包转发功能</p>\n<p>需要将 <code>/etc/sysctl.conf</code> 文件中的 <code>net.ipv4.ip_forward</code> 修改为 1</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>shell</span></div><code class=\"language-bash\"><span class=\"token function\">vi</span> /etc/sysctl.conf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure>\n\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-conf\" data-language=\"conf\"><div class=\"caption\"><span>sysctl.conf</span></div><code class=\"language-conf\">...\nnet.ipv4.ip_forward&#x3D;1\n...<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h2 id=\"配置办公室网关\"><a href=\"#配置办公室网关\" class=\"headerlink\" title=\"配置办公室网关\"></a>配置办公室网关</h2><h3 id=\"添加静态路由\"><a href=\"#添加静态路由\" class=\"headerlink\" title=\"添加静态路由\"></a>添加静态路由</h3><p>其他办公室电脑没有到 <code>n2n</code> 网络的路由，因此数据包会发送到办公室网关</p>\n<p>此时需要配置办公室网关，添加一条指向 <code>n2n</code> 网络的静态路由，下一条为办公室服务器的办公网地址</p>\n<p><img src=\"/2023/12/06/n2nBeginner/gwRoute.png\"></p>\n<h2 id=\"配置家庭服务器\"><a href=\"#配置家庭服务器\" class=\"headerlink\" title=\"配置家庭服务器\"></a>配置家庭服务器</h2><h3 id=\"配置edge，设置自动添加路由\"><a href=\"#配置edge，设置自动添加路由\" class=\"headerlink\" title=\"配置edge，设置自动添加路由\"></a>配置edge，设置自动添加路由</h3><p>家庭服务器的 <code>edge</code> 安装配置过程与办公室服务器的 <code>edge</code> 大致相同，但有两点需要注意：</p>\n<ol>\n<li>无需添加<code>-r</code>参数，因为家庭服务器不需要将来自其他设备的包转发到<code>n2n</code>网络</li>\n<li>需要添加<code>-n</code>参数，这样<code>edge</code>启动时会自动产生一条通过<code>n2n</code>网络到达办公室网络的路由</li>\n</ol>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>edge.conf</span></div><code class=\"language-bash\"><span class=\"token parameter variable\">-d</span><span class=\"token operator\">=</span>n2n0 <span class=\"token comment\"># 指定虚拟网卡名称</span>\n<span class=\"token parameter variable\">-c</span><span class=\"token operator\">=</span>msj2701 <span class=\"token comment\"># community名称</span>\n<span class=\"token parameter variable\">-k</span><span class=\"token operator\">=</span><span class=\"token number\">888888</span> <span class=\"token comment\"># 通讯加密密钥</span>\n<span class=\"token parameter variable\">-a</span><span class=\"token operator\">=</span><span class=\"token number\">10.0</span>.34.41 <span class=\"token comment\"># 在n2n网络中的地址</span>\n<span class=\"token parameter variable\">-l</span><span class=\"token operator\">=</span><span class=\"token number\">88.88</span>.88.88:17777 <span class=\"token comment\"># supernode公网地址</span>\n<span class=\"token parameter variable\">-n</span><span class=\"token operator\">=</span><span class=\"token number\">192.168</span>.34.0/24:10.0.34.21<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h1 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h1><h2 id=\"n2n网络验证\"><a href=\"#n2n网络验证\" class=\"headerlink\" title=\"n2n网络验证\"></a>n2n网络验证</h2><p>使用 <code>n2n</code> 网络地址从办公室服务器ping家庭服务器，或从家庭服务器ping办公室服务器，成功</p>\n<p>此时数据包的实际流向是 办公室服务器-&gt;办公室网关-&gt;运营商网络-&gt;家庭网关-&gt;家庭服务器</p>\n<p>由于 <code>n2n</code> vpn的配置，此时可以认为办公室服务器和家庭服务器处在同一局域网下，tracert也仅一跳可达</p>\n<p><img src=\"/2023/12/06/n2nBeginner/trace.png\"></p>\n<h2 id=\"办公室电脑到家庭服务器网络验证\"><a href=\"#办公室电脑到家庭服务器网络验证\" class=\"headerlink\" title=\"办公室电脑到家庭服务器网络验证\"></a>办公室电脑到家庭服务器网络验证</h2><p>办公室电脑ping家庭服务器，成功</p>\n<p>此时数据包流向是 办公室电脑-&gt;办公室网关-&gt;办公室服务器-&gt;家庭服务器，其中办公室服务器到家庭服务器是 <code>n2n</code> 虚拟链路</p>\n<p>tracert三跳可达</p>\n<p><img src=\"/2023/12/06/n2nBeginner/trace2.png\"></p>\n<h2 id=\"家庭服务器到办公室电脑\"><a href=\"#家庭服务器到办公室电脑\" class=\"headerlink\" title=\"家庭服务器到办公室电脑\"></a>家庭服务器到办公室电脑</h2><p>家庭服务器ping办公室电脑，成功</p>\n<p>此时数据包流向是 家庭服务器-&gt;办公室服务器-&gt;办公室电脑，其中家庭服务器到办公室服务器是 <code>n2n</code> 虚拟链路</p>\n<p>tracert两跳可达</p>\n<p><img src=\"/2023/12/06/n2nBeginner/trace3.png\"></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>目的是想在办公室使用家里的服务器</p>\n<p>家里有不固定的公网IP，办公室有固定的公网IP，因此打算使用办公室服务器做Server</p>\n<p>为什么不用frp？：因为想获得一个完整的网络服务，而frp只能做端口映射，如果开发过程中新增端口，需要修改frp就很麻烦</p>","more":"<h1 id=\"n2n简介\"><a href=\"#n2n简介\" class=\"headerlink\" title=\"n2n简介\"></a>n2n简介</h1><p>n2n 是一个开源项目，地址在这里：</p>\n<p><a href=\"https://github.com/ntop/n2n\">https://github.com/ntop/n2n</a></p>\n<p>n2n 是一个二层VPN技术，他能在家里的服务器和办公室的服务器之间创建一个局域网链接</p>\n<p>n2n 网络由 <code>supernode</code> 和 <code>edge</code> 组成，可以简单理解为同一 <code>supernode</code> 下的所有 <code>edge</code> 都处在同一个局域网中。</p>\n<h1 id=\"网络环境\"><a href=\"#网络环境\" class=\"headerlink\" title=\"网络环境\"></a>网络环境</h1><h2 id=\"办公室网络：\"><a href=\"#办公室网络：\" class=\"headerlink\" title=\"办公室网络：\"></a>办公室网络：</h2><ul>\n<li>网段：192.168.34.0&#x2F;24</li>\n<li>网关：192.168.34.1</li>\n<li>网关公网地址：88.88.88.88</li>\n<li>服务器地址：192.168.34.194</li>\n</ul>\n<h2 id=\"家庭网络\"><a href=\"#家庭网络\" class=\"headerlink\" title=\"家庭网络\"></a>家庭网络</h2><ul>\n<li>网段：192.168.0.0&#x2F;24</li>\n<li>网关：192.168.0.1</li>\n<li>网关公网地址：不固定</li>\n<li>服务器地址：192.168.0.12</li>\n</ul>\n<h2 id=\"规划n2n网络\"><a href=\"#规划n2n网络\" class=\"headerlink\" title=\"规划n2n网络\"></a>规划n2n网络</h2><p>由于办公室有固定的公网地址，就由办公室服务器充当 <code>supernode</code>，同时家庭服务器和办公室服务器都是此 <code>supernode</code> 下的 <code>edge</code><br>n2n 会形成一个新的局域网，规划如下：</p>\n<ul>\n<li>网段：10.0.34.0&#x2F;24</li>\n<li>网关：无</li>\n<li>办公室服务器：10.0.34.21</li>\n<li>家庭服务器：10.0.34.41</li>\n</ul>\n<h1 id=\"实施\"><a href=\"#实施\" class=\"headerlink\" title=\"实施\"></a>实施</h1><h2 id=\"下载安装n2n\"><a href=\"#下载安装n2n\" class=\"headerlink\" title=\"下载安装n2n\"></a>下载安装n2n</h2><p>在办公室服务器和家庭服务器都下载并安装 <code>n2n</code>：</p>\n<p><a href=\"https://github.com/ntop/n2n/releases\">https://github.com/ntop/n2n/releases</a></p>\n<p>安装完成后，服务器中会自动生成两个服务 <code>supernode</code> 和 <code>edge</code></p>\n<p>配置文件位于 <code>/etc/n2n/</code></p>\n<p><img src=\"/2023/12/06/n2nBeginner/installVerify.png\"></p>\n<h2 id=\"配置办公室服务器\"><a href=\"#配置办公室服务器\" class=\"headerlink\" title=\"配置办公室服务器\"></a>配置办公室服务器</h2><p>办公室服务器需要承担三个职能：充当 <code>supernode</code>，充当 <code>edge</code>，转发其他办公室设备到家庭服务器的网络包</p>\n<h3 id=\"配置supernode\"><a href=\"#配置supernode\" class=\"headerlink\" title=\"配置supernode\"></a>配置supernode</h3><p>配置 <code>/etc/n2n/community.list</code> 文件，指定community名称</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>community.list</span></div><code class=\"language-bash\">msj2701 <span class=\"token comment\"># community名称</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>复制 <code>supernode.conf.sample</code> 文件，并修改配置内容</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>shell</span></div><code class=\"language-bash\"><span class=\"token function\">cp</span> /etc/n2n/supernode.conf.sample /etc/n2n/supernode.conf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>shell</span></div><code class=\"language-bash\"><span class=\"token function\">vi</span> /etc/n2n/supernode.conf  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>supernode.conf</span></div><code class=\"language-bash\"><span class=\"token parameter variable\">-p</span><span class=\"token operator\">=</span><span class=\"token number\">7777</span> <span class=\"token comment\"># 指定supernode服务端口</span>\n<span class=\"token parameter variable\">-c</span><span class=\"token operator\">=</span>/etc/n2n/community.list <span class=\"token comment\"># 指定引用的community文件</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>启动supernode</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>shell</span></div><code class=\"language-bash\">systemctl <span class=\"token builtin class-name\">enable</span> supernode\nsystemctl start supernode<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>之后可以看到 <code>supernode</code> 已经启动，并且在7777端口提供服务：</p>\n<p><img src=\"/2023/12/06/n2nBeginner/supernodeVerify.png\"></p>\n<h3 id=\"配置edge\"><a href=\"#配置edge\" class=\"headerlink\" title=\"配置edge\"></a>配置edge</h3><p>配置 <code>edge</code> 使办公室服务器成为 <code>n2n</code> 网络的成员</p>\n<p>复制 <code>edge.conf.sample</code> 文件，并修改配置内容</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>shell</span></div><code class=\"language-bash\"><span class=\"token function\">cp</span> /etc/n2n/edge.conf.sample /etc/n2n/edge.conf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>shell</span></div><code class=\"language-bash\"><span class=\"token function\">vi</span> /etc/n2n/edge.conf  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>edge.conf</span></div><code class=\"language-bash\"><span class=\"token parameter variable\">-d</span><span class=\"token operator\">=</span>n2n0 <span class=\"token comment\"># 指定虚拟网卡名称</span>\n<span class=\"token parameter variable\">-c</span><span class=\"token operator\">=</span>msj2701 <span class=\"token comment\"># community名称</span>\n<span class=\"token parameter variable\">-k</span><span class=\"token operator\">=</span><span class=\"token number\">888888</span> <span class=\"token comment\"># 通讯加密密钥</span>\n<span class=\"token parameter variable\">-a</span><span class=\"token operator\">=</span><span class=\"token number\">10.0</span>.34.21 <span class=\"token comment\"># 在n2n网络中的地址</span>\n<span class=\"token parameter variable\">-l</span><span class=\"token operator\">=</span><span class=\"token number\">127.0</span>.0.1:7777 <span class=\"token comment\"># supernode服务地址</span>\n<span class=\"token parameter variable\">-r</span> <span class=\"token comment\"># 允许通过n2n转发数据包</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>启动edge</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>shell</span></div><code class=\"language-bash\">systemctl <span class=\"token builtin class-name\">enable</span> edge\nsystemctl start edge<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>启动后，可以看到 <code>n2n</code> 已经添加了虚拟网卡：</p>\n<p><img src=\"/2023/12/06/n2nBeginner/edgeVerify.png\"></p>\n<h3 id=\"开启数据包转发功能\"><a href=\"#开启数据包转发功能\" class=\"headerlink\" title=\"开启数据包转发功能\"></a>开启数据包转发功能</h3><p>需要通过办公室服务器转发办公室其他电脑到家庭服务器的流量，因此需要在办公室服务器上开启数据包转发功能</p>\n<p>需要将 <code>/etc/sysctl.conf</code> 文件中的 <code>net.ipv4.ip_forward</code> 修改为 1</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>shell</span></div><code class=\"language-bash\"><span class=\"token function\">vi</span> /etc/sysctl.conf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-conf\" data-language=\"conf\"><div class=\"caption\"><span>sysctl.conf</span></div><code class=\"language-conf\">...\nnet.ipv4.ip_forward&#x3D;1\n...<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"配置办公室网关\"><a href=\"#配置办公室网关\" class=\"headerlink\" title=\"配置办公室网关\"></a>配置办公室网关</h2><h3 id=\"添加静态路由\"><a href=\"#添加静态路由\" class=\"headerlink\" title=\"添加静态路由\"></a>添加静态路由</h3><p>其他办公室电脑没有到 <code>n2n</code> 网络的路由，因此数据包会发送到办公室网关</p>\n<p>此时需要配置办公室网关，添加一条指向 <code>n2n</code> 网络的静态路由，下一条为办公室服务器的办公网地址</p>\n<p><img src=\"/2023/12/06/n2nBeginner/gwRoute.png\"></p>\n<h2 id=\"配置家庭服务器\"><a href=\"#配置家庭服务器\" class=\"headerlink\" title=\"配置家庭服务器\"></a>配置家庭服务器</h2><h3 id=\"配置edge，设置自动添加路由\"><a href=\"#配置edge，设置自动添加路由\" class=\"headerlink\" title=\"配置edge，设置自动添加路由\"></a>配置edge，设置自动添加路由</h3><p>家庭服务器的 <code>edge</code> 安装配置过程与办公室服务器的 <code>edge</code> 大致相同，但有两点需要注意：</p>\n<ol>\n<li>无需添加<code>-r</code>参数，因为家庭服务器不需要将来自其他设备的包转发到<code>n2n</code>网络</li>\n<li>需要添加<code>-n</code>参数，这样<code>edge</code>启动时会自动产生一条通过<code>n2n</code>网络到达办公室网络的路由</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>edge.conf</span></div><code class=\"language-bash\"><span class=\"token parameter variable\">-d</span><span class=\"token operator\">=</span>n2n0 <span class=\"token comment\"># 指定虚拟网卡名称</span>\n<span class=\"token parameter variable\">-c</span><span class=\"token operator\">=</span>msj2701 <span class=\"token comment\"># community名称</span>\n<span class=\"token parameter variable\">-k</span><span class=\"token operator\">=</span><span class=\"token number\">888888</span> <span class=\"token comment\"># 通讯加密密钥</span>\n<span class=\"token parameter variable\">-a</span><span class=\"token operator\">=</span><span class=\"token number\">10.0</span>.34.41 <span class=\"token comment\"># 在n2n网络中的地址</span>\n<span class=\"token parameter variable\">-l</span><span class=\"token operator\">=</span><span class=\"token number\">88.88</span>.88.88:17777 <span class=\"token comment\"># supernode公网地址</span>\n<span class=\"token parameter variable\">-n</span><span class=\"token operator\">=</span><span class=\"token number\">192.168</span>.34.0/24:10.0.34.21<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h1><h2 id=\"n2n网络验证\"><a href=\"#n2n网络验证\" class=\"headerlink\" title=\"n2n网络验证\"></a>n2n网络验证</h2><p>使用 <code>n2n</code> 网络地址从办公室服务器ping家庭服务器，或从家庭服务器ping办公室服务器，成功</p>\n<p>此时数据包的实际流向是 办公室服务器-&gt;办公室网关-&gt;运营商网络-&gt;家庭网关-&gt;家庭服务器</p>\n<p>由于 <code>n2n</code> vpn的配置，此时可以认为办公室服务器和家庭服务器处在同一局域网下，tracert也仅一跳可达</p>\n<p><img src=\"/2023/12/06/n2nBeginner/trace.png\"></p>\n<h2 id=\"办公室电脑到家庭服务器网络验证\"><a href=\"#办公室电脑到家庭服务器网络验证\" class=\"headerlink\" title=\"办公室电脑到家庭服务器网络验证\"></a>办公室电脑到家庭服务器网络验证</h2><p>办公室电脑ping家庭服务器，成功</p>\n<p>此时数据包流向是 办公室电脑-&gt;办公室网关-&gt;办公室服务器-&gt;家庭服务器，其中办公室服务器到家庭服务器是 <code>n2n</code> 虚拟链路</p>\n<p>tracert三跳可达</p>\n<p><img src=\"/2023/12/06/n2nBeginner/trace2.png\"></p>\n<h2 id=\"家庭服务器到办公室电脑\"><a href=\"#家庭服务器到办公室电脑\" class=\"headerlink\" title=\"家庭服务器到办公室电脑\"></a>家庭服务器到办公室电脑</h2><p>家庭服务器ping办公室电脑，成功</p>\n<p>此时数据包流向是 家庭服务器-&gt;办公室服务器-&gt;办公室电脑，其中家庭服务器到办公室服务器是 <code>n2n</code> 虚拟链路</p>\n<p>tracert两跳可达</p>\n<p><img src=\"/2023/12/06/n2nBeginner/trace3.png\"></p>"}],"PostAsset":[{"_id":"source/_posts/SSHInSubSocks/wireshark.png","slug":"wireshark.png","post":"clpb486650002jwti6b8n35pi","modified":0,"renderable":0},{"_id":"source/_posts/pythonJupyter/JupyterLab-1.png","slug":"JupyterLab-1.png","post":"clpkvx8tw000cy0ti7d7x5ia4","modified":0,"renderable":0},{"_id":"source/_posts/pythonJupyter/JupyterLab-2.png","slug":"JupyterLab-2.png","post":"clpkvx8tw000cy0ti7d7x5ia4","modified":0,"renderable":0},{"_id":"source/_posts/pythonJupyter/JupyterLab-3.png","slug":"JupyterLab-3.png","post":"clpkvx8tw000cy0ti7d7x5ia4","modified":0,"renderable":0},{"_id":"source/_posts/weekreport2chart/disable.png","slug":"disable.png","post":"clprsal5p0000p4ti8ye19bae","modified":0,"renderable":0},{"_id":"source/_posts/weekreport2chart/wordcloud.png","slug":"wordcloud.png","post":"clprsal5p0000p4ti8ye19bae","modified":0,"renderable":0},{"_id":"source/_posts/weekreport2chart/river.png","slug":"river.png","post":"clprsal5p0000p4ti8ye19bae","modified":0,"renderable":0},{"_id":"source/_posts/n2nBeginner/supernodeVerify.png","slug":"supernodeVerify.png","post":"clptecjzv0000igti0e9dedsg","modified":0,"renderable":0},{"_id":"source/_posts/n2nBeginner/installVerify.png","slug":"installVerify.png","post":"clptecjzv0000igti0e9dedsg","modified":0,"renderable":0},{"_id":"source/_posts/n2nBeginner/edgeVerify.png","slug":"edgeVerify.png","post":"clptecjzv0000igti0e9dedsg","modified":0,"renderable":0},{"_id":"source/_posts/n2nBeginner/gwRoute.png","slug":"gwRoute.png","post":"clptecjzv0000igti0e9dedsg","modified":0,"renderable":0},{"_id":"source/_posts/n2nBeginner/trace.png","slug":"trace.png","post":"clptecjzv0000igti0e9dedsg","modified":0,"renderable":0},{"_id":"source/_posts/n2nBeginner/trace2.png","slug":"trace2.png","post":"clptecjzv0000igti0e9dedsg","modified":0,"renderable":0},{"_id":"source/_posts/n2nBeginner/trace3.png","slug":"trace3.png","post":"clptecjzv0000igti0e9dedsg","modified":0,"renderable":0}],"PostCategory":[{"post_id":"clpb486630001jwti8ax46a41","category_id":"clpb486670003jwti7jt4etu4","_id":"clpb4866b000ajwtidiel1ukd"},{"post_id":"clpb486650002jwti6b8n35pi","category_id":"clpb486670003jwti7jt4etu4","_id":"clpb4866c000djwtigwa7fwlc"},{"post_id":"clpb486680005jwti3geu5uri","category_id":"clpb4866b0009jwti2y7d0w21","_id":"clpb4866d000hjwti25pxd58y"},{"post_id":"clpb486690006jwtifqfn06fb","category_id":"clpb4866c000fjwti3g4phs3j","_id":"clpb4866d000ljwti0oc09lj5"},{"post_id":"clpbyjvz20000mgtih16ad32g","category_id":"clpc1b6yn00000cti5m7hbrzi","_id":"clpc1b6yp00030cti9gd0haun"},{"post_id":"clpcbnje30000hgtid1lv62q2","category_id":"clpc1b6yn00000cti5m7hbrzi","_id":"clpcbnje70003hgti618m77gq"},{"post_id":"clpj53yr000055kti4s749y5p","category_id":"clpj50l1v00015ktifdtr106g","_id":"clpj53yr100085kti72n0e8n0"},{"post_id":"clpklhp0u0007rkti05k83vid","category_id":"clpj50l1v00015ktifdtr106g","_id":"clpklhp0v000arktiheqc2b8a"},{"post_id":"clpkvx8tw000cy0ti7d7x5ia4","category_id":"clpj50l1v00015ktifdtr106g","_id":"clpkvx8tx000fy0ti6v4m2uu5"},{"post_id":"clplyeyyt0000a0tib2svg07l","category_id":"clpc1b6yn00000cti5m7hbrzi","_id":"clplyeyyv0003a0ti9wlf9boy"},{"post_id":"clpm95uc50000dgti24k88032","category_id":"clpb4866b0009jwti2y7d0w21","_id":"clpm95uc80003dgti24fyby99"},{"post_id":"clprs493q00007cti957a63r0","category_id":"clprs6y7g00067cti2bnm6jkd","_id":"clprs6y7h00097cti8tycaccw"},{"post_id":"clprsal5p0000p4ti8ye19bae","category_id":"clprs6y7g00067cti2bnm6jkd","_id":"clprsb7u40002p4ti604z8jl0"},{"post_id":"clptecjzv0000igti0e9dedsg","category_id":"clpulwiqo0001igti4sefh19c","_id":"clpulwiqr0005igtiejssfv1u"}],"PostTag":[{"post_id":"clpb486630001jwti8ax46a41","tag_id":"clpb486670004jwti6i1ycqvk","_id":"clpb4866c000cjwtid26u4okn"},{"post_id":"clpb486630001jwti8ax46a41","tag_id":"clpb4866a0008jwti9nmkb80t","_id":"clpb4866c000ejwti379ubcld"},{"post_id":"clpb486650002jwti6b8n35pi","tag_id":"clpb486670004jwti6i1ycqvk","_id":"clpb4866d000jjwti6cf4bseo"},{"post_id":"clpb486650002jwti6b8n35pi","tag_id":"clpb4866a0008jwti9nmkb80t","_id":"clpb4866d000kjwtiefmw8v3z"},{"post_id":"clpb486680005jwti3geu5uri","tag_id":"clpb4866d000ijwti278r251p","_id":"clpb4866e000pjwti651y318s"},{"post_id":"clpb486680005jwti3geu5uri","tag_id":"clpb4866d000mjwti9u2t8p3s","_id":"clpb4866e000qjwti2yrecshn"},{"post_id":"clpb486680005jwti3geu5uri","tag_id":"clpb4866d000njwti4eibcc7t","_id":"clpb4866e000sjwti5uc41zxv"},{"post_id":"clpb486690006jwtifqfn06fb","tag_id":"clpb4866e000ojwti2hsn2odf","_id":"clpb4866f000ujwtiev5y22bz"},{"post_id":"clpb486690006jwtifqfn06fb","tag_id":"clpb486670004jwti6i1ycqvk","_id":"clpb4866f000vjwti8wvw5aoo"},{"post_id":"clpb486690006jwtifqfn06fb","tag_id":"clpb4866e000rjwtih2db703y","_id":"clpb4866f000wjwtigp949gkc"},{"post_id":"clpb486690006jwtifqfn06fb","tag_id":"clpb4866e000tjwti30mu7o4d","_id":"clpb4866f000xjwti72jk2hcd"},{"post_id":"clpbyjvz20000mgtih16ad32g","tag_id":"clpc1b6yo00010ctictk80j7i","_id":"clpc1b6yp00040ctidol08eh9"},{"post_id":"clpbyjvz20000mgtih16ad32g","tag_id":"clpc1b6yp00020cti3i7qcyjf","_id":"clpc1b6yp00050cti1r69cj5x"},{"post_id":"clpcbnje30000hgtid1lv62q2","tag_id":"clpc1b6yo00010ctictk80j7i","_id":"clpcbnje60001hgtib7acfe60"},{"post_id":"clpcbnje30000hgtid1lv62q2","tag_id":"clpc1b6yp00020cti3i7qcyjf","_id":"clpcbnje60002hgtidd6lep19"},{"post_id":"clpj53yr000055kti4s749y5p","tag_id":"clphoadkd0000s4tigxbf2g1f","_id":"clpj53yr100065ktide2x63li"},{"post_id":"clpj53yr000055kti4s749y5p","tag_id":"clpj53k1n00035kti2qyychru","_id":"clpj53yr100075ktid5fies8k"},{"post_id":"clpj53yr000055kti4s749y5p","tag_id":"clpc1b6yp00020cti3i7qcyjf","_id":"clpj53yr100095kti9w2ghsm6"},{"post_id":"clpj53yr000055kti4s749y5p","tag_id":"clpb4866d000ijwti278r251p","_id":"clpjgn3ha0006rkti1p940opj"},{"post_id":"clpklhp0u0007rkti05k83vid","tag_id":"clphoadkd0000s4tigxbf2g1f","_id":"clpklhp0u0008rkti5fe7acar"},{"post_id":"clpklhp0u0007rkti05k83vid","tag_id":"clpj53k1n00035kti2qyychru","_id":"clpklhp0v0009rkti8me3a3c3"},{"post_id":"clpklhp0u0007rkti05k83vid","tag_id":"clpc1b6yp00020cti3i7qcyjf","_id":"clpklhp0v000brktia2iy41qc"},{"post_id":"clpklhp0u0007rkti05k83vid","tag_id":"clpb4866d000ijwti278r251p","_id":"clpklhp0v000crktid0j491h1"},{"post_id":"clpkvx8tw000cy0ti7d7x5ia4","tag_id":"clphoadkd0000s4tigxbf2g1f","_id":"clpkvx8tx000dy0ti28la73ys"},{"post_id":"clpkvx8tw000cy0ti7d7x5ia4","tag_id":"clpj53k1n00035kti2qyychru","_id":"clpkvx8tx000ey0ti6ivb0426"},{"post_id":"clpkvx8tw000cy0ti7d7x5ia4","tag_id":"clpc1b6yp00020cti3i7qcyjf","_id":"clpkvx8tx000gy0ti7nwv24bo"},{"post_id":"clpkvx8tw000cy0ti7d7x5ia4","tag_id":"clpb4866d000ijwti278r251p","_id":"clpkvx8tx000hy0tief6hfh67"},{"post_id":"clplyeyyt0000a0tib2svg07l","tag_id":"clpc1b6yo00010ctictk80j7i","_id":"clplyeyyu0001a0ti1kx952ow"},{"post_id":"clplyeyyt0000a0tib2svg07l","tag_id":"clpc1b6yp00020cti3i7qcyjf","_id":"clplyeyyv0002a0ti33mc7kdu"},{"post_id":"clpm95uc50000dgti24k88032","tag_id":"clpb4866d000ijwti278r251p","_id":"clpm95uc80001dgti96us53op"},{"post_id":"clpm95uc50000dgti24k88032","tag_id":"clpb4866d000mjwti9u2t8p3s","_id":"clpm95uc80002dgtibf0j0e96"},{"post_id":"clpm95uc50000dgti24k88032","tag_id":"clpb4866d000njwti4eibcc7t","_id":"clpm95uc80004dgti78bt6o1g"},{"post_id":"clprs493q00007cti957a63r0","tag_id":"clpb4866e000rjwtih2db703y","_id":"clprs493v00017cti77sgdgvo"},{"post_id":"clprs493q00007cti957a63r0","tag_id":"clpj53k1n00035kti2qyychru","_id":"clprs493v00027cti969g1isr"},{"post_id":"clprs493q00007cti957a63r0","tag_id":"clprs6y7g00077ctiby826fje","_id":"clprs6y7h00087cti4qpu4y3v"},{"post_id":"clprsal5p0000p4ti8ye19bae","tag_id":"clprs6y7g00077ctiby826fje","_id":"clprsb7u40003p4tihsjp5a7b"},{"post_id":"clprsal5p0000p4ti8ye19bae","tag_id":"clphoadkd0000s4tigxbf2g1f","_id":"clprsb7u40004p4ti1a8h2ax5"},{"post_id":"clprsal5p0000p4ti8ye19bae","tag_id":"clprsb7u30001p4ti0luu7sgy","_id":"clprsb7u50005p4tiblhk1y3r"},{"post_id":"clptecjzv0000igti0e9dedsg","tag_id":"clpulwiqq0002igti3jaq4oon","_id":"clpulwiqq0003igtih3g978hx"},{"post_id":"clptecjzv0000igti0e9dedsg","tag_id":"clpb486670004jwti6i1ycqvk","_id":"clpulwiqr0004igti8bzlhzor"}],"Tag":[{"name":"网络编程","_id":"clpb486670004jwti6i1ycqvk"},{"name":"SSH","_id":"clpb4866a0008jwti9nmkb80t"},{"name":"豆知识","_id":"clpb4866d000ijwti278r251p"},{"name":"环境配置","_id":"clpb4866d000mjwti9u2t8p3s"},{"name":"Linux","_id":"clpb4866d000njwti4eibcc7t"},{"name":"项目实践","_id":"clpb4866e000ojwti2hsn2odf"},{"name":"golang","_id":"clpb4866e000rjwtih2db703y"},{"name":"串口通讯","_id":"clpb4866e000tjwti30mu7o4d"},{"name":"AI","_id":"clpc1b6yo00010ctictk80j7i"},{"name":"笔记","_id":"clpc1b6yp00020cti3i7qcyjf"},{"name":"python","_id":"clphoadkd0000s4tigxbf2g1f"},{"name":"库","_id":"clpj53k1n00035kti2qyychru"},{"name":"小玩具","_id":"clprs6y7g00077ctiby826fje"},{"name":"js","_id":"clprsb7u30001p4ti0luu7sgy"},{"name":"网络工具","_id":"clpulwiqq0002igti3jaq4oon"}]}}